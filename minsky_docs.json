{
  "documents": [
    "Вспомните, сколько раз при разработке нового или развитии старого приложения вам приходилось писать код заново? Приходилось снова разрабатывать структуру базы данных, новое API, новые функции JavaScript, переписывать механизмы интеграции?\nРазве не было бы здорово воспользоваться платформой, которая позволит не писать снова и снова один и тот же код? Платформа которая позволит скорее  приступить к реализации функций вашего приложения, вместо реализации функций, которые уже применены и используются на множестве других проектов. Именно для этого создана Платформа ARTA SYNERGY - ускорение разработки Enterprise-приложений.",
    "ARTA SYNERGY построена на платформе Java и может расширяться за счет добавления новых приложений и модификации существующих. Для этого используется два основных языка программирования - Java и JavaScript. При этом, Java и JavaScript не накладывают каких-либо значительных ограничений на интеграцию приложений с ARTA SYNERGY.\nНаиболее распространенные способы расширения или кастомизации функциональности ARTA SYNERGY:\nРазработка веб-приложений на основе форм. Веб-приложения на основе форм могут работать как в рамках самой Платформы, расширяя ее функциональность, так и в качестве интеграционных модулей любых сторонних веб-приложений.\nКастомизация существующих компонентов или приложений. Многие компоненты Платформы возможно менять, включая их логику и графический интерфейс.\nРазработка новых веб-сервисов для внешних систем и мобильных приложений.\nСобственная реализация различных подсистем Платформы. Для ключевых подсистем Платформы (например Хранилище) реализованы стандартные интерфейсы, реализация которых позволит заменить используемую подсистему. К примеру, таким образом можно заменить использование Apache Cassandra на СУБД Oracle.",
    "Что необходимо знать разработчику на Платформе ARTA SYNERGY?\nПлатформа создана полностью на открытом программном обеспечении (Open Source) с соблюдением соответствующих стандартов.\nПостроена на JavaEE, с использованием множества популярных технологий Java Platform.\nВы можете разрабатывать собственные веб, мобильные и десктопные приложения на ее основе.",
    "В основе Платформы ARTA SYNERGY используются лучшие мировые практики, стандарты и технологии. При выборе технологии, на которых будет создаваться какая либо функциональность, мы руководствуемся следующими критериями:\nДолжна быть достаточно современная, но при этом достаточно устоявшаяся, чтобы обеспечивать работоспособность в критических Enterpise окружениях\nДолжна иметь широкое распространение и развитое активное сообщество\nНаличие стабильных версий готовых к промышленной эксплуатации\nДолжна распространяться под лицензией LGPL или аналогичной c исходным кодом\nМы стремимся предоставить нашим разработчикам и пользователям современную, простую, стабильную платформу для создания собственных бизнес-приложений.\nARTA SYNERGY создана на популярных, хорошо известных и поддерживаемых технологиях\nВ основе стека технологий лежит JavaEE.",
    "Описание верхнеуровневой архитектуры.\nArta Synergy представляет собой платформу, которая позволяет быстро собирать приложения для автоматизации процессов предприятий:\nВ IDE synergy developer моделирует, конфигурирует и собирает приложение.\nДвижок BPM и ECM позволяет исполнить модель приложения с созданием экземпляров документов и процессов.\nНа основе созданных данных можно делать визуализацию и анализ.\nКонцепция платформы\nПлатформа Arta Synergy технически представляет собой монолитное enterprise приложение, запускаемое на сервере приложений Wildfly,\nв процессе своей работы взаимодействующее c пользователем, внутренними компонентами сервера приложений и внешними системами.\nArta Synergy предоставляет:\nдвижок процессов BPM, который позволяет настраивать и запускать бизнес процессы\nсистему управления контентом ECM для хранения документов в цифровом формате\nиндексатор для быстрого поиска\nДоступ к функционалу платформы осуществляется через UI клиента Synergy и IDE, а также через API.\nВерхнеуровневая архитектура платформы\nДля хранения структурированных данных используется СУБД Mysql.\nДля хранения бинарных данных используются jcr реализации JackRabbit либо собственная реализация jcr4c на основе noSql БД Cassandra.\nДля быстрого поиска используются индексы Lucene либо ElasticSearch.\nВ production mode схема инфраструктуры вместе со всеми вычислительными компонентами и хранилищами данных\nвыглядит следующим образом:\nСхема инфраструктуры платформы для production mode\n1.2.2.1. Архитектура ВPM\n1.2.2.2. Хранилище\n1.2.2.3. Индексатор",
    "Вспомните, сколько раз при разработке нового или развитии старого приложения вам приходилось писать код заново? Приходилось снова разрабатывать структуру базы данных, новое API, новые функции JavaScript, переписывать механизмы интеграции?\nРазве не было бы здорово воспользоваться платформой, которая позволит не писать снова и снова один и тот же код? Платформа которая позволит скорее  приступить к реализации функций вашего приложения, вместо реализации функций, которые уже применены и используются на множестве других проектов. Именно для этого создана Платформа ARTA SYNERGY - ускорение разработки Enterprise-приложений.",
    "ARTA SYNERGY построена на платформе Java и может расширяться за счет добавления новых приложений и модификации существующих. Для этого используется два основных языка программирования - Java и JavaScript. При этом, Java и JavaScript не накладывают каких-либо значительных ограничений на интеграцию приложений с ARTA SYNERGY.\nНаиболее распространенные способы расширения или кастомизации функциональности ARTA SYNERGY:\nРазработка веб-приложений на основе форм. Веб-приложения на основе форм могут работать как в рамках самой Платформы, расширяя ее функциональность, так и в качестве интеграционных модулей любых сторонних веб-приложений.\nКастомизация существующих компонентов или приложений. Многие компоненты Платформы возможно менять, включая их логику и графический интерфейс.\nРазработка новых веб-сервисов для внешних систем и мобильных приложений.\nСобственная реализация различных подсистем Платформы. Для ключевых подсистем Платформы (например Хранилище) реализованы стандартные интерфейсы, реализация которых позволит заменить используемую подсистему. К примеру, таким образом можно заменить использование Apache Cassandra на СУБД Oracle.",
    "Что необходимо знать разработчику на Платформе ARTA SYNERGY?\nПлатформа создана полностью на открытом программном обеспечении (Open Source) с соблюдением соответствующих стандартов.\nПостроена на JavaEE, с использованием множества популярных технологий Java Platform.\nВы можете разрабатывать собственные веб, мобильные и десктопные приложения на ее основе.",
    "В основе Платформы ARTA SYNERGY используются лучшие мировые практики, стандарты и технологии. При выборе технологии, на которых будет создаваться какая либо функциональность, мы руководствуемся следующими критериями:\nДолжна быть достаточно современная, но при этом достаточно устоявшаяся, чтобы обеспечивать работоспособность в критических Enterpise окружениях\nДолжна иметь широкое распространение и развитое активное сообщество\nНаличие стабильных версий готовых к промышленной эксплуатации\nДолжна распространяться под лицензией LGPL или аналогичной c исходным кодом\nМы стремимся предоставить нашим разработчикам и пользователям современную, простую, стабильную платформу для создания собственных бизнес-приложений.\nARTA SYNERGY создана на популярных, хорошо известных и поддерживаемых технологиях\nВ основе стека технологий лежит JavaEE.",
    "Описание верхнеуровневой архитектуры.\nArta Synergy представляет собой платформу, которая позволяет быстро собирать приложения для автоматизации процессов предприятий:\nВ IDE synergy developer моделирует, конфигурирует и собирает приложение.\nДвижок BPM и ECM позволяет исполнить модель приложения с созданием экземпляров документов и процессов.\nНа основе созданных данных можно делать визуализацию и анализ.\nКонцепция платформы\nПлатформа Arta Synergy технически представляет собой монолитное enterprise приложение, запускаемое на сервере приложений Wildfly,\nв процессе своей работы взаимодействующее c пользователем, внутренними компонентами сервера приложений и внешними системами.\nArta Synergy предоставляет:\nдвижок процессов BPM, который позволяет настраивать и запускать бизнес процессы\nсистему управления контентом ECM для хранения документов в цифровом формате\nиндексатор для быстрого поиска\nДоступ к функционалу платформы осуществляется через UI клиента Synergy и IDE, а также через API.\nВерхнеуровневая архитектура платформы\nДля хранения структурированных данных используется СУБД Mysql.\nДля хранения бинарных данных используются jcr реализации JackRabbit либо собственная реализация jcr4c на основе noSql БД Cassandra.\nДля быстрого поиска используются индексы Lucene либо ElasticSearch.\nВ production mode схема инфраструктуры вместе со всеми вычислительными компонентами и хранилищами данных\nвыглядит следующим образом:\nСхема инфраструктуры платформы для production mode\n1.2.2.1. Архитектура ВPM\n1.2.2.2. Хранилище\n1.2.2.3. Индексатор",
    "Вспомните, сколько раз при разработке нового или развитии старого приложения вам приходилось писать код заново? Приходилось снова разрабатывать структуру базы данных, новое API, новые функции JavaScript, переписывать механизмы интеграции?\nРазве не было бы здорово воспользоваться платформой, которая позволит не писать снова и снова один и тот же код? Платформа которая позволит скорее  приступить к реализации функций вашего приложения, вместо реализации функций, которые уже применены и используются на множестве других проектов. Именно для этого создана Платформа ARTA SYNERGY - ускорение разработки Enterprise-приложений.",
    "ARTA SYNERGY построена на платформе Java и может расширяться за счет добавления новых приложений и модификации существующих. Для этого используется два основных языка программирования - Java и JavaScript. При этом, Java и JavaScript не накладывают каких-либо значительных ограничений на интеграцию приложений с ARTA SYNERGY.\nНаиболее распространенные способы расширения или кастомизации функциональности ARTA SYNERGY:\nРазработка веб-приложений на основе форм. Веб-приложения на основе форм могут работать как в рамках самой Платформы, расширяя ее функциональность, так и в качестве интеграционных модулей любых сторонних веб-приложений.\nКастомизация существующих компонентов или приложений. Многие компоненты Платформы возможно менять, включая их логику и графический интерфейс.\nРазработка новых веб-сервисов для внешних систем и мобильных приложений.\nСобственная реализация различных подсистем Платформы. Для ключевых подсистем Платформы (например Хранилище) реализованы стандартные интерфейсы, реализация которых позволит заменить используемую подсистему. К примеру, таким образом можно заменить использование Apache Cassandra на СУБД Oracle.",
    "Что необходимо знать разработчику на Платформе ARTA SYNERGY?\nПлатформа создана полностью на открытом программном обеспечении (Open Source) с соблюдением соответствующих стандартов.\nПостроена на JavaEE, с использованием множества популярных технологий Java Platform.\nВы можете разрабатывать собственные веб, мобильные и десктопные приложения на ее основе.",
    "В основе Платформы ARTA SYNERGY используются лучшие мировые практики, стандарты и технологии. При выборе технологии, на которых будет создаваться какая либо функциональность, мы руководствуемся следующими критериями:\nДолжна быть достаточно современная, но при этом достаточно устоявшаяся, чтобы обеспечивать работоспособность в критических Enterpise окружениях\nДолжна иметь широкое распространение и развитое активное сообщество\nНаличие стабильных версий готовых к промышленной эксплуатации\nДолжна распространяться под лицензией LGPL или аналогичной c исходным кодом\nМы стремимся предоставить нашим разработчикам и пользователям современную, простую, стабильную платформу для создания собственных бизнес-приложений.\nARTA SYNERGY создана на популярных, хорошо известных и поддерживаемых технологиях\nВ основе стека технологий лежит JavaEE.",
    "Описание верхнеуровневой архитектуры.\nArta Synergy представляет собой платформу, которая позволяет быстро собирать приложения для автоматизации процессов предприятий:\nВ IDE synergy developer моделирует, конфигурирует и собирает приложение.\nДвижок BPM и ECM позволяет исполнить модель приложения с созданием экземпляров документов и процессов.\nНа основе созданных данных можно делать визуализацию и анализ.\nКонцепция платформы\nПлатформа Arta Synergy технически представляет собой монолитное enterprise приложение, запускаемое на сервере приложений Wildfly,\nв процессе своей работы взаимодействующее c пользователем, внутренними компонентами сервера приложений и внешними системами.\nArta Synergy предоставляет:\nдвижок процессов BPM, который позволяет настраивать и запускать бизнес процессы\nсистему управления контентом ECM для хранения документов в цифровом формате\nиндексатор для быстрого поиска\nДоступ к функционалу платформы осуществляется через UI клиента Synergy и IDE, а также через API.\nВерхнеуровневая архитектура платформы\nДля хранения структурированных данных используется СУБД Mysql.\nДля хранения бинарных данных используются jcr реализации JackRabbit либо собственная реализация jcr4c на основе noSql БД Cassandra.\nДля быстрого поиска используются индексы Lucene либо ElasticSearch.\nВ production mode схема инфраструктуры вместе со всеми вычислительными компонентами и хранилищами данных\nвыглядит следующим образом:\nСхема инфраструктуры платформы для production mode\n1.2.2.1. Архитектура ВPM\n1.2.2.2. Хранилище\n1.2.2.3. Индексатор",
    "Основные требования и некоторые детали задачи описаны в\nсоответствующей постановке:«Скриптинг в формах»\nВ данном же документе описываются все используемые для\nскриптинга модели, свойства и методы.\nПримеры использования скриптинга можно найти в разделеВарианты использования внешнего проигрывателя форм.\nИспользуемые технологии и библиотеки:\njQuery\nUnderscore- утилиты\nBackbone- UI компоненты\nMarionette- UI компоненты\njQuery ui- UI компоненты\nmath.js- поддержка математики больших чисел\nXregExp.js- поддержка более сложных регулярных\nвыражений",
    "Общая схема работы проигрывателя\nПроцесс изменения модели\nПроцесс изменения значения компонента\nВзаимодействие со средой",
    "AS- общее пространство имен\nAS.FORMS- проигрыватель, компоненты форм, утилиты\nAS.SERVICES- сервисы\nAS.LOGGER- логгер собщений и ошибок исполнения\nAS.OPTIONS- параметры приложения",
    "В области видимости скрипта компонента имеются следующие\nпеременные:\nmodel- модель текущего компонента;\nview- отображение текущего компонента;\neditable- режим (просмотр / редактирование);\nmodel.playerModel- модель проигрывателя;\nview.playerView- отображение проигрывателя.\nСкрипт компонента выполняется каждый раз при смене режима\nпроигрывателя (просмотр - редактирование). При этоммоделькомпонента остается та же, аотображениекомпонента каждый\nраз пересоздается. Поэтому при написании скриптов следует\nучесть следующее: если добавляются или переписываются методы\nмодели, либо происходит подписывание на события другой модели,\nто рекомендуется использовать следующее:\nЧтобы указать значение компонента при создании данных по форме,\nследует написать скрипт:\n«Строгий режим» JavaScript:\nНачиная с версии Synergy 3.14, все пользовательские скрипты\nвыполняются с добавлением директивыusestrict. Эта директива\nозначает, что соответствующий ей код будет выполнятся в так\nназываемом«строгом режиме», поддерживающем стандартJavaScriptECMAScript5\nПредупреждение\nЕсли код скрипта содержит конструкции, не соответствующие стандарту ES5, то они не будут выполняться. Это не является ошибкой Synergy.",
    "Пользовательский компонент (ПК) - это компонент, написанный разработчиком Synergy,\nкоторый можно использовать на форме либо в ui Synergy.\nВ данной главе речь пойдет о пользовательском компоненте, который будет использован на форме.\nДля настройки компонента необходимо в разделе Процессы конфигуратора выбрать пункт «Пользовательские компоненты».\nВ области редактирования компонета можно ввести название, код, HTML код и JAVASCRIPT код (js код),\nа также указать будет ли использован компонент в формах.\nКак и любой компонент на форме, пользовательский компонент имеет модельCustomComponentModelи отображениеCustomComponentView.\nСхема загрузки пользовательского компонента на форме\nПри создании функции на основе js кода ПК, основной код начинается с объявления переменныхvarmodel=arguments[0],view=arguments[1],editable=arguments[2];\nПеременнаяmodelхранит значение модели,view- отображение компонента.\nПеременнаяeditableопределяет режим отображения: редактирование или чтение.\nПоскольку схема загрузки ПК на форме отрабатывает каждый раз при изменении режима отображения проигрывателя,\nто и значения переменных так же будут актуальными.\nПеред созданием нового компонента необходимо определиться со следующими вопросами:\nКакие данные он будет хранить?\nКакие ошибки валидации данного компонента существуют?\nКак компонент должен выглядеть в режиме просмотра, редактирования, неправильно заполненным в режиме редактирования?\nОтветив на эти вопросы, можно приступить к написанию компонента.\nПредположим, нужно хранить в качестве значения компонента 3 поля:\ntext - введенный текст;\ntitle - подсказка (будет состоять из текста с постфиксом);\ninfo - дополнительная информация.\nТаким образом, в переменной value модели будет объект, содержащий эти 3 поля. Например:\nvalue={text:1,title:«Подсказка»,info:«Дополнительнаяинформация»}\nДанный объект необходимо передавать в метод моделиsetValue, а получать в методе моделиgetValue.\nЧтобы эти данные сохранялись в файл по форме и поднимались при последующем открытии, необходимо реализовать 2 метода модели:\ngetAsfData(blockNumber)\nsetAsfData(asfData)\nНеобходимо учесть, что поля сохраняемого объекта asfData могут иметь лишь следующий перечень наименований:\nvalue - обычно это текстовое значение компонента;\nkey - обычно это значение компонента;\nvalueID - дополнительный идентификатор;\nusername - имя пользователя;\nuserID - идентификатор пользователя;\nvalues - массив строк;\nkeys - массив строк.\nВсе эти поля необязательны, но объект, сохраняемый в файле по форме, может иметь только такие свойства.\nПример реализации этих методов:\nДалее необходимо определить список специальных ошибок.\nДля этого необходимо переопределить метод модели getSpecialErrors.\nВ данном примере проверяется, является ли значение равным 0.\nЕсли да, то это значит, что компонент неправильно заполнен и возвращается ошибка.\nSynergy при этом будет показывать, что данные заполнены некорректно.\nРабота с моделью теперь завершена.\nДалее будем работать с отображением.\nПредположим, что на вопрос №3 даны следующие ответы:\nВ режиме просмотра компонент должен представлять собой просто подпись.\nВ режиме редактирования - это поле ввода.\nНеобходимо отображать подсказку над полем ввода и подписью\nНеправильно заполненное поле должно подсвечивать красным кнопку компонента.\nНеобходимо инициализировать отображение, в зависимости от режима (просмотр или редактирование).\nВ области видимости есть переменная editable:\neditable = false соответствует режиму просмотра;\neditable = true соответствует режиму редактирования.\nHTML кодом для компонента будет следующим:\nДля режима просмотра берем div с innerId label, куда будет вставлено тестовое описание поля, и реализовать метод updateValueFromModel.\nДля режима редактирования берем компонент input и выполняем те же действия.\nПример:\nПри любом изменении модели автоматически вызовется метод updateValueFromModel и значение изменится.\nРеализуем методы  markInvalid, unmarkInvalid.\nПример:\nПри сохранении данных по форме компонент будет хранить значение в следующем виде:\nПолный js-код компонента:\n3.4.1. Пользовательский компонентКнопка\n3.4.2. Пользовательский компонентВыбор и создание записи реестра\n3.4.3. Пользовательский компонентВоронка продаж",
    "3.5.1. Параметры приложения\n3.5.2. Проигрыватель\n3.5.3. Компоненты3.5.3.1. Базовые3.5.3.2. «Страница» и «Таблица»3.5.3.3. «Неизменяемый текст»3.5.3.4. «Однострочное поле»3.5.3.5. «Числовое поле»3.5.3.6. «Многострочный текст»3.5.3.7. «HTD-редактор»3.5.3.8. «Выпадающий список»3.5.3.9. «Дата/время»3.5.3.10. «Выбор вариантов»3.5.3.11. «Переключатель вариантов»3.5.3.12. «Изображение»3.5.3.13. «Файл»3.5.3.14. «Ссылка»3.5.3.15. «Объекты Synergy»3.5.3.16. «Счетчик»3.5.3.17. «Лист подписей»3.5.3.18. «Лист резолюций»3.5.3.19. «Ход выполнения»3.5.3.20. «Ссылка на документ»3.5.3.21. «Период повторения»3.5.3.22. «Ссылка на проект/портфель»3.5.3.23. «Ссылка на реестр»3.5.3.24. «Ссылка на адресную книгу»3.5.3.25. «Свойства документа»3.5.3.26. «Ссылка на файл в хранилище»\n3.5.3.1. Базовые\n3.5.3.2. «Страница» и «Таблица»\n3.5.3.3. «Неизменяемый текст»\n3.5.3.4. «Однострочное поле»\n3.5.3.5. «Числовое поле»\n3.5.3.6. «Многострочный текст»\n3.5.3.7. «HTD-редактор»\n3.5.3.8. «Выпадающий список»\n3.5.3.9. «Дата/время»\n3.5.3.10. «Выбор вариантов»\n3.5.3.11. «Переключатель вариантов»\n3.5.3.12. «Изображение»\n3.5.3.13. «Файл»\n3.5.3.14. «Ссылка»\n3.5.3.15. «Объекты Synergy»\n3.5.3.16. «Счетчик»\n3.5.3.17. «Лист подписей»\n3.5.3.18. «Лист резолюций»\n3.5.3.19. «Ход выполнения»\n3.5.3.20. «Ссылка на документ»\n3.5.3.21. «Период повторения»\n3.5.3.22. «Ссылка на проект/портфель»\n3.5.3.23. «Ссылка на реестр»\n3.5.3.24. «Ссылка на адресную книгу»\n3.5.3.25. «Свойства документа»\n3.5.3.26. «Ссылка на файл в хранилище»\n3.5.4. Сервисы\n3.5.5. Утилиты3.5.5.1. AS.FORMS.ApiUtils\n3.5.5.1. AS.FORMS.ApiUtils\n3.5.6. Логгер",
    "Основные требования и некоторые детали задачи описаны в\nсоответствующей постановке:«Скриптинг в формах»\nВ данном же документе описываются все используемые для\nскриптинга модели, свойства и методы.\nПримеры использования скриптинга можно найти в разделеВарианты использования внешнего проигрывателя форм.\nИспользуемые технологии и библиотеки:\njQuery\nUnderscore- утилиты\nBackbone- UI компоненты\nMarionette- UI компоненты\njQuery ui- UI компоненты\nmath.js- поддержка математики больших чисел\nXregExp.js- поддержка более сложных регулярных\nвыражений",
    "Общая схема работы проигрывателя\nПроцесс изменения модели\nПроцесс изменения значения компонента\nВзаимодействие со средой",
    "AS- общее пространство имен\nAS.FORMS- проигрыватель, компоненты форм, утилиты\nAS.SERVICES- сервисы\nAS.LOGGER- логгер собщений и ошибок исполнения\nAS.OPTIONS- параметры приложения",
    "В области видимости скрипта компонента имеются следующие\nпеременные:\nmodel- модель текущего компонента;\nview- отображение текущего компонента;\neditable- режим (просмотр / редактирование);\nmodel.playerModel- модель проигрывателя;\nview.playerView- отображение проигрывателя.\nСкрипт компонента выполняется каждый раз при смене режима\nпроигрывателя (просмотр - редактирование). При этоммоделькомпонента остается та же, аотображениекомпонента каждый\nраз пересоздается. Поэтому при написании скриптов следует\nучесть следующее: если добавляются или переписываются методы\nмодели, либо происходит подписывание на события другой модели,\nто рекомендуется использовать следующее:\nЧтобы указать значение компонента при создании данных по форме,\nследует написать скрипт:\n«Строгий режим» JavaScript:\nНачиная с версии Synergy 3.14, все пользовательские скрипты\nвыполняются с добавлением директивыusestrict. Эта директива\nозначает, что соответствующий ей код будет выполнятся в так\nназываемом«строгом режиме», поддерживающем стандартJavaScriptECMAScript5\nПредупреждение\nЕсли код скрипта содержит конструкции, не соответствующие стандарту ES5, то они не будут выполняться. Это не является ошибкой Synergy.",
    "Пользовательский компонент (ПК) - это компонент, написанный разработчиком Synergy,\nкоторый можно использовать на форме либо в ui Synergy.\nВ данной главе речь пойдет о пользовательском компоненте, который будет использован на форме.\nДля настройки компонента необходимо в разделе Процессы конфигуратора выбрать пункт «Пользовательские компоненты».\nВ области редактирования компонета можно ввести название, код, HTML код и JAVASCRIPT код (js код),\nа также указать будет ли использован компонент в формах.\nКак и любой компонент на форме, пользовательский компонент имеет модельCustomComponentModelи отображениеCustomComponentView.\nСхема загрузки пользовательского компонента на форме\nПри создании функции на основе js кода ПК, основной код начинается с объявления переменныхvarmodel=arguments[0],view=arguments[1],editable=arguments[2];\nПеременнаяmodelхранит значение модели,view- отображение компонента.\nПеременнаяeditableопределяет режим отображения: редактирование или чтение.\nПоскольку схема загрузки ПК на форме отрабатывает каждый раз при изменении режима отображения проигрывателя,\nто и значения переменных так же будут актуальными.\nПеред созданием нового компонента необходимо определиться со следующими вопросами:\nКакие данные он будет хранить?\nКакие ошибки валидации данного компонента существуют?\nКак компонент должен выглядеть в режиме просмотра, редактирования, неправильно заполненным в режиме редактирования?\nОтветив на эти вопросы, можно приступить к написанию компонента.\nПредположим, нужно хранить в качестве значения компонента 3 поля:\ntext - введенный текст;\ntitle - подсказка (будет состоять из текста с постфиксом);\ninfo - дополнительная информация.\nТаким образом, в переменной value модели будет объект, содержащий эти 3 поля. Например:\nvalue={text:1,title:«Подсказка»,info:«Дополнительнаяинформация»}\nДанный объект необходимо передавать в метод моделиsetValue, а получать в методе моделиgetValue.\nЧтобы эти данные сохранялись в файл по форме и поднимались при последующем открытии, необходимо реализовать 2 метода модели:\ngetAsfData(blockNumber)\nsetAsfData(asfData)\nНеобходимо учесть, что поля сохраняемого объекта asfData могут иметь лишь следующий перечень наименований:\nvalue - обычно это текстовое значение компонента;\nkey - обычно это значение компонента;\nvalueID - дополнительный идентификатор;\nusername - имя пользователя;\nuserID - идентификатор пользователя;\nvalues - массив строк;\nkeys - массив строк.\nВсе эти поля необязательны, но объект, сохраняемый в файле по форме, может иметь только такие свойства.\nПример реализации этих методов:\nДалее необходимо определить список специальных ошибок.\nДля этого необходимо переопределить метод модели getSpecialErrors.\nВ данном примере проверяется, является ли значение равным 0.\nЕсли да, то это значит, что компонент неправильно заполнен и возвращается ошибка.\nSynergy при этом будет показывать, что данные заполнены некорректно.\nРабота с моделью теперь завершена.\nДалее будем работать с отображением.\nПредположим, что на вопрос №3 даны следующие ответы:\nВ режиме просмотра компонент должен представлять собой просто подпись.\nВ режиме редактирования - это поле ввода.\nНеобходимо отображать подсказку над полем ввода и подписью\nНеправильно заполненное поле должно подсвечивать красным кнопку компонента.\nНеобходимо инициализировать отображение, в зависимости от режима (просмотр или редактирование).\nВ области видимости есть переменная editable:\neditable = false соответствует режиму просмотра;\neditable = true соответствует режиму редактирования.\nHTML кодом для компонента будет следующим:\nДля режима просмотра берем div с innerId label, куда будет вставлено тестовое описание поля, и реализовать метод updateValueFromModel.\nДля режима редактирования берем компонент input и выполняем те же действия.\nПример:\nПри любом изменении модели автоматически вызовется метод updateValueFromModel и значение изменится.\nРеализуем методы  markInvalid, unmarkInvalid.\nПример:\nПри сохранении данных по форме компонент будет хранить значение в следующем виде:\nПолный js-код компонента:\n3.4.1. Пользовательский компонентКнопка\n3.4.2. Пользовательский компонентВыбор и создание записи реестра\n3.4.3. Пользовательский компонентВоронка продаж",
    "3.5.1. Параметры приложения\n3.5.2. Проигрыватель\n3.5.3. Компоненты3.5.3.1. Базовые3.5.3.2. «Страница» и «Таблица»3.5.3.3. «Неизменяемый текст»3.5.3.4. «Однострочное поле»3.5.3.5. «Числовое поле»3.5.3.6. «Многострочный текст»3.5.3.7. «HTD-редактор»3.5.3.8. «Выпадающий список»3.5.3.9. «Дата/время»3.5.3.10. «Выбор вариантов»3.5.3.11. «Переключатель вариантов»3.5.3.12. «Изображение»3.5.3.13. «Файл»3.5.3.14. «Ссылка»3.5.3.15. «Объекты Synergy»3.5.3.16. «Счетчик»3.5.3.17. «Лист подписей»3.5.3.18. «Лист резолюций»3.5.3.19. «Ход выполнения»3.5.3.20. «Ссылка на документ»3.5.3.21. «Период повторения»3.5.3.22. «Ссылка на проект/портфель»3.5.3.23. «Ссылка на реестр»3.5.3.24. «Ссылка на адресную книгу»3.5.3.25. «Свойства документа»3.5.3.26. «Ссылка на файл в хранилище»\n3.5.3.1. Базовые\n3.5.3.2. «Страница» и «Таблица»\n3.5.3.3. «Неизменяемый текст»\n3.5.3.4. «Однострочное поле»\n3.5.3.5. «Числовое поле»\n3.5.3.6. «Многострочный текст»\n3.5.3.7. «HTD-редактор»\n3.5.3.8. «Выпадающий список»\n3.5.3.9. «Дата/время»\n3.5.3.10. «Выбор вариантов»\n3.5.3.11. «Переключатель вариантов»\n3.5.3.12. «Изображение»\n3.5.3.13. «Файл»\n3.5.3.14. «Ссылка»\n3.5.3.15. «Объекты Synergy»\n3.5.3.16. «Счетчик»\n3.5.3.17. «Лист подписей»\n3.5.3.18. «Лист резолюций»\n3.5.3.19. «Ход выполнения»\n3.5.3.20. «Ссылка на документ»\n3.5.3.21. «Период повторения»\n3.5.3.22. «Ссылка на проект/портфель»\n3.5.3.23. «Ссылка на реестр»\n3.5.3.24. «Ссылка на адресную книгу»\n3.5.3.25. «Свойства документа»\n3.5.3.26. «Ссылка на файл в хранилище»\n3.5.4. Сервисы\n3.5.5. Утилиты3.5.5.1. AS.FORMS.ApiUtils\n3.5.5.1. AS.FORMS.ApiUtils\n3.5.6. Логгер",
    "Основные требования и некоторые детали задачи описаны в\nсоответствующей постановке:«Скриптинг в формах»\nВ данном же документе описываются все используемые для\nскриптинга модели, свойства и методы.\nПримеры использования скриптинга можно найти в разделеВарианты использования внешнего проигрывателя форм.\nИспользуемые технологии и библиотеки:\njQuery\nUnderscore- утилиты\nBackbone- UI компоненты\nMarionette- UI компоненты\njQuery ui- UI компоненты\nmath.js- поддержка математики больших чисел\nXregExp.js- поддержка более сложных регулярных\nвыражений",
    "Общая схема работы проигрывателя\nПроцесс изменения модели\nПроцесс изменения значения компонента\nВзаимодействие со средой",
    "AS- общее пространство имен\nAS.FORMS- проигрыватель, компоненты форм, утилиты\nAS.SERVICES- сервисы\nAS.LOGGER- логгер собщений и ошибок исполнения\nAS.OPTIONS- параметры приложения",
    "В области видимости скрипта компонента имеются следующие\nпеременные:\nmodel- модель текущего компонента;\nview- отображение текущего компонента;\neditable- режим (просмотр / редактирование);\nmodel.playerModel- модель проигрывателя;\nview.playerView- отображение проигрывателя.\nСкрипт компонента выполняется каждый раз при смене режима\nпроигрывателя (просмотр - редактирование). При этоммоделькомпонента остается та же, аотображениекомпонента каждый\nраз пересоздается. Поэтому при написании скриптов следует\nучесть следующее: если добавляются или переписываются методы\nмодели, либо происходит подписывание на события другой модели,\nто рекомендуется использовать следующее:\nЧтобы указать значение компонента при создании данных по форме,\nследует написать скрипт:\n«Строгий режим» JavaScript:\nНачиная с версии Synergy 3.14, все пользовательские скрипты\nвыполняются с добавлением директивыusestrict. Эта директива\nозначает, что соответствующий ей код будет выполнятся в так\nназываемом«строгом режиме», поддерживающем стандартJavaScriptECMAScript5\nПредупреждение\nЕсли код скрипта содержит конструкции, не соответствующие стандарту ES5, то они не будут выполняться. Это не является ошибкой Synergy.",
    "Пользовательский компонент (ПК) - это компонент, написанный разработчиком Synergy,\nкоторый можно использовать на форме либо в ui Synergy.\nВ данной главе речь пойдет о пользовательском компоненте, который будет использован на форме.\nДля настройки компонента необходимо в разделе Процессы конфигуратора выбрать пункт «Пользовательские компоненты».\nВ области редактирования компонета можно ввести название, код, HTML код и JAVASCRIPT код (js код),\nа также указать будет ли использован компонент в формах.\nКак и любой компонент на форме, пользовательский компонент имеет модельCustomComponentModelи отображениеCustomComponentView.\nСхема загрузки пользовательского компонента на форме\nПри создании функции на основе js кода ПК, основной код начинается с объявления переменныхvarmodel=arguments[0],view=arguments[1],editable=arguments[2];\nПеременнаяmodelхранит значение модели,view- отображение компонента.\nПеременнаяeditableопределяет режим отображения: редактирование или чтение.\nПоскольку схема загрузки ПК на форме отрабатывает каждый раз при изменении режима отображения проигрывателя,\nто и значения переменных так же будут актуальными.\nПеред созданием нового компонента необходимо определиться со следующими вопросами:\nКакие данные он будет хранить?\nКакие ошибки валидации данного компонента существуют?\nКак компонент должен выглядеть в режиме просмотра, редактирования, неправильно заполненным в режиме редактирования?\nОтветив на эти вопросы, можно приступить к написанию компонента.\nПредположим, нужно хранить в качестве значения компонента 3 поля:\ntext - введенный текст;\ntitle - подсказка (будет состоять из текста с постфиксом);\ninfo - дополнительная информация.\nТаким образом, в переменной value модели будет объект, содержащий эти 3 поля. Например:\nvalue={text:1,title:«Подсказка»,info:«Дополнительнаяинформация»}\nДанный объект необходимо передавать в метод моделиsetValue, а получать в методе моделиgetValue.\nЧтобы эти данные сохранялись в файл по форме и поднимались при последующем открытии, необходимо реализовать 2 метода модели:\ngetAsfData(blockNumber)\nsetAsfData(asfData)\nНеобходимо учесть, что поля сохраняемого объекта asfData могут иметь лишь следующий перечень наименований:\nvalue - обычно это текстовое значение компонента;\nkey - обычно это значение компонента;\nvalueID - дополнительный идентификатор;\nusername - имя пользователя;\nuserID - идентификатор пользователя;\nvalues - массив строк;\nkeys - массив строк.\nВсе эти поля необязательны, но объект, сохраняемый в файле по форме, может иметь только такие свойства.\nПример реализации этих методов:\nДалее необходимо определить список специальных ошибок.\nДля этого необходимо переопределить метод модели getSpecialErrors.\nВ данном примере проверяется, является ли значение равным 0.\nЕсли да, то это значит, что компонент неправильно заполнен и возвращается ошибка.\nSynergy при этом будет показывать, что данные заполнены некорректно.\nРабота с моделью теперь завершена.\nДалее будем работать с отображением.\nПредположим, что на вопрос №3 даны следующие ответы:\nВ режиме просмотра компонент должен представлять собой просто подпись.\nВ режиме редактирования - это поле ввода.\nНеобходимо отображать подсказку над полем ввода и подписью\nНеправильно заполненное поле должно подсвечивать красным кнопку компонента.\nНеобходимо инициализировать отображение, в зависимости от режима (просмотр или редактирование).\nВ области видимости есть переменная editable:\neditable = false соответствует режиму просмотра;\neditable = true соответствует режиму редактирования.\nHTML кодом для компонента будет следующим:\nДля режима просмотра берем div с innerId label, куда будет вставлено тестовое описание поля, и реализовать метод updateValueFromModel.\nДля режима редактирования берем компонент input и выполняем те же действия.\nПример:\nПри любом изменении модели автоматически вызовется метод updateValueFromModel и значение изменится.\nРеализуем методы  markInvalid, unmarkInvalid.\nПример:\nПри сохранении данных по форме компонент будет хранить значение в следующем виде:\nПолный js-код компонента:\n3.4.1. Пользовательский компонентКнопка\n3.4.2. Пользовательский компонентВыбор и создание записи реестра\n3.4.3. Пользовательский компонентВоронка продаж",
    "3.5.1. Параметры приложения\n3.5.2. Проигрыватель\n3.5.3. Компоненты3.5.3.1. Базовые3.5.3.2. «Страница» и «Таблица»3.5.3.3. «Неизменяемый текст»3.5.3.4. «Однострочное поле»3.5.3.5. «Числовое поле»3.5.3.6. «Многострочный текст»3.5.3.7. «HTD-редактор»3.5.3.8. «Выпадающий список»3.5.3.9. «Дата/время»3.5.3.10. «Выбор вариантов»3.5.3.11. «Переключатель вариантов»3.5.3.12. «Изображение»3.5.3.13. «Файл»3.5.3.14. «Ссылка»3.5.3.15. «Объекты Synergy»3.5.3.16. «Счетчик»3.5.3.17. «Лист подписей»3.5.3.18. «Лист резолюций»3.5.3.19. «Ход выполнения»3.5.3.20. «Ссылка на документ»3.5.3.21. «Период повторения»3.5.3.22. «Ссылка на проект/портфель»3.5.3.23. «Ссылка на реестр»3.5.3.24. «Ссылка на адресную книгу»3.5.3.25. «Свойства документа»3.5.3.26. «Ссылка на файл в хранилище»\n3.5.3.1. Базовые\n3.5.3.2. «Страница» и «Таблица»\n3.5.3.3. «Неизменяемый текст»\n3.5.3.4. «Однострочное поле»\n3.5.3.5. «Числовое поле»\n3.5.3.6. «Многострочный текст»\n3.5.3.7. «HTD-редактор»\n3.5.3.8. «Выпадающий список»\n3.5.3.9. «Дата/время»\n3.5.3.10. «Выбор вариантов»\n3.5.3.11. «Переключатель вариантов»\n3.5.3.12. «Изображение»\n3.5.3.13. «Файл»\n3.5.3.14. «Ссылка»\n3.5.3.15. «Объекты Synergy»\n3.5.3.16. «Счетчик»\n3.5.3.17. «Лист подписей»\n3.5.3.18. «Лист резолюций»\n3.5.3.19. «Ход выполнения»\n3.5.3.20. «Ссылка на документ»\n3.5.3.21. «Период повторения»\n3.5.3.22. «Ссылка на проект/портфель»\n3.5.3.23. «Ссылка на реестр»\n3.5.3.24. «Ссылка на адресную книгу»\n3.5.3.25. «Свойства документа»\n3.5.3.26. «Ссылка на файл в хранилище»\n3.5.4. Сервисы\n3.5.5. Утилиты3.5.5.1. AS.FORMS.ApiUtils\n3.5.5.1. AS.FORMS.ApiUtils\n3.5.6. Логгер",
    "Основные требования и некоторые детали задачи описаны в\nсоответствующей постановке:«Скриптинг в формах»\nВ данном же документе описываются все используемые для\nскриптинга модели, свойства и методы.\nПримеры использования скриптинга можно найти в разделеВарианты использования внешнего проигрывателя форм.\nИспользуемые технологии и библиотеки:\njQuery\nUnderscore- утилиты\nBackbone- UI компоненты\nMarionette- UI компоненты\njQuery ui- UI компоненты\nmath.js- поддержка математики больших чисел\nXregExp.js- поддержка более сложных регулярных\nвыражений",
    "Общая схема работы проигрывателя\nПроцесс изменения модели\nПроцесс изменения значения компонента\nВзаимодействие со средой",
    "AS- общее пространство имен\nAS.FORMS- проигрыватель, компоненты форм, утилиты\nAS.SERVICES- сервисы\nAS.LOGGER- логгер собщений и ошибок исполнения\nAS.OPTIONS- параметры приложения",
    "В области видимости скрипта компонента имеются следующие\nпеременные:\nmodel- модель текущего компонента;\nview- отображение текущего компонента;\neditable- режим (просмотр / редактирование);\nmodel.playerModel- модель проигрывателя;\nview.playerView- отображение проигрывателя.\nСкрипт компонента выполняется каждый раз при смене режима\nпроигрывателя (просмотр - редактирование). При этоммоделькомпонента остается та же, аотображениекомпонента каждый\nраз пересоздается. Поэтому при написании скриптов следует\nучесть следующее: если добавляются или переписываются методы\nмодели, либо происходит подписывание на события другой модели,\nто рекомендуется использовать следующее:\nЧтобы указать значение компонента при создании данных по форме,\nследует написать скрипт:\n«Строгий режим» JavaScript:\nНачиная с версии Synergy 3.14, все пользовательские скрипты\nвыполняются с добавлением директивыusestrict. Эта директива\nозначает, что соответствующий ей код будет выполнятся в так\nназываемом«строгом режиме», поддерживающем стандартJavaScriptECMAScript5\nПредупреждение\nЕсли код скрипта содержит конструкции, не соответствующие стандарту ES5, то они не будут выполняться. Это не является ошибкой Synergy.",
    "Пользовательский компонент (ПК) - это компонент, написанный разработчиком Synergy,\nкоторый можно использовать на форме либо в ui Synergy.\nВ данной главе речь пойдет о пользовательском компоненте, который будет использован на форме.\nДля настройки компонента необходимо в разделе Процессы конфигуратора выбрать пункт «Пользовательские компоненты».\nВ области редактирования компонета можно ввести название, код, HTML код и JAVASCRIPT код (js код),\nа также указать будет ли использован компонент в формах.\nКак и любой компонент на форме, пользовательский компонент имеет модельCustomComponentModelи отображениеCustomComponentView.\nСхема загрузки пользовательского компонента на форме\nПри создании функции на основе js кода ПК, основной код начинается с объявления переменныхvarmodel=arguments[0],view=arguments[1],editable=arguments[2];\nПеременнаяmodelхранит значение модели,view- отображение компонента.\nПеременнаяeditableопределяет режим отображения: редактирование или чтение.\nПоскольку схема загрузки ПК на форме отрабатывает каждый раз при изменении режима отображения проигрывателя,\nто и значения переменных так же будут актуальными.\nПеред созданием нового компонента необходимо определиться со следующими вопросами:\nКакие данные он будет хранить?\nКакие ошибки валидации данного компонента существуют?\nКак компонент должен выглядеть в режиме просмотра, редактирования, неправильно заполненным в режиме редактирования?\nОтветив на эти вопросы, можно приступить к написанию компонента.\nПредположим, нужно хранить в качестве значения компонента 3 поля:\ntext - введенный текст;\ntitle - подсказка (будет состоять из текста с постфиксом);\ninfo - дополнительная информация.\nТаким образом, в переменной value модели будет объект, содержащий эти 3 поля. Например:\nvalue={text:1,title:«Подсказка»,info:«Дополнительнаяинформация»}\nДанный объект необходимо передавать в метод моделиsetValue, а получать в методе моделиgetValue.\nЧтобы эти данные сохранялись в файл по форме и поднимались при последующем открытии, необходимо реализовать 2 метода модели:\ngetAsfData(blockNumber)\nsetAsfData(asfData)\nНеобходимо учесть, что поля сохраняемого объекта asfData могут иметь лишь следующий перечень наименований:\nvalue - обычно это текстовое значение компонента;\nkey - обычно это значение компонента;\nvalueID - дополнительный идентификатор;\nusername - имя пользователя;\nuserID - идентификатор пользователя;\nvalues - массив строк;\nkeys - массив строк.\nВсе эти поля необязательны, но объект, сохраняемый в файле по форме, может иметь только такие свойства.\nПример реализации этих методов:\nДалее необходимо определить список специальных ошибок.\nДля этого необходимо переопределить метод модели getSpecialErrors.\nВ данном примере проверяется, является ли значение равным 0.\nЕсли да, то это значит, что компонент неправильно заполнен и возвращается ошибка.\nSynergy при этом будет показывать, что данные заполнены некорректно.\nРабота с моделью теперь завершена.\nДалее будем работать с отображением.\nПредположим, что на вопрос №3 даны следующие ответы:\nВ режиме просмотра компонент должен представлять собой просто подпись.\nВ режиме редактирования - это поле ввода.\nНеобходимо отображать подсказку над полем ввода и подписью\nНеправильно заполненное поле должно подсвечивать красным кнопку компонента.\nНеобходимо инициализировать отображение, в зависимости от режима (просмотр или редактирование).\nВ области видимости есть переменная editable:\neditable = false соответствует режиму просмотра;\neditable = true соответствует режиму редактирования.\nHTML кодом для компонента будет следующим:\nДля режима просмотра берем div с innerId label, куда будет вставлено тестовое описание поля, и реализовать метод updateValueFromModel.\nДля режима редактирования берем компонент input и выполняем те же действия.\nПример:\nПри любом изменении модели автоматически вызовется метод updateValueFromModel и значение изменится.\nРеализуем методы  markInvalid, unmarkInvalid.\nПример:\nПри сохранении данных по форме компонент будет хранить значение в следующем виде:\nПолный js-код компонента:\n3.4.1. Пользовательский компонентКнопка\n3.4.2. Пользовательский компонентВыбор и создание записи реестра\n3.4.3. Пользовательский компонентВоронка продаж",
    "3.5.1. Параметры приложения\n3.5.2. Проигрыватель\n3.5.3. Компоненты3.5.3.1. Базовые3.5.3.2. «Страница» и «Таблица»3.5.3.3. «Неизменяемый текст»3.5.3.4. «Однострочное поле»3.5.3.5. «Числовое поле»3.5.3.6. «Многострочный текст»3.5.3.7. «HTD-редактор»3.5.3.8. «Выпадающий список»3.5.3.9. «Дата/время»3.5.3.10. «Выбор вариантов»3.5.3.11. «Переключатель вариантов»3.5.3.12. «Изображение»3.5.3.13. «Файл»3.5.3.14. «Ссылка»3.5.3.15. «Объекты Synergy»3.5.3.16. «Счетчик»3.5.3.17. «Лист подписей»3.5.3.18. «Лист резолюций»3.5.3.19. «Ход выполнения»3.5.3.20. «Ссылка на документ»3.5.3.21. «Период повторения»3.5.3.22. «Ссылка на проект/портфель»3.5.3.23. «Ссылка на реестр»3.5.3.24. «Ссылка на адресную книгу»3.5.3.25. «Свойства документа»3.5.3.26. «Ссылка на файл в хранилище»\n3.5.3.1. Базовые\n3.5.3.2. «Страница» и «Таблица»\n3.5.3.3. «Неизменяемый текст»\n3.5.3.4. «Однострочное поле»\n3.5.3.5. «Числовое поле»\n3.5.3.6. «Многострочный текст»\n3.5.3.7. «HTD-редактор»\n3.5.3.8. «Выпадающий список»\n3.5.3.9. «Дата/время»\n3.5.3.10. «Выбор вариантов»\n3.5.3.11. «Переключатель вариантов»\n3.5.3.12. «Изображение»\n3.5.3.13. «Файл»\n3.5.3.14. «Ссылка»\n3.5.3.15. «Объекты Synergy»\n3.5.3.16. «Счетчик»\n3.5.3.17. «Лист подписей»\n3.5.3.18. «Лист резолюций»\n3.5.3.19. «Ход выполнения»\n3.5.3.20. «Ссылка на документ»\n3.5.3.21. «Период повторения»\n3.5.3.22. «Ссылка на проект/портфель»\n3.5.3.23. «Ссылка на реестр»\n3.5.3.24. «Ссылка на адресную книгу»\n3.5.3.25. «Свойства документа»\n3.5.3.26. «Ссылка на файл в хранилище»\n3.5.4. Сервисы\n3.5.5. Утилиты3.5.5.1. AS.FORMS.ApiUtils\n3.5.5.1. AS.FORMS.ApiUtils\n3.5.6. Логгер",
    "Основные требования и некоторые детали задачи описаны в\nсоответствующей постановке:«Скриптинг в формах»\nВ данном же документе описываются все используемые для\nскриптинга модели, свойства и методы.\nПримеры использования скриптинга можно найти в разделеВарианты использования внешнего проигрывателя форм.\nИспользуемые технологии и библиотеки:\njQuery\nUnderscore- утилиты\nBackbone- UI компоненты\nMarionette- UI компоненты\njQuery ui- UI компоненты\nmath.js- поддержка математики больших чисел\nXregExp.js- поддержка более сложных регулярных\nвыражений",
    "Общая схема работы проигрывателя\nПроцесс изменения модели\nПроцесс изменения значения компонента\nВзаимодействие со средой",
    "AS- общее пространство имен\nAS.FORMS- проигрыватель, компоненты форм, утилиты\nAS.SERVICES- сервисы\nAS.LOGGER- логгер собщений и ошибок исполнения\nAS.OPTIONS- параметры приложения",
    "В области видимости скрипта компонента имеются следующие\nпеременные:\nmodel- модель текущего компонента;\nview- отображение текущего компонента;\neditable- режим (просмотр / редактирование);\nmodel.playerModel- модель проигрывателя;\nview.playerView- отображение проигрывателя.\nСкрипт компонента выполняется каждый раз при смене режима\nпроигрывателя (просмотр - редактирование). При этоммоделькомпонента остается та же, аотображениекомпонента каждый\nраз пересоздается. Поэтому при написании скриптов следует\nучесть следующее: если добавляются или переписываются методы\nмодели, либо происходит подписывание на события другой модели,\nто рекомендуется использовать следующее:\nЧтобы указать значение компонента при создании данных по форме,\nследует написать скрипт:\n«Строгий режим» JavaScript:\nНачиная с версии Synergy 3.14, все пользовательские скрипты\nвыполняются с добавлением директивыusestrict. Эта директива\nозначает, что соответствующий ей код будет выполнятся в так\nназываемом«строгом режиме», поддерживающем стандартJavaScriptECMAScript5\nПредупреждение\nЕсли код скрипта содержит конструкции, не соответствующие стандарту ES5, то они не будут выполняться. Это не является ошибкой Synergy.",
    "Пользовательский компонент (ПК) - это компонент, написанный разработчиком Synergy,\nкоторый можно использовать на форме либо в ui Synergy.\nВ данной главе речь пойдет о пользовательском компоненте, который будет использован на форме.\nДля настройки компонента необходимо в разделе Процессы конфигуратора выбрать пункт «Пользовательские компоненты».\nВ области редактирования компонета можно ввести название, код, HTML код и JAVASCRIPT код (js код),\nа также указать будет ли использован компонент в формах.\nКак и любой компонент на форме, пользовательский компонент имеет модельCustomComponentModelи отображениеCustomComponentView.\nСхема загрузки пользовательского компонента на форме\nПри создании функции на основе js кода ПК, основной код начинается с объявления переменныхvarmodel=arguments[0],view=arguments[1],editable=arguments[2];\nПеременнаяmodelхранит значение модели,view- отображение компонента.\nПеременнаяeditableопределяет режим отображения: редактирование или чтение.\nПоскольку схема загрузки ПК на форме отрабатывает каждый раз при изменении режима отображения проигрывателя,\nто и значения переменных так же будут актуальными.\nПеред созданием нового компонента необходимо определиться со следующими вопросами:\nКакие данные он будет хранить?\nКакие ошибки валидации данного компонента существуют?\nКак компонент должен выглядеть в режиме просмотра, редактирования, неправильно заполненным в режиме редактирования?\nОтветив на эти вопросы, можно приступить к написанию компонента.\nПредположим, нужно хранить в качестве значения компонента 3 поля:\ntext - введенный текст;\ntitle - подсказка (будет состоять из текста с постфиксом);\ninfo - дополнительная информация.\nТаким образом, в переменной value модели будет объект, содержащий эти 3 поля. Например:\nvalue={text:1,title:«Подсказка»,info:«Дополнительнаяинформация»}\nДанный объект необходимо передавать в метод моделиsetValue, а получать в методе моделиgetValue.\nЧтобы эти данные сохранялись в файл по форме и поднимались при последующем открытии, необходимо реализовать 2 метода модели:\ngetAsfData(blockNumber)\nsetAsfData(asfData)\nНеобходимо учесть, что поля сохраняемого объекта asfData могут иметь лишь следующий перечень наименований:\nvalue - обычно это текстовое значение компонента;\nkey - обычно это значение компонента;\nvalueID - дополнительный идентификатор;\nusername - имя пользователя;\nuserID - идентификатор пользователя;\nvalues - массив строк;\nkeys - массив строк.\nВсе эти поля необязательны, но объект, сохраняемый в файле по форме, может иметь только такие свойства.\nПример реализации этих методов:\nДалее необходимо определить список специальных ошибок.\nДля этого необходимо переопределить метод модели getSpecialErrors.\nВ данном примере проверяется, является ли значение равным 0.\nЕсли да, то это значит, что компонент неправильно заполнен и возвращается ошибка.\nSynergy при этом будет показывать, что данные заполнены некорректно.\nРабота с моделью теперь завершена.\nДалее будем работать с отображением.\nПредположим, что на вопрос №3 даны следующие ответы:\nВ режиме просмотра компонент должен представлять собой просто подпись.\nВ режиме редактирования - это поле ввода.\nНеобходимо отображать подсказку над полем ввода и подписью\nНеправильно заполненное поле должно подсвечивать красным кнопку компонента.\nНеобходимо инициализировать отображение, в зависимости от режима (просмотр или редактирование).\nВ области видимости есть переменная editable:\neditable = false соответствует режиму просмотра;\neditable = true соответствует режиму редактирования.\nHTML кодом для компонента будет следующим:\nДля режима просмотра берем div с innerId label, куда будет вставлено тестовое описание поля, и реализовать метод updateValueFromModel.\nДля режима редактирования берем компонент input и выполняем те же действия.\nПример:\nПри любом изменении модели автоматически вызовется метод updateValueFromModel и значение изменится.\nРеализуем методы  markInvalid, unmarkInvalid.\nПример:\nПри сохранении данных по форме компонент будет хранить значение в следующем виде:\nПолный js-код компонента:\n3.4.1. Пользовательский компонентКнопка\n3.4.2. Пользовательский компонентВыбор и создание записи реестра\n3.4.3. Пользовательский компонентВоронка продаж",
    "3.5.1. Параметры приложения\n3.5.2. Проигрыватель\n3.5.3. Компоненты3.5.3.1. Базовые3.5.3.2. «Страница» и «Таблица»3.5.3.3. «Неизменяемый текст»3.5.3.4. «Однострочное поле»3.5.3.5. «Числовое поле»3.5.3.6. «Многострочный текст»3.5.3.7. «HTD-редактор»3.5.3.8. «Выпадающий список»3.5.3.9. «Дата/время»3.5.3.10. «Выбор вариантов»3.5.3.11. «Переключатель вариантов»3.5.3.12. «Изображение»3.5.3.13. «Файл»3.5.3.14. «Ссылка»3.5.3.15. «Объекты Synergy»3.5.3.16. «Счетчик»3.5.3.17. «Лист подписей»3.5.3.18. «Лист резолюций»3.5.3.19. «Ход выполнения»3.5.3.20. «Ссылка на документ»3.5.3.21. «Период повторения»3.5.3.22. «Ссылка на проект/портфель»3.5.3.23. «Ссылка на реестр»3.5.3.24. «Ссылка на адресную книгу»3.5.3.25. «Свойства документа»3.5.3.26. «Ссылка на файл в хранилище»\n3.5.3.1. Базовые\n3.5.3.2. «Страница» и «Таблица»\n3.5.3.3. «Неизменяемый текст»\n3.5.3.4. «Однострочное поле»\n3.5.3.5. «Числовое поле»\n3.5.3.6. «Многострочный текст»\n3.5.3.7. «HTD-редактор»\n3.5.3.8. «Выпадающий список»\n3.5.3.9. «Дата/время»\n3.5.3.10. «Выбор вариантов»\n3.5.3.11. «Переключатель вариантов»\n3.5.3.12. «Изображение»\n3.5.3.13. «Файл»\n3.5.3.14. «Ссылка»\n3.5.3.15. «Объекты Synergy»\n3.5.3.16. «Счетчик»\n3.5.3.17. «Лист подписей»\n3.5.3.18. «Лист резолюций»\n3.5.3.19. «Ход выполнения»\n3.5.3.20. «Ссылка на документ»\n3.5.3.21. «Период повторения»\n3.5.3.22. «Ссылка на проект/портфель»\n3.5.3.23. «Ссылка на реестр»\n3.5.3.24. «Ссылка на адресную книгу»\n3.5.3.25. «Свойства документа»\n3.5.3.26. «Ссылка на файл в хранилище»\n3.5.4. Сервисы\n3.5.5. Утилиты3.5.5.1. AS.FORMS.ApiUtils\n3.5.5.1. AS.FORMS.ApiUtils\n3.5.6. Логгер",
    "Основные требования и некоторые детали задачи описаны в\nсоответствующей постановке:«Скриптинг в формах»\nВ данном же документе описываются все используемые для\nскриптинга модели, свойства и методы.\nПримеры использования скриптинга можно найти в разделеВарианты использования внешнего проигрывателя форм.\nИспользуемые технологии и библиотеки:\njQuery\nUnderscore- утилиты\nBackbone- UI компоненты\nMarionette- UI компоненты\njQuery ui- UI компоненты\nmath.js- поддержка математики больших чисел\nXregExp.js- поддержка более сложных регулярных\nвыражений",
    "Общая схема работы проигрывателя\nПроцесс изменения модели\nПроцесс изменения значения компонента\nВзаимодействие со средой",
    "AS- общее пространство имен\nAS.FORMS- проигрыватель, компоненты форм, утилиты\nAS.SERVICES- сервисы\nAS.LOGGER- логгер собщений и ошибок исполнения\nAS.OPTIONS- параметры приложения",
    "В области видимости скрипта компонента имеются следующие\nпеременные:\nmodel- модель текущего компонента;\nview- отображение текущего компонента;\neditable- режим (просмотр / редактирование);\nmodel.playerModel- модель проигрывателя;\nview.playerView- отображение проигрывателя.\nСкрипт компонента выполняется каждый раз при смене режима\nпроигрывателя (просмотр - редактирование). При этоммоделькомпонента остается та же, аотображениекомпонента каждый\nраз пересоздается. Поэтому при написании скриптов следует\nучесть следующее: если добавляются или переписываются методы\nмодели, либо происходит подписывание на события другой модели,\nто рекомендуется использовать следующее:\nЧтобы указать значение компонента при создании данных по форме,\nследует написать скрипт:\n«Строгий режим» JavaScript:\nНачиная с версии Synergy 3.14, все пользовательские скрипты\nвыполняются с добавлением директивыusestrict. Эта директива\nозначает, что соответствующий ей код будет выполнятся в так\nназываемом«строгом режиме», поддерживающем стандартJavaScriptECMAScript5\nПредупреждение\nЕсли код скрипта содержит конструкции, не соответствующие стандарту ES5, то они не будут выполняться. Это не является ошибкой Synergy.",
    "Пользовательский компонент (ПК) - это компонент, написанный разработчиком Synergy,\nкоторый можно использовать на форме либо в ui Synergy.\nВ данной главе речь пойдет о пользовательском компоненте, который будет использован на форме.\nДля настройки компонента необходимо в разделе Процессы конфигуратора выбрать пункт «Пользовательские компоненты».\nВ области редактирования компонета можно ввести название, код, HTML код и JAVASCRIPT код (js код),\nа также указать будет ли использован компонент в формах.\nКак и любой компонент на форме, пользовательский компонент имеет модельCustomComponentModelи отображениеCustomComponentView.\nСхема загрузки пользовательского компонента на форме\nПри создании функции на основе js кода ПК, основной код начинается с объявления переменныхvarmodel=arguments[0],view=arguments[1],editable=arguments[2];\nПеременнаяmodelхранит значение модели,view- отображение компонента.\nПеременнаяeditableопределяет режим отображения: редактирование или чтение.\nПоскольку схема загрузки ПК на форме отрабатывает каждый раз при изменении режима отображения проигрывателя,\nто и значения переменных так же будут актуальными.\nПеред созданием нового компонента необходимо определиться со следующими вопросами:\nКакие данные он будет хранить?\nКакие ошибки валидации данного компонента существуют?\nКак компонент должен выглядеть в режиме просмотра, редактирования, неправильно заполненным в режиме редактирования?\nОтветив на эти вопросы, можно приступить к написанию компонента.\nПредположим, нужно хранить в качестве значения компонента 3 поля:\ntext - введенный текст;\ntitle - подсказка (будет состоять из текста с постфиксом);\ninfo - дополнительная информация.\nТаким образом, в переменной value модели будет объект, содержащий эти 3 поля. Например:\nvalue={text:1,title:«Подсказка»,info:«Дополнительнаяинформация»}\nДанный объект необходимо передавать в метод моделиsetValue, а получать в методе моделиgetValue.\nЧтобы эти данные сохранялись в файл по форме и поднимались при последующем открытии, необходимо реализовать 2 метода модели:\ngetAsfData(blockNumber)\nsetAsfData(asfData)\nНеобходимо учесть, что поля сохраняемого объекта asfData могут иметь лишь следующий перечень наименований:\nvalue - обычно это текстовое значение компонента;\nkey - обычно это значение компонента;\nvalueID - дополнительный идентификатор;\nusername - имя пользователя;\nuserID - идентификатор пользователя;\nvalues - массив строк;\nkeys - массив строк.\nВсе эти поля необязательны, но объект, сохраняемый в файле по форме, может иметь только такие свойства.\nПример реализации этих методов:\nДалее необходимо определить список специальных ошибок.\nДля этого необходимо переопределить метод модели getSpecialErrors.\nВ данном примере проверяется, является ли значение равным 0.\nЕсли да, то это значит, что компонент неправильно заполнен и возвращается ошибка.\nSynergy при этом будет показывать, что данные заполнены некорректно.\nРабота с моделью теперь завершена.\nДалее будем работать с отображением.\nПредположим, что на вопрос №3 даны следующие ответы:\nВ режиме просмотра компонент должен представлять собой просто подпись.\nВ режиме редактирования - это поле ввода.\nНеобходимо отображать подсказку над полем ввода и подписью\nНеправильно заполненное поле должно подсвечивать красным кнопку компонента.\nНеобходимо инициализировать отображение, в зависимости от режима (просмотр или редактирование).\nВ области видимости есть переменная editable:\neditable = false соответствует режиму просмотра;\neditable = true соответствует режиму редактирования.\nHTML кодом для компонента будет следующим:\nДля режима просмотра берем div с innerId label, куда будет вставлено тестовое описание поля, и реализовать метод updateValueFromModel.\nДля режима редактирования берем компонент input и выполняем те же действия.\nПример:\nПри любом изменении модели автоматически вызовется метод updateValueFromModel и значение изменится.\nРеализуем методы  markInvalid, unmarkInvalid.\nПример:\nПри сохранении данных по форме компонент будет хранить значение в следующем виде:\nПолный js-код компонента:\n3.4.1. Пользовательский компонентКнопка\n3.4.2. Пользовательский компонентВыбор и создание записи реестра\n3.4.3. Пользовательский компонентВоронка продаж",
    "3.5.1. Параметры приложения\n3.5.2. Проигрыватель\n3.5.3. Компоненты3.5.3.1. Базовые3.5.3.2. «Страница» и «Таблица»3.5.3.3. «Неизменяемый текст»3.5.3.4. «Однострочное поле»3.5.3.5. «Числовое поле»3.5.3.6. «Многострочный текст»3.5.3.7. «HTD-редактор»3.5.3.8. «Выпадающий список»3.5.3.9. «Дата/время»3.5.3.10. «Выбор вариантов»3.5.3.11. «Переключатель вариантов»3.5.3.12. «Изображение»3.5.3.13. «Файл»3.5.3.14. «Ссылка»3.5.3.15. «Объекты Synergy»3.5.3.16. «Счетчик»3.5.3.17. «Лист подписей»3.5.3.18. «Лист резолюций»3.5.3.19. «Ход выполнения»3.5.3.20. «Ссылка на документ»3.5.3.21. «Период повторения»3.5.3.22. «Ссылка на проект/портфель»3.5.3.23. «Ссылка на реестр»3.5.3.24. «Ссылка на адресную книгу»3.5.3.25. «Свойства документа»3.5.3.26. «Ссылка на файл в хранилище»\n3.5.3.1. Базовые\n3.5.3.2. «Страница» и «Таблица»\n3.5.3.3. «Неизменяемый текст»\n3.5.3.4. «Однострочное поле»\n3.5.3.5. «Числовое поле»\n3.5.3.6. «Многострочный текст»\n3.5.3.7. «HTD-редактор»\n3.5.3.8. «Выпадающий список»\n3.5.3.9. «Дата/время»\n3.5.3.10. «Выбор вариантов»\n3.5.3.11. «Переключатель вариантов»\n3.5.3.12. «Изображение»\n3.5.3.13. «Файл»\n3.5.3.14. «Ссылка»\n3.5.3.15. «Объекты Synergy»\n3.5.3.16. «Счетчик»\n3.5.3.17. «Лист подписей»\n3.5.3.18. «Лист резолюций»\n3.5.3.19. «Ход выполнения»\n3.5.3.20. «Ссылка на документ»\n3.5.3.21. «Период повторения»\n3.5.3.22. «Ссылка на проект/портфель»\n3.5.3.23. «Ссылка на реестр»\n3.5.3.24. «Ссылка на адресную книгу»\n3.5.3.25. «Свойства документа»\n3.5.3.26. «Ссылка на файл в хранилище»\n3.5.4. Сервисы\n3.5.5. Утилиты3.5.5.1. AS.FORMS.ApiUtils\n3.5.5.1. AS.FORMS.ApiUtils\n3.5.6. Логгер",
    "Аналитические дашборды - это набор диаграмм, отображающих состояние\nданных в различных представлениях и разрезах. Они предназначены для\nупрощения работы по их оценке, обработке, прогнозированию дальнейшего\nсостояния и принятию решений.",
    "Для интеграции аналитических дашбордов в Synergy используется\nкомбинация инструментовElasticsearchиKibana.\nElasticsearch (ES)-\nэто мощный инструмент для полнотекстового поиска и анализа данных.\nОн позволяет быстро загружать, выполнять поиск и анализировать\nбольшие объемы данных. Однако ES не имеет специальной визуальной\nоболочки, и его использование возможно с помощью набора специальных\nAPI.\nKibana- это платформа\nдля анализа и визуализации данных. Kibana обрабатывает данные,\nзагруженные в ES, и работает только параллельно с ним. Если\nработа с ES предполагает использование специального синтаксиса\nкоманд, то Kibana позволяет обрабатывать те же данные с\nпомощью визуального интерфейса. При этом Kibana содержит\nинтерпретатор, позволяющий использование всех возможностей и\nспециальных команд ES.\nИндексация и обработка исходных данных Synergy производится с\nпомощью ES, дальнейший анализ и визуализация - с помощью Kibana.\nВ настоящем документе будут рассмотрены только некоторые из\nвозможностей этих инструментов, непосредственно относящиеся\nк задаче визуализации данных. Для подробного изучения всех их\nвозможностей и способов использования рекомендуем обращаться\nк официальной документации:\nElasticsearch;\nKibana.",
    "Запись данных в индекс производится после сохранения данных по форме.\nПервичная загрузка данных в ES осуществляется с помощью процесса индексации\nданных форм (Административное приложение -> Обслуживание системы -> Управление индексом форм).\nВ это время для каждой формы и каждого компонента этой формы в Synergy\nсоздается несколько индексов. Каждый из этих индексов будет отображен в\nKibana со своим кодом, как используемое поле.",
    "Для всех данных по форме, принадлежащих реестру с идентификаторомsomeRegistryID,\nсоздаётся индекс с именем<index-prefix>-r-someRegistryID.\nДля всех данных по форме с идентификаторомsomeFormIDсоздаётся\nиндекс с именем<index-prefix>-f-someFormID.\nЕсли итоговая длина названия индекса (как для форм, так и для реестров)\nпревысит 255 байт, оно будет обрезано до 255 байт.\nТаким образом, для каждого реестра и для каждой формы, по которым есть данные,\nбудет создано по индексу. Если по форме создан реестр, а также созданы какие-то\nданные вне реестра, то в этом случае будет создано два индекса:\n<index-prefix>-r-IdOfRegistryWithOtherForm\n<index-prefix>-f-otherID.\nПримечание\nЗдесьописано, как получить названия всех имеющихся индексов в Elasticsearch.\nКроме этого, для удобства использования и возможности переноса конфигурации для\nкаждого из вышеперечисленных индексов создаётсяalias.\nИмена alias-ов формируются так:\nДля данных реестров:r-нормализованный_код_реестра\nДля данных форм без реестров:f-нормализованный_код_формыгденормализованый_код_реестраинормализованный_код_формы- коды, соответственно,\nреестра и формы, в которых специальные символы , ., [, ], {, }, (, ), +, -, ?, ^, $, |\nзаменяются на _.\nПредупреждение\nПри этом возможна ситуация, когда нормализованные коды разных реестров совпадут и alias\nбудет создан на на все соответветствующие индексы. Эта маловероятное затруднение может быть\nрешено изменением кодов соответствующих реестров или форм. В случае, если это невозможно,\nнеобходимые alias-ыможно создать вручную.\nПри изменении кода реестра или формы в Synergy имя соответствующего alias-а также изменяется.",
    "Одна единица данных в индексе Elasticsearch называетсяДокумент. Документ содержит\nполя определённыхтипов.\nКаждый документ в текущем индексе соответствует одной единице данных по форме (=файлу по форме,\nзаписи реестра) и содержит следующие поля:\nasfDataId- идентификатор данных по форме, типkeyword;\nasfDataId- идентификатор данных по форме, типkeyword;\nformId- идентификатор формы, типkeyword;\nformId- идентификатор формы, типkeyword;\nformCode- код формы, типkeyword;\nformCode- код формы, типkeyword;\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\ndocumentId- идентификатор документа Synergy, типkeyword;\ndocumentId- идентификатор документа Synergy, типkeyword;\nstatus- статус записи реестра, типnumber:0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,не связанных с реестром1 - «В процессе» (STATE_NOT_FINISHED)2 - «Активная» (STATE_SUCCESSFUL)3 - «Неуспешная» (STATE_UNSUCCESSFUL)\nstatus- статус записи реестра, типnumber:\n0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,\nне связанных с реестром\n1 - «В процессе» (STATE_NOT_FINISHED)\n2 - «Активная» (STATE_SUCCESSFUL)\n3 - «Неуспешная» (STATE_UNSUCCESSFUL)\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ncreated- дата и время создания данных по форме, типdate;\ncreated- дата и время создания данных по форме, типdate;\nmodified- дата и время изменения данных по форме, типdate.\nmodified- дата и время изменения данных по форме, типdate.\nДалее следуют поля, соответствующие компонентам формы:\nДля каждого компонента формы создаётся несколько полей документа в индексе.\nНазвание полей, соответствующих компоненту формы, формируется так:идентфикаторкомпонентаформывнижнемрегистре_key_постфиксиидентфикаторкомпонентаформывнижнемрегистре_value_постфикс(данные для которых берутся,\nсоответственно, из полейkeyиvalueданных по форме).\nДля каждого поля*_keyи*_valueсоздаются поля с нижеперечисленными постфиксами.\nДля компонентов, находящихся внутри динамической таблицы, а также компонентов с\nмультивыбором («Объекты Synergy»), значения записываются вмассивдля всех постфиксов с учетом типов компонентов.\nДля компонентов, имеющихkeyиvalue, создается общее поле*_object(Object).\nПостфиксы для полей*_key:\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_number- поле содержит значениеkey, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеkey, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_double- поле содержит значениеkey, приведенное к числу, типdouble;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_double- поле содержит значениеkey, приведенное к числу, типdouble;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)51.13333,71.43333(пара чисел, разделенных запятой и пробелом)51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)51.133,-71\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:\n51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)\n51.13333,71.43333(пара чисел, разделенных запятой и пробелом)\n51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)\n51.133,-71\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nПостфиксы для полей*_value:\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nКоличество символов, которые будут включены в поля_exactи_sort, зависят от настроек, указанных\nв конфигурационном файле/opt/synergy/jboss/standalone/configuration/arta/elasticConfiguration.xml.\nПодробное описание этих настроек приведено вРуководстве администратора.",
    "Индексы изменения данных создаются только для тех форм и реестров, коды которых подпадают\nпод шаблоны (секции в конфигурационном файлеarta/elasticConfiguration.xml, см. описание выше).\nИмя индекса<index-prefix>-rh-someRegistryIDи<index-prefix>-fh-someFormID, для реестров и\nформ, соответственно. Alias-ы:rh-нормализованный_код_реестраиfh-нормализованный_код_формы.\nОтличие индексов изменения данных от текущих индексов - на каждое изменение данных по форме\nсоздаётся новый документ в индексе. Кроме этого, для компонентов формы создаются только поля\nсо следующими постфиксами:\nДля*_key:_exact_number_date_double\nДля*_key:\n_exact\n_number\n_date\n_double\nДля*_value:_exact_number\nДля*_value:\n_exact\n_number\nТипы данных и условия создания полей такие же, как и в текущем индексе.",
    "Для использования индексов Elasticsearch в диаграммах Kibana\nнеобходимо указать эти индексы, используяшаблоны индексов(Index patterns). Они представляют собой маску имени, которой\nдолжны соответствовать индексы, входящие в этот шаблон.\nПодробно о шаблонах индексов написано вофициальном руководстве по Kibana.\nНапример, если необходимо создать шаблон для индексовmyindex-1,myindex-2,myindex-3иmyindex-abc, требуется создать\nшаблон индексаmyindex-*, где символ * означает подстановку\nпроизвольного набора символов.\nПримечание\nПоскольку имена индексов данных форм составляются\nна основе кодов соответствующих компонентов форм, рекомендуется присваивать\nэтим компонентам коды с учетом некоторого значащего префикса так,\nчтобы используемые данные можно было объединить в группу по маске\nимени.\nВ случае, если изменение кодов компонентов не представляется\nвозможным, можно создать шаблон индекса с маской «*». Этот шаблон\nбудет содержать все индексы Elasticsearch.\nДругой способ объединения данных по форме в единый шаблон индекса -\nсоздание шаблона для отдельного реестра или формы. Например, если\nв диаграмме необходимо использовать данные реестраsomeRegistryID,\nнужно создать шаблон индекса с названиемr-someRegistryID.\nАналогично, для использования данных формы (в случае, если Synergy\nне содержит реестра для этой формы) с кодомsomeFormIDнужно\nсоздать шаблон индексаf-someFormID.\nСоздание шаблонов индексов осуществляется в разделеManagement-Index Patterns. Для создания нового шаблона нужно нажать на\nкнопку+ Add New. Откроется окно создания нового индекса:\nСоздание нового шаблона индексов\nУстановленный чекбоксIndex contains time-based eventsозначает,\nчто данные, которые входят в шаблон, содержат временные данные.\nВнимание\nНе рекомендуется оставлять этот чекбокс включенным, если не\nпланируется визуализация данных во времени - например, отслеживать\nнагрузку на сервер в настоящий момент. Без особой настройки диаграммы,\nиспользующие такие поля, будут отображать только данные, соответствующие\nтекущему моменту времени.\nВ полеIndex name or patternнеобходимо ввести имя шаблона индекса:\nСоздание нового шаблона индексов без временных данных\nВ случае, если Elasticsearch содержит индексы с именами, соответствующими\nуказанному шаблону, отобразится доступная кнопкаCreate. Для создания\nшаблона индекса нужно нажать на эту кнопку.\nСозданный шаблон индексов\nПосле создания шаблона отображается таблица со списком индексов, входящих\nв этот шаблон, и их свойствами. Эти свойства зависят от типов индексов.\nТипы, с которыми индексируются данные форм Synergy, описаны в разделеИндексация данных форм в ARTA Synergy.",
    "Kibana позволяет создавать следующие типы диаграмм:\n1.Area chart- предназначена для отображения общего изменения\nданных во времени, когда выявление суммарного значения всех данных\nважнее, чем сравнение любых двух или более последовательностей.\nНапример, полезна для отображения использования ресурсов сервера.\n2.Data table- отображение данных как результата агрегации в\nвиде таблицы.\n3.Line chart- используется для отображения данных в виде линий\n(графиков). В отличие от Area charts, удобна для сравнения\nпоследовательностей между собой.\n4.Markdown widget- вставка произвольной информации, используя\nсинтаксис языка Markdown.\n5.Metric- отображение одного числа - результата агрегации\nчисловых данных.\n6.Pie Chart- предназначена для отображения вклада нескольких\nчастей в некоторый общий результат. Может принимать вид круговой\n(pie) или кольцевой (donut) диаграммы.\n7.Tag cloud- отображение данных таким образом, чтобы их размер\nзависел от некоторого числового показателя этих данных (например,\nколичества упоминаний).\n8.Tile map- специфический тип диаграмм, использующий агрегацию\nгеографических данных (тип поляgeo_point) для их отображения на\nкарте.\n9.Timeseries- специфический тип диаграмм, визуализирующий\nвременные ряды.\n10.Vertical bar chart- наиболее универсальная диаграмма,\nотображающая числовые показатели произвольных полей в виде\nвертикальной гистограммы.\nЗдесь будут рассмотрены некоторые наиболее универсальные из этих\nдиаграмм. Для ознакомления с работой остальных типов рекомендуем\nобратиться кофициальному руководству по Kibana.\nПримечание\nВ диаграммах возможно использование только агрегируемых типов\nполей. К ним относятся все числовые типы, а также типыdate,keyword,geo_shapeи другие. Агрегируемые поля отмечены\nгалочкой в графе «Aggregatable» (на странице Managenent -\nIndex Patterns).\nВсе диаграммы создаются в разделеVisualize:\nKibana, раздел Visualize\nВ общем случае, процесс создания диаграмм состоит из трех шагов:\nВыбор типа диаграммы.\nВыбор типа диаграммы.\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.ПримечаниеЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.\nПримечание\nЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных\nВ качестве источника данных может выступать шаблон индекса\nили результат поиска по данным (сохраненный или новый).\nНастройка отображаемых данных:\nНастройка отображаемых данных\nОкно настройки данных имеет стандартный вид:\nВ верхней части располагается панель меню с пунктами:\nNew- создать новую диаграмму, переход к шагу 1;\nSave- сохранить диаграмму;\nOpen- открыть существующую диаграмму;\nShare- предоставить доступ к сохраненной диаграмме;\nRefresh- обновить данные.\nНиже панели меню расположено поле поиска данных, использующее\nсинтаксисLucene. Данное поле используется для фильтрации\nданных, отображаемых в диаграмме. Например, для отображения только\nнеудаленных документов в этой панели нужно ввести запрос:\nгдеdeleted- поле, генерируемое во время индексации данных\nформ и хранящее значение 0, если данные в Synergy не были удалены.\nОсновная рабочая область окна делится на две части:\nнастройка данных: выбор полей и способа их агрегации;\nпросмотр результатов: отображение результата обработки\nвыбранных данных.\nВ части настройки данных, в разделеMetrics, необходимо\nвыбрать способ агрегации числовых данных, отображаемых в\nдиаграмме. В полеAggregationвыбирается способ агрегации,\nа в полеCustom labelвводится отображаемое название параметра.\nВ разделеBucketsнеобходимо выбрать используемые данные,\nчисловые параметры которых будут отображены на диаграмме. Так\nже, как и в разделеMetrics, здесь в полеAggregationвыбирается способ агрегации, а в полеCustom labelвводится\nотображаемое название параметра. Отличие от разделаMetricsсостоит в том, что разделBucketsпозволяет группировать\nпроизвольные типы данных при выборе соответствующего типа\nагрегации.\nНаиболее универсальным способом агрегации, используемом во\nвсех примерах ниже, являетсяTerm. Этот способ позволяет\nагрегировать данные как строки, аналогично функцииGROUP BYв SQL. Подробно об остальных типах агрегации можно ознакомиться\nв официальном руководстве по Kibana.\nПри выборе этого типа агрегации дополнительно отображаются\nполя:\nField- выпадающий список, содержащий все поля, входящие\nв текущий шаблон индекса, для которых доступна агрегация.\nOrder By- параметр сортировки данных - по метрике из\nразделаMetrics, по отдельной метрике (Custom metric) или\nпо содержимому текущего поля (Term).\nOrder- направление сортировки:\nDescending- по убыванию;\nAscending- по возрастанию.\nSize- количество отображаемых элементов - отображаются\nуказанное количество элементов, располагающиеся в начале\nсписка отсортированных указанным образом данных.\nCustom label- отображаемое название параметра.\nДля каждого используемого параметра, независимо от того, используется\nли он в разделахMetricsилиBuckets, доступна дополнительная\nнастройка, отображаемая при нажатии на лейблAdvanced:\nJSON Input\nОна представляет собой текстовое поле, в которое можно добавить\nспециальные свойства в форматеJSON, например:\nВ настоящем документе процесс создания диаграмм и дашбордов\nбудет рассмотрен на примере анализа данных формы «Заявка»:\nФорма «Заявка»\nСоздание диаграммы Pie chart\nДля диаграммы Pie chart возможно два способа организации\nиспользуемых параметров:\nSplit Slices: параметр будет отображен на диаграмме как\nновый уровень секторов:\nЗаявки по офисам и клиентам\nНа этом примере в разделеBucketsв качестве первого\nпараметра использовано поле «Центр решений» - результаты этой\nагрегации на диаграмме отображены во внутреннем круге.\nВ качестве второго параметра используется поле «Клиент/проект»,\nи результаты этой агрегации отображаются во внешнем круге.\nПримечание\nТакая последовательность была выбрана в силу специфики\nвходных данных: известно, что один центр решений занимается\nнесколькими проектами, но одним проектом занимается ровно\nодин центр решений.\nИтоговая диаграмма позволяет оценить распределение объема\nзаявок как по центрам решений, так и по отдельным проектам.\nSplit Chart: для нового параметра будет построена\nотдельная диаграмма:\nЗаявки по офисам и клиентам\nЗдесь для каждого центра решений (поле выбрано первым\nпараметром с типомSplit Chart) отрисована отдельная\nдиаграмма, в которой показано распределение заявок по\nпроектам этих центров (второй параметр с типомSplit Slices).\nВидно, что три центра решений оставляли заявки только по одному\nиз своих проектов.\nПримечание\nKibana допускает использованиеSplit Chartтолько в\nсочетании сSplit Slices, причем в этом случае параметр\nсоSplit Chartобязательно должен располагаться выше, чем\nпараметр соSplit Slices(сначала разделить данные по\nотдельным диаграммам, а потом разделять данные внутри каждой\nдиаграммы).\nДобавить новый параметр можно, нажав на кнопкуAdd sub-buckets.\nВкладкаOptionsдля этого типа диаграмм содержит три\nпараметра:\nВкладка «Опции» диаграммы Pie chart\nВид диаграммы: если чекбоксDonutвключен, диаграмма\nпринимает вид кольцевой, если отключен - круговой (по\nумолчанию).\nРасположение легенды: по умолчанию справа от диаграммы.\nПоказывать всплывающие подсказки при наведении на часть\nдиаграммы: отображаются, если включен чекбоксShow Tooltip.\nСоздание диаграммы Data table\nВ разделеMetricsнеобходимо указать одну или несколько\nметрик, по которым будут агрегироваться данные в таблице.\nВ разделеBucketsнеобходимо указать используемые параметры\nи способы их агрегации. Для этого типа диаграмм также существует\nдва способа организации входных параметров:\nSplit Rowsдля добавления параметра как нового столбца к\nтекущей таблице;\nSplit Tableдля добавления параметра как отдельной таблицы.\nПримечание\nФункциональность этих способов полностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nНастроены отображаемые данные в таблице\nВ диаграмме, указанной на рисунке выше, все параметры были\nдобавлены какSplit Rows. Для каждого параметра в разделеBucketsиспользуется агрегацияTerms.\nВкладкаOptionsдля этого типа диаграмм содержит следующие\nпараметры:\nВкладка «Опции» диаграммы Data table\nКоличество отображаемых строк на странице: по умолчанию\nотображается 10 строк. В случае, если все записи не помещаются\nна одну страницу, в нижней части таблицы отображается переключатель\nстраниц.\nОтображать метрики для каждой группы/уровня: если чекбокс\nвключен, то для каждого столбца (в случаеSplit Rows) или\nкаждой таблицы (в случаеSplit Table) будет добавлен столбец\nс результатом агрегации из разделаMetrics.\nОтображать частичные строки: если чекбокс включен, то в таблицу\nбудут включены строки с данными, отсутствующими для выбранных\nиндексов (полей). По умолчанию в таблице отображаются только\nполностью заполненные строки.\nСчитать метрики для каждой группы/уровня: чекбокс, недоступный\nдля ручной установки. Его значение зависит от параметра\n«Отображать метрики для каждой группы/уровня».\nОтображать итоговые значения: если чекбокс включен, то на каждой\nстранице таблицы для каждой отображаемой метрики будет указано\nитоговое значение этой метрики для всех данных таблицы.\nФункция для итогов: выбор функции для подсчета итоговых значений\nметрик. Параметр доступен только в том случае, если установлен\nчекбокс «Отображать итоговые значения».\nСоздание диаграммы Vertical bar chart\nВ диаграмме этого типа по оси Y располагаются метрики (параметры\nвMetrics), с по оси X - группы (параметры вBuckets).\nДоступно указание нескольких метрик на оси Y и не больше одной\nгруппы каждого типа:\nX-Axis\nSplit Bars\nSplit Chart\nПримечание\nФункциональностьSplit BarsиSplit Chartполностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nДиаграмма Vertical bar chart, пример 1\nНа примере 1 показан результат разделения параметров по диаграммам:\nотображается количество заявок, поданных разными авторами и\nвыполненных разными исполнителями. Для этого исполнители расположены\nпо оси Х, а для каждого автора заявок отрисована отдельная диаграмма.\nДиаграмма Vertical bar chart, пример 2\nНа примере 2 показана простая гистограмма, визуализирующая количество\nзаявок, выполненных разными исполнителями.\nСоздание диаграммы Tile map\nВ диаграмме этого типа визуализируются числовые метрики (параметры\nвMetrics), относящиеся к разным географическим точкам (параметры вBuckets).\nДоступно указание ровно одной метрики и одного разделения по координатам.\nВ разделеBucketsможет быть указан только один тип аггрегирования -Geohash,\nиспользующийся для данных типаgeo_point.\nПодсказка\nДля получения координат в документах индексов Elasticsearch необходимо записать\nпару чисел вkeyкомпонента формы. Проще всего это сделать в компонентах\nтипов «Выпадающий список», «Выбор вариантов» или «Переключатель вариантов»:\nдля них достаточно в качестве наименования элемента указать название географической\nточки, а в качестве значения - пару координат, например:\nНастройка координат в компоненте на форме\nСпецифичный тип диаграммы, который не имеет разделаData.\nВ левой части рабочей области располагается поле ввода текста\nс использованием синтаксиса языкаMarkdown, в правой\nчасти отображается результат разметки текста:\nСоздание Markdown widget\nЭта диаграмма не имеет никаких особых настроек.\nДиаграммаMetricработает только с числовыми данными, поэтому\nдля нее доступны только агрегации типаMetrics:\nСоздание Metrics\nДобавить новую метрику можно, нажав на кнопкуAdd metrics.\nНовая метрика будет добавлена как новое отображаемое число.\nВкладкаOptionsдля этого типа диаграмм содержит только\nодин параметр - размер шрифта:\nВкладка «Опции» диаграммы Metrics\nСоздание Tag cloud\nВ диаграмме Tag cloud возможно использование только одной агрегацииMetricsи только одного, специального способа организации данных вBuckets-Tags. Добавление новых метрик или новых групп недоступно.\nПример диаграммы Tag cloud\nВкладкаOptionsсодержит следующие параметры:\nзависимость размера текста от числовой метрики: линейная, логарифмическая\nили квадратичная;\nориентация тэгов: горизонтальная, вертикальная или произвольная;\nграницы размеров шрифта в тэгах;\nотображать название используемых параметров: чекбокс, по умолчанию выключен.\nВкладка «опции» диаграммы Tag cloud\nДашборд представляет собой панель, на которой располагаются\nранее созданные диаграммы, с широкими возможностями настроек\nотображения, обновления и публикации.\nСоздание дашбордов производится в разделеDashboard:\nKibana, раздел Dashboard\nПанель меню этого раздела содержит пункты:\nNew- переход к строке поиска и созданию нового фильтра.\nAdd- добавить новый дашборд, содержит перечень сохраненных диаграмм\nи результатов поиска:\nДобавление диаграммы на дашборд\nКаждая диаграмма в списке сопровождается пиктограммой, указывающей на тип\nдиаграммы.\nSave- сохранить текущий дашборд.\nOpen- открыть ранее сохраненный дашборд.\nShare- настройки публикации дашборда. Доступны только для сохраненного\nдашборда.\nOptions- настройка внешнего вида дашборда, содержит единственный\nчекбокс «Использовать темную тему», по умолчанию выключен.\nTime range- настройка режима отображения данных для диаграмм.\nВ самой панели отображается настроенный период. По умолчанию отображаются\nданные за последние 15 минут. Данная настройка актуальна, если есть\nнеобходимость отображения данных в режиме реального времени. Доступна\nвозможность быстрой настройки периода (за сегодня, за эту неделю,\nза последний год), указания абсолютной (дата и время в форматеYYYY-MM-DDHH:mm:ss.SSS) или относительной (например, последние\n25 минут) настройки.\nНастройки периода отображения\nПри переходе к этой настройке в панели меню появляется дополнительный\nпунктAuto-refresh. Он предназначен для настройки интервала обновления\nдиаграмм:\nНастройки периода обновления диаграмм\nДанная настройка актуальна, если данные, на основе которых построены\nдиаграммы, регулярно обновляются: например, в терминах Synergy, если необходимо\nотображать актуальные данные реестров, в которых регулярно появляются новые\nзаписи.\nПо умолчанию автообновление выключено.\nДля всех диаграмм на дашборде возможно одновременное применение условий\nдля отображаемых данных. Для этого нужно ввести условие в панель поиска,\nрасполагающуюся ниже панели меню. Функциональность этой панели для\nразделаDashboardsаналогично панели в разделеVisualize.\nДля добавления ранее сохраненной диаграммы на дашборд необходимо выбрать пункт\nменюAdd. Отобразится список доступных диаграмм (илл. «Добавление диаграммы\nна дашборд» выше). Необходимо кликнуть на нужную диаграмму - она будет добавлена\nна дашборд:\nДобавлена панель диаграммы на дашборд\nРазмер отображаемой диаграммы можно изменить, потянув за левый нижний угол панели\nдиаграммы:\nИзменение размера панели диаграммы\nИзменен размер панели диаграммы\nВ случае, если все данные диаграммы не помещаются на панели, в нее будет добавлен\nвнутренний скролл.\nПримечание\nЕсли на определенном размере панели диаграммы «Облако тэгов» не помещаются все\nданные, в ней будут отображены только наиболее популярные тэги (столько, сколько\nвозможно уместить на указанном размере панели), и будет отображен текст, предупреждающий,\nчто для отображения всех данных необходимо увеличить размер панели диаграммы:\nНа панели диаграммы отображаются пиктограммы управления:\n- изменить диаграмму (переход к настройкам отображаемых данных диаграммы в разделеVisualize);\n- переместить панель диаграммы на дашборде;\n- удалить панель диаграммы с дашборда;\n- изменить размер панели диаграммы;\n- отобразать/свернуть источники данных в виде таблицы, запроса или\nисходных данных Elasticsearch, а также статистику запроса данных для этой диаграммы;\n- отобразить/свернуть легенду.\nПримечание\nКоличество диаграмм, располагаемых на дашборде, не ограничено, наложение диаграмм\nдруг на друга не допускается.\nПример готового дашборда:\nПример готового дашборда в режиме редактирования\nТипы использованных примеров диаграмм (перечислены сверху вниз, слева направо):\nMarkdown widget\nPie chart\nTag cloud\nMetric\nVertical bar chart\nPie chart\nData table\nПредупреждение\nПрименение фильтров ко всем диаграммам на дашборде дает корректные\nрезультаты только в том случае, если коды используемых полей полностью\nсовпадают (в том числе постфиксы). В случае, если необходимо отображение\nданных из нескольких форм, имеющих сквозные параметры (например, параметр\n«Статус»), необходимо, чтобы коды компоненов, соответствующих этому\nпараметру, совпадали на всех формах, а в диаграммах использовалось одно\nи то же поле с учетом постфикса.\nKibana предоставляет способы публикации дашборда как интерактивной диаграммы\nили как снимка его состояния на момент публикации (shapshot). Публикация\nпроизводится в менюShare:\nПункт меню «Share»\nВстраивание как дашборда, так и его снимка возможно двумя способами:\nкак фреймаhtml- код для вставки содержится в полеEmbedded iframe;\nкак ссылки - URL страницы содержится в полеLink.\nПодсказка\nПо URL, автоматически генерируемому Kibana, пользователям предоставляется\nдашборд в режиме редактирования, с правом доступа ко всем разделам Kibana.\nДля того, чтобы предоставить пользователям доступ к дашборду только в режиме\nпросмотра, необходимо в URL ссылки добавить параметр:\n&embed=true\nОдин из способов публикации дашборда в Synergy - добавление его каквнешнего модуля. При этом каждый дашборд\nдолжен быть оформлен как отдельный внешний модуль. В качестве адреса приложения\nнеобходимо использовать URL дашборда.\nДругой способ - включение фрейма с дашбордом впользовательский компонент.\nВ этом случае в качестве HTML-кода необходимо использовать код из поляEmbedded iframe.\nПодсказка\nПо умолчанию в код фрейма включены границы 800х600 пикселей. Для того, чтобы\nдашборд занимал все доступное место, необходимо изменить эти параметры:\nheight=\"100%\"width=\"100%\"\nПараметрembed=true, означающий доступ к дашборду только в режиме просмотра,\nвключается Kibana по умолчанию.\nВнимание\nОбратите внимание, что для того, чтобы дашборд был доступен пользователю, у него\nдолжен быть доступ к серверу, на котором запущена Kibana.\nПример дашборда, опубликованного как внешний модуль",
    "Все диаграммы Kibana, за исключением диаграмм Metric и Markdown widget,\nполностью интерактивны. Возможно «проваливание» по клику на любую часть\nдиаграммы: при этом условие, соответствующее этой части, будет применено\nко всем диаграммам на дашборде.\nРассмотрим использование диаграмм на примере ранее показанного дашборда\n«Анализ заявок в центральный офис» (илл. «Пример дашборда, опубликованного\nкак внешний модуль»).\nПодбор диаграмм на дашборде позволяет такие действия:\nпросмотр всех заявок определенного статуса или типа;\nанализ загруженности и качества работы исполнителей;\nпросмотр статуса заявок от выбранного центра решений\nили от выбранного клиента/проекта, и так далее.\nВ качестве примера детально рассмотрим действие«Просмотр всех заявок в\nстатусе „Отклонено“».\nДля просмотра сведений по отклоненным заявкам необходимо на диаграмме\n«Заявки по статусам» кликнуть на сектор, соответствующий статусу «Отклонено».\nУсловие «Статус заявки» = «Отклонено» автоматически применится ко всем\nдиаграммам (кроме Markdown widget):\nУсловие на статус применено\nПроизошло «проваливание»: все диаграммы отображают результаты только\nпо заявкам, имеющим статус «Отклонено». На примере видно, что всего было\nотклонено 6 заявок, больше всего из них имели тип «Невоспроизводимая ошибка».\nТакже видно, какие центры решений подавали эти заявки, кто из исполнителей\nих отклонял. В нижней части дашборда таблица содержит перечень всех отклоненных\nзаявок.\nВ верхней части дашборда отобразилась плашка примененного фильтра в формате%названиеполя%:\"%значение%\". При наведении мыши на эту плашку отображаются\nпиктограммы возможных действий с фильтром:\nвключить/выключить фильтр;\nзакрепить фильтр;\nотображать только результаты фильтрации / отображать все результаты;\nудалить фильтр;\nредактировать запрос для фильтра (синтаксис Elasticsearch).\nДля того, чтобы применить еще одно условие (например, увидеть отклоненную\nзаявку с типом «Оценка», достаточно в диаграммеTag cloudкликнуть на лейбл\nс этим типом. Новое условие применится автоматически:\nУсловие на тип применено\nВидно, что единственная отклоненная заявка с типом «Оценка» касалась возможности\nнастройки выборочного доступа к записям реестра.\nНовый фильтр отображен в верхней части дашборда. Кроме того, в верхней части\nдоступно менюActions, позволяющее действия одновременно над всеми фильтрами.\nПредупреждение\nВсе фильтры применяются только для текущего пользователя и только на время текущего\nподключения. Каждый переход к внешнему модулю с диаграммами означает новое подключение\nк Kibana, и при этом все ранее сохраненные условия будут сброшены.",
    "Ошибка связана с невозможностью доступа к сервису Easticsearch (ES). При\nее возникновении сначала необходимо проверить статус ES. Для этого в\nконсоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nДругой способ - проверить статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли при ошибкеStatus: Redрезультат выполнения этих команд совпадает\nс ожидаемым, это значит, что сервис Elasticsearch запустился, но еще не\nуспел обработать все данных в индексах. Ошибка может возникать, если в\nES загружен большой объем данных. В этом случае рекомендуется дать ES\nвремя на полную загрузку (до 30 минут).\nЕсли спустя время статус Kibana не изменился, или в результате выполнения\nкомандыcurlпоявляется сообщение о невозможности подсоединения\nк серверу, значит, необходимо перезапустить ES, выполнив команду:",
    "При возникновении такой проблемы рекомендуется:\nОстановить запущенные сервисы, выполнив команды:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить запущенные сервисы, выполнив команды:\nПерейти к настройке локали сервера:# dpkg-reconfigure locales\nПерейти к настройке локали сервера:\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Остановить все сервисы:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить все сервисы:\nУдалить существующие индексы ES:# rm -r /var/lib/elasticsearch/nodes\nУдалить существующие индексы ES:\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Диаграмма/дашборд были опубликованы в режиме редактирования. Чтобы\nизбежать такой проблемы, необходимо в параметры URL-ссылки или HTML-фрейма\nдобавить параметрembed=true. Этот параметр означает, что данные должны\nпубликоваться в режиме просмотра.",
    "Проблема возникает в том случае, если отключена Kibana. Необходимо\nпроверить ее состояние:\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nдля проверки статуса из консоли сервера выполните команду:# /etc/init.d/kibana status\nдля проверки статуса из консоли сервера выполните команду:\nРезультатом выполнения должно быть сообщение:\nВ случае, если Kibana не запущена или вернула ошибку, необходимо\nее перезапустить, выполнив команду:",
    "Kibana отображает в диаграммах только заполненные исходные данные.\nДиаграмма может не отображаться в двух случаях:\nК диаграмме было применено условие, результаты которого не\nиспользуются в диаграмме.\nВ исходных данных (в формах и реестрах Synergy) нет ни одного\nдокумента, данные из которого должны отобразиться в диаграмме.\nДанное поведение не является ошибкой ни Kibana, ни Synergy, и при\nобновлении данных диаграммы отобразятся автоматически.",
    "Проблема может возникнуть при импорте диаграмм из внешних источников\n(в том числе при установке бизнес-приложений на базе Synergy, использующих\nKibana), и чаще всего связана с отсутствием в шаблоне индекса числового поля\nс постфиксом_double. Проверить это можно, перейдя к настройке диаграммы:\nв агрегациях по отсутствующим полям отображается ошибка.\nИндекс для поля_doubleсоздается только в том случае, если из содержимого\nполя удалось выделить число. То есть если во всех документах поле не заполнено,\nто и индекс с типомdoubleдля него создан не будет.\nДля того, чтобы исправить проблему, нужно хотя бы в одном документе по форме\nзаполнить числовое поле, на отсутствие которого ссылается Kibana, после чего\nнеобходимо обновить шаблон индекса для диграммы, нажав на кнопку «Обновить»\n(разделManagement-Index patterns).\nДля того, чтобы предотвратить возникновение такой ошибки, рекомендуется для\nкаждого поля, которое будет использовано в диаграммах Kibana как числовое,\nсохранять значение по умолчанию в редакторе форм.",
    "Проблема возникает из-за отсутствия или неправильной настройки периода обновления\nданных. Проверить эти настройки можно в Kibana:\nОткрыть дашборд, требующий настройки автообновления.\nОткрыть дашборд, требующий настройки автообновления.\nВ панели меню выбрать настройки периода времени:\nВ панели меню выбрать настройки периода времени:\nВыбрать пунктAuto-refresh:\nВыбрать пунктAuto-refresh:\nНастроитьRefresh Interval- периодичность обновления данных.\nНастроитьRefresh Interval- периодичность обновления данных.\nОсторожно\nНе рекомендуется устанавливать периодичность обновления меньше, чем 30\nсекунд, поскольку на стороне пользователя может возникнуть проблема фризов\n(секундных подергиваний или застываний изображения).",
    "Возможно, не был переключен индексатор данных форм. По умолчанию в Synergy\nдля индексации данных используется система Lucene. Переключение индексаторов\nмежду Lucene и ES осуществляется в файле/opt/synergy/jboss/standalone/configuration/arta/esb/formIndex.xml.\nНеобходимо убедиться, что содержимое первого тэга<handler>, соответствующее\nLucene, закомментировано, и раскомментировать содержимое тэга после<elastic>(относящееся к ES):",
    "Необходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).Проверка статуса ES может быть осуществлена двумя способами:в консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh statusРезультатом выполнения команды должно быть сообщение:[ok]elasticsearchisrunning.проверьте статус ES непосредственно:# curl localhost:9200localhost:9200- это адрес ES по умолчанию.Вывод должен быть таким:{\"name\":\"RFSWkzt\",\"cluster_name\":\"elasticsearch\",\"cluster_uuid\":\"r67YbmerQvyNHdxlzDIt3A\",\"version\":{\"number\":\"5.1.2\",\"build_hash\":\"c8c4c16\",\"build_date\":\"2017-01-11T20:18:39.146Z\",\"build_snapshot\":false,\"lucene_version\":\"6.3.0\"},\"tagline\":\"You Know, for Search\"}\nНеобходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).\nПроверка статуса ES может быть осуществлена двумя способами:\nв консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh status\nв консоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nпроверьте статус ES непосредственно:# curl localhost:9200\nпроверьте статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:################################# Elasticsearch################################# Elasticsearch home directory#ES_HOME=/usr/share/elasticsearch# Elasticsearch Java pathJAVA_HOME=/usr/lib/jvm/java-8-oracle# Elasticsearch configuration directory#CONF_DIR=/etc/elasticsearch# Elasticsearch data directory#DATA_DIR=/var/lib/elasticsearch# Elasticsearch logs directory#LOG_DIR=/var/log/elasticsearch# Elasticsearch PID directory#PID_DIR=/var/run/elasticsearch# Additional Java OPTS#ES_JAVA_OPTS=# Configure restart on package upgrade (true, every other setting will lead to not restarting)#RESTART_ON_UPGRADE=trueВниманиеВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:\nВнимание\nВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nПерезапустите ES, выполнив команду:# etc/init.d/elasticsearsh restart\nПерезапустите ES, выполнив команду:",
    "Аналитические дашборды - это набор диаграмм, отображающих состояние\nданных в различных представлениях и разрезах. Они предназначены для\nупрощения работы по их оценке, обработке, прогнозированию дальнейшего\nсостояния и принятию решений.",
    "Для интеграции аналитических дашбордов в Synergy используется\nкомбинация инструментовElasticsearchиKibana.\nElasticsearch (ES)-\nэто мощный инструмент для полнотекстового поиска и анализа данных.\nОн позволяет быстро загружать, выполнять поиск и анализировать\nбольшие объемы данных. Однако ES не имеет специальной визуальной\nоболочки, и его использование возможно с помощью набора специальных\nAPI.\nKibana- это платформа\nдля анализа и визуализации данных. Kibana обрабатывает данные,\nзагруженные в ES, и работает только параллельно с ним. Если\nработа с ES предполагает использование специального синтаксиса\nкоманд, то Kibana позволяет обрабатывать те же данные с\nпомощью визуального интерфейса. При этом Kibana содержит\nинтерпретатор, позволяющий использование всех возможностей и\nспециальных команд ES.\nИндексация и обработка исходных данных Synergy производится с\nпомощью ES, дальнейший анализ и визуализация - с помощью Kibana.\nВ настоящем документе будут рассмотрены только некоторые из\nвозможностей этих инструментов, непосредственно относящиеся\nк задаче визуализации данных. Для подробного изучения всех их\nвозможностей и способов использования рекомендуем обращаться\nк официальной документации:\nElasticsearch;\nKibana.",
    "Запись данных в индекс производится после сохранения данных по форме.\nПервичная загрузка данных в ES осуществляется с помощью процесса индексации\nданных форм (Административное приложение -> Обслуживание системы -> Управление индексом форм).\nВ это время для каждой формы и каждого компонента этой формы в Synergy\nсоздается несколько индексов. Каждый из этих индексов будет отображен в\nKibana со своим кодом, как используемое поле.",
    "Для всех данных по форме, принадлежащих реестру с идентификаторомsomeRegistryID,\nсоздаётся индекс с именем<index-prefix>-r-someRegistryID.\nДля всех данных по форме с идентификаторомsomeFormIDсоздаётся\nиндекс с именем<index-prefix>-f-someFormID.\nЕсли итоговая длина названия индекса (как для форм, так и для реестров)\nпревысит 255 байт, оно будет обрезано до 255 байт.\nТаким образом, для каждого реестра и для каждой формы, по которым есть данные,\nбудет создано по индексу. Если по форме создан реестр, а также созданы какие-то\nданные вне реестра, то в этом случае будет создано два индекса:\n<index-prefix>-r-IdOfRegistryWithOtherForm\n<index-prefix>-f-otherID.\nПримечание\nЗдесьописано, как получить названия всех имеющихся индексов в Elasticsearch.\nКроме этого, для удобства использования и возможности переноса конфигурации для\nкаждого из вышеперечисленных индексов создаётсяalias.\nИмена alias-ов формируются так:\nДля данных реестров:r-нормализованный_код_реестра\nДля данных форм без реестров:f-нормализованный_код_формыгденормализованый_код_реестраинормализованный_код_формы- коды, соответственно,\nреестра и формы, в которых специальные символы , ., [, ], {, }, (, ), +, -, ?, ^, $, |\nзаменяются на _.\nПредупреждение\nПри этом возможна ситуация, когда нормализованные коды разных реестров совпадут и alias\nбудет создан на на все соответветствующие индексы. Эта маловероятное затруднение может быть\nрешено изменением кодов соответствующих реестров или форм. В случае, если это невозможно,\nнеобходимые alias-ыможно создать вручную.\nПри изменении кода реестра или формы в Synergy имя соответствующего alias-а также изменяется.",
    "Одна единица данных в индексе Elasticsearch называетсяДокумент. Документ содержит\nполя определённыхтипов.\nКаждый документ в текущем индексе соответствует одной единице данных по форме (=файлу по форме,\nзаписи реестра) и содержит следующие поля:\nasfDataId- идентификатор данных по форме, типkeyword;\nasfDataId- идентификатор данных по форме, типkeyword;\nformId- идентификатор формы, типkeyword;\nformId- идентификатор формы, типkeyword;\nformCode- код формы, типkeyword;\nformCode- код формы, типkeyword;\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\ndocumentId- идентификатор документа Synergy, типkeyword;\ndocumentId- идентификатор документа Synergy, типkeyword;\nstatus- статус записи реестра, типnumber:0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,не связанных с реестром1 - «В процессе» (STATE_NOT_FINISHED)2 - «Активная» (STATE_SUCCESSFUL)3 - «Неуспешная» (STATE_UNSUCCESSFUL)\nstatus- статус записи реестра, типnumber:\n0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,\nне связанных с реестром\n1 - «В процессе» (STATE_NOT_FINISHED)\n2 - «Активная» (STATE_SUCCESSFUL)\n3 - «Неуспешная» (STATE_UNSUCCESSFUL)\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ncreated- дата и время создания данных по форме, типdate;\ncreated- дата и время создания данных по форме, типdate;\nmodified- дата и время изменения данных по форме, типdate.\nmodified- дата и время изменения данных по форме, типdate.\nДалее следуют поля, соответствующие компонентам формы:\nДля каждого компонента формы создаётся несколько полей документа в индексе.\nНазвание полей, соответствующих компоненту формы, формируется так:идентфикаторкомпонентаформывнижнемрегистре_key_постфиксиидентфикаторкомпонентаформывнижнемрегистре_value_постфикс(данные для которых берутся,\nсоответственно, из полейkeyиvalueданных по форме).\nДля каждого поля*_keyи*_valueсоздаются поля с нижеперечисленными постфиксами.\nДля компонентов, находящихся внутри динамической таблицы, а также компонентов с\nмультивыбором («Объекты Synergy»), значения записываются вмассивдля всех постфиксов с учетом типов компонентов.\nДля компонентов, имеющихkeyиvalue, создается общее поле*_object(Object).\nПостфиксы для полей*_key:\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_number- поле содержит значениеkey, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеkey, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_double- поле содержит значениеkey, приведенное к числу, типdouble;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_double- поле содержит значениеkey, приведенное к числу, типdouble;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)51.13333,71.43333(пара чисел, разделенных запятой и пробелом)51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)51.133,-71\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:\n51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)\n51.13333,71.43333(пара чисел, разделенных запятой и пробелом)\n51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)\n51.133,-71\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nПостфиксы для полей*_value:\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nКоличество символов, которые будут включены в поля_exactи_sort, зависят от настроек, указанных\nв конфигурационном файле/opt/synergy/jboss/standalone/configuration/arta/elasticConfiguration.xml.\nПодробное описание этих настроек приведено вРуководстве администратора.",
    "Индексы изменения данных создаются только для тех форм и реестров, коды которых подпадают\nпод шаблоны (секции в конфигурационном файлеarta/elasticConfiguration.xml, см. описание выше).\nИмя индекса<index-prefix>-rh-someRegistryIDи<index-prefix>-fh-someFormID, для реестров и\nформ, соответственно. Alias-ы:rh-нормализованный_код_реестраиfh-нормализованный_код_формы.\nОтличие индексов изменения данных от текущих индексов - на каждое изменение данных по форме\nсоздаётся новый документ в индексе. Кроме этого, для компонентов формы создаются только поля\nсо следующими постфиксами:\nДля*_key:_exact_number_date_double\nДля*_key:\n_exact\n_number\n_date\n_double\nДля*_value:_exact_number\nДля*_value:\n_exact\n_number\nТипы данных и условия создания полей такие же, как и в текущем индексе.",
    "Для использования индексов Elasticsearch в диаграммах Kibana\nнеобходимо указать эти индексы, используяшаблоны индексов(Index patterns). Они представляют собой маску имени, которой\nдолжны соответствовать индексы, входящие в этот шаблон.\nПодробно о шаблонах индексов написано вофициальном руководстве по Kibana.\nНапример, если необходимо создать шаблон для индексовmyindex-1,myindex-2,myindex-3иmyindex-abc, требуется создать\nшаблон индексаmyindex-*, где символ * означает подстановку\nпроизвольного набора символов.\nПримечание\nПоскольку имена индексов данных форм составляются\nна основе кодов соответствующих компонентов форм, рекомендуется присваивать\nэтим компонентам коды с учетом некоторого значащего префикса так,\nчтобы используемые данные можно было объединить в группу по маске\nимени.\nВ случае, если изменение кодов компонентов не представляется\nвозможным, можно создать шаблон индекса с маской «*». Этот шаблон\nбудет содержать все индексы Elasticsearch.\nДругой способ объединения данных по форме в единый шаблон индекса -\nсоздание шаблона для отдельного реестра или формы. Например, если\nв диаграмме необходимо использовать данные реестраsomeRegistryID,\nнужно создать шаблон индекса с названиемr-someRegistryID.\nАналогично, для использования данных формы (в случае, если Synergy\nне содержит реестра для этой формы) с кодомsomeFormIDнужно\nсоздать шаблон индексаf-someFormID.\nСоздание шаблонов индексов осуществляется в разделеManagement-Index Patterns. Для создания нового шаблона нужно нажать на\nкнопку+ Add New. Откроется окно создания нового индекса:\nСоздание нового шаблона индексов\nУстановленный чекбоксIndex contains time-based eventsозначает,\nчто данные, которые входят в шаблон, содержат временные данные.\nВнимание\nНе рекомендуется оставлять этот чекбокс включенным, если не\nпланируется визуализация данных во времени - например, отслеживать\nнагрузку на сервер в настоящий момент. Без особой настройки диаграммы,\nиспользующие такие поля, будут отображать только данные, соответствующие\nтекущему моменту времени.\nВ полеIndex name or patternнеобходимо ввести имя шаблона индекса:\nСоздание нового шаблона индексов без временных данных\nВ случае, если Elasticsearch содержит индексы с именами, соответствующими\nуказанному шаблону, отобразится доступная кнопкаCreate. Для создания\nшаблона индекса нужно нажать на эту кнопку.\nСозданный шаблон индексов\nПосле создания шаблона отображается таблица со списком индексов, входящих\nв этот шаблон, и их свойствами. Эти свойства зависят от типов индексов.\nТипы, с которыми индексируются данные форм Synergy, описаны в разделеИндексация данных форм в ARTA Synergy.",
    "Kibana позволяет создавать следующие типы диаграмм:\n1.Area chart- предназначена для отображения общего изменения\nданных во времени, когда выявление суммарного значения всех данных\nважнее, чем сравнение любых двух или более последовательностей.\nНапример, полезна для отображения использования ресурсов сервера.\n2.Data table- отображение данных как результата агрегации в\nвиде таблицы.\n3.Line chart- используется для отображения данных в виде линий\n(графиков). В отличие от Area charts, удобна для сравнения\nпоследовательностей между собой.\n4.Markdown widget- вставка произвольной информации, используя\nсинтаксис языка Markdown.\n5.Metric- отображение одного числа - результата агрегации\nчисловых данных.\n6.Pie Chart- предназначена для отображения вклада нескольких\nчастей в некоторый общий результат. Может принимать вид круговой\n(pie) или кольцевой (donut) диаграммы.\n7.Tag cloud- отображение данных таким образом, чтобы их размер\nзависел от некоторого числового показателя этих данных (например,\nколичества упоминаний).\n8.Tile map- специфический тип диаграмм, использующий агрегацию\nгеографических данных (тип поляgeo_point) для их отображения на\nкарте.\n9.Timeseries- специфический тип диаграмм, визуализирующий\nвременные ряды.\n10.Vertical bar chart- наиболее универсальная диаграмма,\nотображающая числовые показатели произвольных полей в виде\nвертикальной гистограммы.\nЗдесь будут рассмотрены некоторые наиболее универсальные из этих\nдиаграмм. Для ознакомления с работой остальных типов рекомендуем\nобратиться кофициальному руководству по Kibana.\nПримечание\nВ диаграммах возможно использование только агрегируемых типов\nполей. К ним относятся все числовые типы, а также типыdate,keyword,geo_shapeи другие. Агрегируемые поля отмечены\nгалочкой в графе «Aggregatable» (на странице Managenent -\nIndex Patterns).\nВсе диаграммы создаются в разделеVisualize:\nKibana, раздел Visualize\nВ общем случае, процесс создания диаграмм состоит из трех шагов:\nВыбор типа диаграммы.\nВыбор типа диаграммы.\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.ПримечаниеЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.\nПримечание\nЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных\nВ качестве источника данных может выступать шаблон индекса\nили результат поиска по данным (сохраненный или новый).\nНастройка отображаемых данных:\nНастройка отображаемых данных\nОкно настройки данных имеет стандартный вид:\nВ верхней части располагается панель меню с пунктами:\nNew- создать новую диаграмму, переход к шагу 1;\nSave- сохранить диаграмму;\nOpen- открыть существующую диаграмму;\nShare- предоставить доступ к сохраненной диаграмме;\nRefresh- обновить данные.\nНиже панели меню расположено поле поиска данных, использующее\nсинтаксисLucene. Данное поле используется для фильтрации\nданных, отображаемых в диаграмме. Например, для отображения только\nнеудаленных документов в этой панели нужно ввести запрос:\nгдеdeleted- поле, генерируемое во время индексации данных\nформ и хранящее значение 0, если данные в Synergy не были удалены.\nОсновная рабочая область окна делится на две части:\nнастройка данных: выбор полей и способа их агрегации;\nпросмотр результатов: отображение результата обработки\nвыбранных данных.\nВ части настройки данных, в разделеMetrics, необходимо\nвыбрать способ агрегации числовых данных, отображаемых в\nдиаграмме. В полеAggregationвыбирается способ агрегации,\nа в полеCustom labelвводится отображаемое название параметра.\nВ разделеBucketsнеобходимо выбрать используемые данные,\nчисловые параметры которых будут отображены на диаграмме. Так\nже, как и в разделеMetrics, здесь в полеAggregationвыбирается способ агрегации, а в полеCustom labelвводится\nотображаемое название параметра. Отличие от разделаMetricsсостоит в том, что разделBucketsпозволяет группировать\nпроизвольные типы данных при выборе соответствующего типа\nагрегации.\nНаиболее универсальным способом агрегации, используемом во\nвсех примерах ниже, являетсяTerm. Этот способ позволяет\nагрегировать данные как строки, аналогично функцииGROUP BYв SQL. Подробно об остальных типах агрегации можно ознакомиться\nв официальном руководстве по Kibana.\nПри выборе этого типа агрегации дополнительно отображаются\nполя:\nField- выпадающий список, содержащий все поля, входящие\nв текущий шаблон индекса, для которых доступна агрегация.\nOrder By- параметр сортировки данных - по метрике из\nразделаMetrics, по отдельной метрике (Custom metric) или\nпо содержимому текущего поля (Term).\nOrder- направление сортировки:\nDescending- по убыванию;\nAscending- по возрастанию.\nSize- количество отображаемых элементов - отображаются\nуказанное количество элементов, располагающиеся в начале\nсписка отсортированных указанным образом данных.\nCustom label- отображаемое название параметра.\nДля каждого используемого параметра, независимо от того, используется\nли он в разделахMetricsилиBuckets, доступна дополнительная\nнастройка, отображаемая при нажатии на лейблAdvanced:\nJSON Input\nОна представляет собой текстовое поле, в которое можно добавить\nспециальные свойства в форматеJSON, например:\nВ настоящем документе процесс создания диаграмм и дашбордов\nбудет рассмотрен на примере анализа данных формы «Заявка»:\nФорма «Заявка»\nСоздание диаграммы Pie chart\nДля диаграммы Pie chart возможно два способа организации\nиспользуемых параметров:\nSplit Slices: параметр будет отображен на диаграмме как\nновый уровень секторов:\nЗаявки по офисам и клиентам\nНа этом примере в разделеBucketsв качестве первого\nпараметра использовано поле «Центр решений» - результаты этой\nагрегации на диаграмме отображены во внутреннем круге.\nВ качестве второго параметра используется поле «Клиент/проект»,\nи результаты этой агрегации отображаются во внешнем круге.\nПримечание\nТакая последовательность была выбрана в силу специфики\nвходных данных: известно, что один центр решений занимается\nнесколькими проектами, но одним проектом занимается ровно\nодин центр решений.\nИтоговая диаграмма позволяет оценить распределение объема\nзаявок как по центрам решений, так и по отдельным проектам.\nSplit Chart: для нового параметра будет построена\nотдельная диаграмма:\nЗаявки по офисам и клиентам\nЗдесь для каждого центра решений (поле выбрано первым\nпараметром с типомSplit Chart) отрисована отдельная\nдиаграмма, в которой показано распределение заявок по\nпроектам этих центров (второй параметр с типомSplit Slices).\nВидно, что три центра решений оставляли заявки только по одному\nиз своих проектов.\nПримечание\nKibana допускает использованиеSplit Chartтолько в\nсочетании сSplit Slices, причем в этом случае параметр\nсоSplit Chartобязательно должен располагаться выше, чем\nпараметр соSplit Slices(сначала разделить данные по\nотдельным диаграммам, а потом разделять данные внутри каждой\nдиаграммы).\nДобавить новый параметр можно, нажав на кнопкуAdd sub-buckets.\nВкладкаOptionsдля этого типа диаграмм содержит три\nпараметра:\nВкладка «Опции» диаграммы Pie chart\nВид диаграммы: если чекбоксDonutвключен, диаграмма\nпринимает вид кольцевой, если отключен - круговой (по\nумолчанию).\nРасположение легенды: по умолчанию справа от диаграммы.\nПоказывать всплывающие подсказки при наведении на часть\nдиаграммы: отображаются, если включен чекбоксShow Tooltip.\nСоздание диаграммы Data table\nВ разделеMetricsнеобходимо указать одну или несколько\nметрик, по которым будут агрегироваться данные в таблице.\nВ разделеBucketsнеобходимо указать используемые параметры\nи способы их агрегации. Для этого типа диаграмм также существует\nдва способа организации входных параметров:\nSplit Rowsдля добавления параметра как нового столбца к\nтекущей таблице;\nSplit Tableдля добавления параметра как отдельной таблицы.\nПримечание\nФункциональность этих способов полностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nНастроены отображаемые данные в таблице\nВ диаграмме, указанной на рисунке выше, все параметры были\nдобавлены какSplit Rows. Для каждого параметра в разделеBucketsиспользуется агрегацияTerms.\nВкладкаOptionsдля этого типа диаграмм содержит следующие\nпараметры:\nВкладка «Опции» диаграммы Data table\nКоличество отображаемых строк на странице: по умолчанию\nотображается 10 строк. В случае, если все записи не помещаются\nна одну страницу, в нижней части таблицы отображается переключатель\nстраниц.\nОтображать метрики для каждой группы/уровня: если чекбокс\nвключен, то для каждого столбца (в случаеSplit Rows) или\nкаждой таблицы (в случаеSplit Table) будет добавлен столбец\nс результатом агрегации из разделаMetrics.\nОтображать частичные строки: если чекбокс включен, то в таблицу\nбудут включены строки с данными, отсутствующими для выбранных\nиндексов (полей). По умолчанию в таблице отображаются только\nполностью заполненные строки.\nСчитать метрики для каждой группы/уровня: чекбокс, недоступный\nдля ручной установки. Его значение зависит от параметра\n«Отображать метрики для каждой группы/уровня».\nОтображать итоговые значения: если чекбокс включен, то на каждой\nстранице таблицы для каждой отображаемой метрики будет указано\nитоговое значение этой метрики для всех данных таблицы.\nФункция для итогов: выбор функции для подсчета итоговых значений\nметрик. Параметр доступен только в том случае, если установлен\nчекбокс «Отображать итоговые значения».\nСоздание диаграммы Vertical bar chart\nВ диаграмме этого типа по оси Y располагаются метрики (параметры\nвMetrics), с по оси X - группы (параметры вBuckets).\nДоступно указание нескольких метрик на оси Y и не больше одной\nгруппы каждого типа:\nX-Axis\nSplit Bars\nSplit Chart\nПримечание\nФункциональностьSplit BarsиSplit Chartполностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nДиаграмма Vertical bar chart, пример 1\nНа примере 1 показан результат разделения параметров по диаграммам:\nотображается количество заявок, поданных разными авторами и\nвыполненных разными исполнителями. Для этого исполнители расположены\nпо оси Х, а для каждого автора заявок отрисована отдельная диаграмма.\nДиаграмма Vertical bar chart, пример 2\nНа примере 2 показана простая гистограмма, визуализирующая количество\nзаявок, выполненных разными исполнителями.\nСоздание диаграммы Tile map\nВ диаграмме этого типа визуализируются числовые метрики (параметры\nвMetrics), относящиеся к разным географическим точкам (параметры вBuckets).\nДоступно указание ровно одной метрики и одного разделения по координатам.\nВ разделеBucketsможет быть указан только один тип аггрегирования -Geohash,\nиспользующийся для данных типаgeo_point.\nПодсказка\nДля получения координат в документах индексов Elasticsearch необходимо записать\nпару чисел вkeyкомпонента формы. Проще всего это сделать в компонентах\nтипов «Выпадающий список», «Выбор вариантов» или «Переключатель вариантов»:\nдля них достаточно в качестве наименования элемента указать название географической\nточки, а в качестве значения - пару координат, например:\nНастройка координат в компоненте на форме\nСпецифичный тип диаграммы, который не имеет разделаData.\nВ левой части рабочей области располагается поле ввода текста\nс использованием синтаксиса языкаMarkdown, в правой\nчасти отображается результат разметки текста:\nСоздание Markdown widget\nЭта диаграмма не имеет никаких особых настроек.\nДиаграммаMetricработает только с числовыми данными, поэтому\nдля нее доступны только агрегации типаMetrics:\nСоздание Metrics\nДобавить новую метрику можно, нажав на кнопкуAdd metrics.\nНовая метрика будет добавлена как новое отображаемое число.\nВкладкаOptionsдля этого типа диаграмм содержит только\nодин параметр - размер шрифта:\nВкладка «Опции» диаграммы Metrics\nСоздание Tag cloud\nВ диаграмме Tag cloud возможно использование только одной агрегацииMetricsи только одного, специального способа организации данных вBuckets-Tags. Добавление новых метрик или новых групп недоступно.\nПример диаграммы Tag cloud\nВкладкаOptionsсодержит следующие параметры:\nзависимость размера текста от числовой метрики: линейная, логарифмическая\nили квадратичная;\nориентация тэгов: горизонтальная, вертикальная или произвольная;\nграницы размеров шрифта в тэгах;\nотображать название используемых параметров: чекбокс, по умолчанию выключен.\nВкладка «опции» диаграммы Tag cloud\nДашборд представляет собой панель, на которой располагаются\nранее созданные диаграммы, с широкими возможностями настроек\nотображения, обновления и публикации.\nСоздание дашбордов производится в разделеDashboard:\nKibana, раздел Dashboard\nПанель меню этого раздела содержит пункты:\nNew- переход к строке поиска и созданию нового фильтра.\nAdd- добавить новый дашборд, содержит перечень сохраненных диаграмм\nи результатов поиска:\nДобавление диаграммы на дашборд\nКаждая диаграмма в списке сопровождается пиктограммой, указывающей на тип\nдиаграммы.\nSave- сохранить текущий дашборд.\nOpen- открыть ранее сохраненный дашборд.\nShare- настройки публикации дашборда. Доступны только для сохраненного\nдашборда.\nOptions- настройка внешнего вида дашборда, содержит единственный\nчекбокс «Использовать темную тему», по умолчанию выключен.\nTime range- настройка режима отображения данных для диаграмм.\nВ самой панели отображается настроенный период. По умолчанию отображаются\nданные за последние 15 минут. Данная настройка актуальна, если есть\nнеобходимость отображения данных в режиме реального времени. Доступна\nвозможность быстрой настройки периода (за сегодня, за эту неделю,\nза последний год), указания абсолютной (дата и время в форматеYYYY-MM-DDHH:mm:ss.SSS) или относительной (например, последние\n25 минут) настройки.\nНастройки периода отображения\nПри переходе к этой настройке в панели меню появляется дополнительный\nпунктAuto-refresh. Он предназначен для настройки интервала обновления\nдиаграмм:\nНастройки периода обновления диаграмм\nДанная настройка актуальна, если данные, на основе которых построены\nдиаграммы, регулярно обновляются: например, в терминах Synergy, если необходимо\nотображать актуальные данные реестров, в которых регулярно появляются новые\nзаписи.\nПо умолчанию автообновление выключено.\nДля всех диаграмм на дашборде возможно одновременное применение условий\nдля отображаемых данных. Для этого нужно ввести условие в панель поиска,\nрасполагающуюся ниже панели меню. Функциональность этой панели для\nразделаDashboardsаналогично панели в разделеVisualize.\nДля добавления ранее сохраненной диаграммы на дашборд необходимо выбрать пункт\nменюAdd. Отобразится список доступных диаграмм (илл. «Добавление диаграммы\nна дашборд» выше). Необходимо кликнуть на нужную диаграмму - она будет добавлена\nна дашборд:\nДобавлена панель диаграммы на дашборд\nРазмер отображаемой диаграммы можно изменить, потянув за левый нижний угол панели\nдиаграммы:\nИзменение размера панели диаграммы\nИзменен размер панели диаграммы\nВ случае, если все данные диаграммы не помещаются на панели, в нее будет добавлен\nвнутренний скролл.\nПримечание\nЕсли на определенном размере панели диаграммы «Облако тэгов» не помещаются все\nданные, в ней будут отображены только наиболее популярные тэги (столько, сколько\nвозможно уместить на указанном размере панели), и будет отображен текст, предупреждающий,\nчто для отображения всех данных необходимо увеличить размер панели диаграммы:\nНа панели диаграммы отображаются пиктограммы управления:\n- изменить диаграмму (переход к настройкам отображаемых данных диаграммы в разделеVisualize);\n- переместить панель диаграммы на дашборде;\n- удалить панель диаграммы с дашборда;\n- изменить размер панели диаграммы;\n- отобразать/свернуть источники данных в виде таблицы, запроса или\nисходных данных Elasticsearch, а также статистику запроса данных для этой диаграммы;\n- отобразить/свернуть легенду.\nПримечание\nКоличество диаграмм, располагаемых на дашборде, не ограничено, наложение диаграмм\nдруг на друга не допускается.\nПример готового дашборда:\nПример готового дашборда в режиме редактирования\nТипы использованных примеров диаграмм (перечислены сверху вниз, слева направо):\nMarkdown widget\nPie chart\nTag cloud\nMetric\nVertical bar chart\nPie chart\nData table\nПредупреждение\nПрименение фильтров ко всем диаграммам на дашборде дает корректные\nрезультаты только в том случае, если коды используемых полей полностью\nсовпадают (в том числе постфиксы). В случае, если необходимо отображение\nданных из нескольких форм, имеющих сквозные параметры (например, параметр\n«Статус»), необходимо, чтобы коды компоненов, соответствующих этому\nпараметру, совпадали на всех формах, а в диаграммах использовалось одно\nи то же поле с учетом постфикса.\nKibana предоставляет способы публикации дашборда как интерактивной диаграммы\nили как снимка его состояния на момент публикации (shapshot). Публикация\nпроизводится в менюShare:\nПункт меню «Share»\nВстраивание как дашборда, так и его снимка возможно двумя способами:\nкак фреймаhtml- код для вставки содержится в полеEmbedded iframe;\nкак ссылки - URL страницы содержится в полеLink.\nПодсказка\nПо URL, автоматически генерируемому Kibana, пользователям предоставляется\nдашборд в режиме редактирования, с правом доступа ко всем разделам Kibana.\nДля того, чтобы предоставить пользователям доступ к дашборду только в режиме\nпросмотра, необходимо в URL ссылки добавить параметр:\n&embed=true\nОдин из способов публикации дашборда в Synergy - добавление его каквнешнего модуля. При этом каждый дашборд\nдолжен быть оформлен как отдельный внешний модуль. В качестве адреса приложения\nнеобходимо использовать URL дашборда.\nДругой способ - включение фрейма с дашбордом впользовательский компонент.\nВ этом случае в качестве HTML-кода необходимо использовать код из поляEmbedded iframe.\nПодсказка\nПо умолчанию в код фрейма включены границы 800х600 пикселей. Для того, чтобы\nдашборд занимал все доступное место, необходимо изменить эти параметры:\nheight=\"100%\"width=\"100%\"\nПараметрembed=true, означающий доступ к дашборду только в режиме просмотра,\nвключается Kibana по умолчанию.\nВнимание\nОбратите внимание, что для того, чтобы дашборд был доступен пользователю, у него\nдолжен быть доступ к серверу, на котором запущена Kibana.\nПример дашборда, опубликованного как внешний модуль",
    "Все диаграммы Kibana, за исключением диаграмм Metric и Markdown widget,\nполностью интерактивны. Возможно «проваливание» по клику на любую часть\nдиаграммы: при этом условие, соответствующее этой части, будет применено\nко всем диаграммам на дашборде.\nРассмотрим использование диаграмм на примере ранее показанного дашборда\n«Анализ заявок в центральный офис» (илл. «Пример дашборда, опубликованного\nкак внешний модуль»).\nПодбор диаграмм на дашборде позволяет такие действия:\nпросмотр всех заявок определенного статуса или типа;\nанализ загруженности и качества работы исполнителей;\nпросмотр статуса заявок от выбранного центра решений\nили от выбранного клиента/проекта, и так далее.\nВ качестве примера детально рассмотрим действие«Просмотр всех заявок в\nстатусе „Отклонено“».\nДля просмотра сведений по отклоненным заявкам необходимо на диаграмме\n«Заявки по статусам» кликнуть на сектор, соответствующий статусу «Отклонено».\nУсловие «Статус заявки» = «Отклонено» автоматически применится ко всем\nдиаграммам (кроме Markdown widget):\nУсловие на статус применено\nПроизошло «проваливание»: все диаграммы отображают результаты только\nпо заявкам, имеющим статус «Отклонено». На примере видно, что всего было\nотклонено 6 заявок, больше всего из них имели тип «Невоспроизводимая ошибка».\nТакже видно, какие центры решений подавали эти заявки, кто из исполнителей\nих отклонял. В нижней части дашборда таблица содержит перечень всех отклоненных\nзаявок.\nВ верхней части дашборда отобразилась плашка примененного фильтра в формате%названиеполя%:\"%значение%\". При наведении мыши на эту плашку отображаются\nпиктограммы возможных действий с фильтром:\nвключить/выключить фильтр;\nзакрепить фильтр;\nотображать только результаты фильтрации / отображать все результаты;\nудалить фильтр;\nредактировать запрос для фильтра (синтаксис Elasticsearch).\nДля того, чтобы применить еще одно условие (например, увидеть отклоненную\nзаявку с типом «Оценка», достаточно в диаграммеTag cloudкликнуть на лейбл\nс этим типом. Новое условие применится автоматически:\nУсловие на тип применено\nВидно, что единственная отклоненная заявка с типом «Оценка» касалась возможности\nнастройки выборочного доступа к записям реестра.\nНовый фильтр отображен в верхней части дашборда. Кроме того, в верхней части\nдоступно менюActions, позволяющее действия одновременно над всеми фильтрами.\nПредупреждение\nВсе фильтры применяются только для текущего пользователя и только на время текущего\nподключения. Каждый переход к внешнему модулю с диаграммами означает новое подключение\nк Kibana, и при этом все ранее сохраненные условия будут сброшены.",
    "Ошибка связана с невозможностью доступа к сервису Easticsearch (ES). При\nее возникновении сначала необходимо проверить статус ES. Для этого в\nконсоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nДругой способ - проверить статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли при ошибкеStatus: Redрезультат выполнения этих команд совпадает\nс ожидаемым, это значит, что сервис Elasticsearch запустился, но еще не\nуспел обработать все данных в индексах. Ошибка может возникать, если в\nES загружен большой объем данных. В этом случае рекомендуется дать ES\nвремя на полную загрузку (до 30 минут).\nЕсли спустя время статус Kibana не изменился, или в результате выполнения\nкомандыcurlпоявляется сообщение о невозможности подсоединения\nк серверу, значит, необходимо перезапустить ES, выполнив команду:",
    "При возникновении такой проблемы рекомендуется:\nОстановить запущенные сервисы, выполнив команды:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить запущенные сервисы, выполнив команды:\nПерейти к настройке локали сервера:# dpkg-reconfigure locales\nПерейти к настройке локали сервера:\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Остановить все сервисы:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить все сервисы:\nУдалить существующие индексы ES:# rm -r /var/lib/elasticsearch/nodes\nУдалить существующие индексы ES:\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Диаграмма/дашборд были опубликованы в режиме редактирования. Чтобы\nизбежать такой проблемы, необходимо в параметры URL-ссылки или HTML-фрейма\nдобавить параметрembed=true. Этот параметр означает, что данные должны\nпубликоваться в режиме просмотра.",
    "Проблема возникает в том случае, если отключена Kibana. Необходимо\nпроверить ее состояние:\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nдля проверки статуса из консоли сервера выполните команду:# /etc/init.d/kibana status\nдля проверки статуса из консоли сервера выполните команду:\nРезультатом выполнения должно быть сообщение:\nВ случае, если Kibana не запущена или вернула ошибку, необходимо\nее перезапустить, выполнив команду:",
    "Kibana отображает в диаграммах только заполненные исходные данные.\nДиаграмма может не отображаться в двух случаях:\nК диаграмме было применено условие, результаты которого не\nиспользуются в диаграмме.\nВ исходных данных (в формах и реестрах Synergy) нет ни одного\nдокумента, данные из которого должны отобразиться в диаграмме.\nДанное поведение не является ошибкой ни Kibana, ни Synergy, и при\nобновлении данных диаграммы отобразятся автоматически.",
    "Проблема может возникнуть при импорте диаграмм из внешних источников\n(в том числе при установке бизнес-приложений на базе Synergy, использующих\nKibana), и чаще всего связана с отсутствием в шаблоне индекса числового поля\nс постфиксом_double. Проверить это можно, перейдя к настройке диаграммы:\nв агрегациях по отсутствующим полям отображается ошибка.\nИндекс для поля_doubleсоздается только в том случае, если из содержимого\nполя удалось выделить число. То есть если во всех документах поле не заполнено,\nто и индекс с типомdoubleдля него создан не будет.\nДля того, чтобы исправить проблему, нужно хотя бы в одном документе по форме\nзаполнить числовое поле, на отсутствие которого ссылается Kibana, после чего\nнеобходимо обновить шаблон индекса для диграммы, нажав на кнопку «Обновить»\n(разделManagement-Index patterns).\nДля того, чтобы предотвратить возникновение такой ошибки, рекомендуется для\nкаждого поля, которое будет использовано в диаграммах Kibana как числовое,\nсохранять значение по умолчанию в редакторе форм.",
    "Проблема возникает из-за отсутствия или неправильной настройки периода обновления\nданных. Проверить эти настройки можно в Kibana:\nОткрыть дашборд, требующий настройки автообновления.\nОткрыть дашборд, требующий настройки автообновления.\nВ панели меню выбрать настройки периода времени:\nВ панели меню выбрать настройки периода времени:\nВыбрать пунктAuto-refresh:\nВыбрать пунктAuto-refresh:\nНастроитьRefresh Interval- периодичность обновления данных.\nНастроитьRefresh Interval- периодичность обновления данных.\nОсторожно\nНе рекомендуется устанавливать периодичность обновления меньше, чем 30\nсекунд, поскольку на стороне пользователя может возникнуть проблема фризов\n(секундных подергиваний или застываний изображения).",
    "Возможно, не был переключен индексатор данных форм. По умолчанию в Synergy\nдля индексации данных используется система Lucene. Переключение индексаторов\nмежду Lucene и ES осуществляется в файле/opt/synergy/jboss/standalone/configuration/arta/esb/formIndex.xml.\nНеобходимо убедиться, что содержимое первого тэга<handler>, соответствующее\nLucene, закомментировано, и раскомментировать содержимое тэга после<elastic>(относящееся к ES):",
    "Необходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).Проверка статуса ES может быть осуществлена двумя способами:в консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh statusРезультатом выполнения команды должно быть сообщение:[ok]elasticsearchisrunning.проверьте статус ES непосредственно:# curl localhost:9200localhost:9200- это адрес ES по умолчанию.Вывод должен быть таким:{\"name\":\"RFSWkzt\",\"cluster_name\":\"elasticsearch\",\"cluster_uuid\":\"r67YbmerQvyNHdxlzDIt3A\",\"version\":{\"number\":\"5.1.2\",\"build_hash\":\"c8c4c16\",\"build_date\":\"2017-01-11T20:18:39.146Z\",\"build_snapshot\":false,\"lucene_version\":\"6.3.0\"},\"tagline\":\"You Know, for Search\"}\nНеобходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).\nПроверка статуса ES может быть осуществлена двумя способами:\nв консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh status\nв консоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nпроверьте статус ES непосредственно:# curl localhost:9200\nпроверьте статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:################################# Elasticsearch################################# Elasticsearch home directory#ES_HOME=/usr/share/elasticsearch# Elasticsearch Java pathJAVA_HOME=/usr/lib/jvm/java-8-oracle# Elasticsearch configuration directory#CONF_DIR=/etc/elasticsearch# Elasticsearch data directory#DATA_DIR=/var/lib/elasticsearch# Elasticsearch logs directory#LOG_DIR=/var/log/elasticsearch# Elasticsearch PID directory#PID_DIR=/var/run/elasticsearch# Additional Java OPTS#ES_JAVA_OPTS=# Configure restart on package upgrade (true, every other setting will lead to not restarting)#RESTART_ON_UPGRADE=trueВниманиеВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:\nВнимание\nВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nПерезапустите ES, выполнив команду:# etc/init.d/elasticsearsh restart\nПерезапустите ES, выполнив команду:",
    "Аналитические дашборды - это набор диаграмм, отображающих состояние\nданных в различных представлениях и разрезах. Они предназначены для\nупрощения работы по их оценке, обработке, прогнозированию дальнейшего\nсостояния и принятию решений.",
    "Для интеграции аналитических дашбордов в Synergy используется\nкомбинация инструментовElasticsearchиKibana.\nElasticsearch (ES)-\nэто мощный инструмент для полнотекстового поиска и анализа данных.\nОн позволяет быстро загружать, выполнять поиск и анализировать\nбольшие объемы данных. Однако ES не имеет специальной визуальной\nоболочки, и его использование возможно с помощью набора специальных\nAPI.\nKibana- это платформа\nдля анализа и визуализации данных. Kibana обрабатывает данные,\nзагруженные в ES, и работает только параллельно с ним. Если\nработа с ES предполагает использование специального синтаксиса\nкоманд, то Kibana позволяет обрабатывать те же данные с\nпомощью визуального интерфейса. При этом Kibana содержит\nинтерпретатор, позволяющий использование всех возможностей и\nспециальных команд ES.\nИндексация и обработка исходных данных Synergy производится с\nпомощью ES, дальнейший анализ и визуализация - с помощью Kibana.\nВ настоящем документе будут рассмотрены только некоторые из\nвозможностей этих инструментов, непосредственно относящиеся\nк задаче визуализации данных. Для подробного изучения всех их\nвозможностей и способов использования рекомендуем обращаться\nк официальной документации:\nElasticsearch;\nKibana.",
    "Запись данных в индекс производится после сохранения данных по форме.\nПервичная загрузка данных в ES осуществляется с помощью процесса индексации\nданных форм (Административное приложение -> Обслуживание системы -> Управление индексом форм).\nВ это время для каждой формы и каждого компонента этой формы в Synergy\nсоздается несколько индексов. Каждый из этих индексов будет отображен в\nKibana со своим кодом, как используемое поле.",
    "Для всех данных по форме, принадлежащих реестру с идентификаторомsomeRegistryID,\nсоздаётся индекс с именем<index-prefix>-r-someRegistryID.\nДля всех данных по форме с идентификаторомsomeFormIDсоздаётся\nиндекс с именем<index-prefix>-f-someFormID.\nЕсли итоговая длина названия индекса (как для форм, так и для реестров)\nпревысит 255 байт, оно будет обрезано до 255 байт.\nТаким образом, для каждого реестра и для каждой формы, по которым есть данные,\nбудет создано по индексу. Если по форме создан реестр, а также созданы какие-то\nданные вне реестра, то в этом случае будет создано два индекса:\n<index-prefix>-r-IdOfRegistryWithOtherForm\n<index-prefix>-f-otherID.\nПримечание\nЗдесьописано, как получить названия всех имеющихся индексов в Elasticsearch.\nКроме этого, для удобства использования и возможности переноса конфигурации для\nкаждого из вышеперечисленных индексов создаётсяalias.\nИмена alias-ов формируются так:\nДля данных реестров:r-нормализованный_код_реестра\nДля данных форм без реестров:f-нормализованный_код_формыгденормализованый_код_реестраинормализованный_код_формы- коды, соответственно,\nреестра и формы, в которых специальные символы , ., [, ], {, }, (, ), +, -, ?, ^, $, |\nзаменяются на _.\nПредупреждение\nПри этом возможна ситуация, когда нормализованные коды разных реестров совпадут и alias\nбудет создан на на все соответветствующие индексы. Эта маловероятное затруднение может быть\nрешено изменением кодов соответствующих реестров или форм. В случае, если это невозможно,\nнеобходимые alias-ыможно создать вручную.\nПри изменении кода реестра или формы в Synergy имя соответствующего alias-а также изменяется.",
    "Одна единица данных в индексе Elasticsearch называетсяДокумент. Документ содержит\nполя определённыхтипов.\nКаждый документ в текущем индексе соответствует одной единице данных по форме (=файлу по форме,\nзаписи реестра) и содержит следующие поля:\nasfDataId- идентификатор данных по форме, типkeyword;\nasfDataId- идентификатор данных по форме, типkeyword;\nformId- идентификатор формы, типkeyword;\nformId- идентификатор формы, типkeyword;\nformCode- код формы, типkeyword;\nformCode- код формы, типkeyword;\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\ndocumentId- идентификатор документа Synergy, типkeyword;\ndocumentId- идентификатор документа Synergy, типkeyword;\nstatus- статус записи реестра, типnumber:0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,не связанных с реестром1 - «В процессе» (STATE_NOT_FINISHED)2 - «Активная» (STATE_SUCCESSFUL)3 - «Неуспешная» (STATE_UNSUCCESSFUL)\nstatus- статус записи реестра, типnumber:\n0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,\nне связанных с реестром\n1 - «В процессе» (STATE_NOT_FINISHED)\n2 - «Активная» (STATE_SUCCESSFUL)\n3 - «Неуспешная» (STATE_UNSUCCESSFUL)\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ncreated- дата и время создания данных по форме, типdate;\ncreated- дата и время создания данных по форме, типdate;\nmodified- дата и время изменения данных по форме, типdate.\nmodified- дата и время изменения данных по форме, типdate.\nДалее следуют поля, соответствующие компонентам формы:\nДля каждого компонента формы создаётся несколько полей документа в индексе.\nНазвание полей, соответствующих компоненту формы, формируется так:идентфикаторкомпонентаформывнижнемрегистре_key_постфиксиидентфикаторкомпонентаформывнижнемрегистре_value_постфикс(данные для которых берутся,\nсоответственно, из полейkeyиvalueданных по форме).\nДля каждого поля*_keyи*_valueсоздаются поля с нижеперечисленными постфиксами.\nДля компонентов, находящихся внутри динамической таблицы, а также компонентов с\nмультивыбором («Объекты Synergy»), значения записываются вмассивдля всех постфиксов с учетом типов компонентов.\nДля компонентов, имеющихkeyиvalue, создается общее поле*_object(Object).\nПостфиксы для полей*_key:\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_number- поле содержит значениеkey, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеkey, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_double- поле содержит значениеkey, приведенное к числу, типdouble;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_double- поле содержит значениеkey, приведенное к числу, типdouble;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)51.13333,71.43333(пара чисел, разделенных запятой и пробелом)51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)51.133,-71\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:\n51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)\n51.13333,71.43333(пара чисел, разделенных запятой и пробелом)\n51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)\n51.133,-71\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nПостфиксы для полей*_value:\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nКоличество символов, которые будут включены в поля_exactи_sort, зависят от настроек, указанных\nв конфигурационном файле/opt/synergy/jboss/standalone/configuration/arta/elasticConfiguration.xml.\nПодробное описание этих настроек приведено вРуководстве администратора.",
    "Индексы изменения данных создаются только для тех форм и реестров, коды которых подпадают\nпод шаблоны (секции в конфигурационном файлеarta/elasticConfiguration.xml, см. описание выше).\nИмя индекса<index-prefix>-rh-someRegistryIDи<index-prefix>-fh-someFormID, для реестров и\nформ, соответственно. Alias-ы:rh-нормализованный_код_реестраиfh-нормализованный_код_формы.\nОтличие индексов изменения данных от текущих индексов - на каждое изменение данных по форме\nсоздаётся новый документ в индексе. Кроме этого, для компонентов формы создаются только поля\nсо следующими постфиксами:\nДля*_key:_exact_number_date_double\nДля*_key:\n_exact\n_number\n_date\n_double\nДля*_value:_exact_number\nДля*_value:\n_exact\n_number\nТипы данных и условия создания полей такие же, как и в текущем индексе.",
    "Для использования индексов Elasticsearch в диаграммах Kibana\nнеобходимо указать эти индексы, используяшаблоны индексов(Index patterns). Они представляют собой маску имени, которой\nдолжны соответствовать индексы, входящие в этот шаблон.\nПодробно о шаблонах индексов написано вофициальном руководстве по Kibana.\nНапример, если необходимо создать шаблон для индексовmyindex-1,myindex-2,myindex-3иmyindex-abc, требуется создать\nшаблон индексаmyindex-*, где символ * означает подстановку\nпроизвольного набора символов.\nПримечание\nПоскольку имена индексов данных форм составляются\nна основе кодов соответствующих компонентов форм, рекомендуется присваивать\nэтим компонентам коды с учетом некоторого значащего префикса так,\nчтобы используемые данные можно было объединить в группу по маске\nимени.\nВ случае, если изменение кодов компонентов не представляется\nвозможным, можно создать шаблон индекса с маской «*». Этот шаблон\nбудет содержать все индексы Elasticsearch.\nДругой способ объединения данных по форме в единый шаблон индекса -\nсоздание шаблона для отдельного реестра или формы. Например, если\nв диаграмме необходимо использовать данные реестраsomeRegistryID,\nнужно создать шаблон индекса с названиемr-someRegistryID.\nАналогично, для использования данных формы (в случае, если Synergy\nне содержит реестра для этой формы) с кодомsomeFormIDнужно\nсоздать шаблон индексаf-someFormID.\nСоздание шаблонов индексов осуществляется в разделеManagement-Index Patterns. Для создания нового шаблона нужно нажать на\nкнопку+ Add New. Откроется окно создания нового индекса:\nСоздание нового шаблона индексов\nУстановленный чекбоксIndex contains time-based eventsозначает,\nчто данные, которые входят в шаблон, содержат временные данные.\nВнимание\nНе рекомендуется оставлять этот чекбокс включенным, если не\nпланируется визуализация данных во времени - например, отслеживать\nнагрузку на сервер в настоящий момент. Без особой настройки диаграммы,\nиспользующие такие поля, будут отображать только данные, соответствующие\nтекущему моменту времени.\nВ полеIndex name or patternнеобходимо ввести имя шаблона индекса:\nСоздание нового шаблона индексов без временных данных\nВ случае, если Elasticsearch содержит индексы с именами, соответствующими\nуказанному шаблону, отобразится доступная кнопкаCreate. Для создания\nшаблона индекса нужно нажать на эту кнопку.\nСозданный шаблон индексов\nПосле создания шаблона отображается таблица со списком индексов, входящих\nв этот шаблон, и их свойствами. Эти свойства зависят от типов индексов.\nТипы, с которыми индексируются данные форм Synergy, описаны в разделеИндексация данных форм в ARTA Synergy.",
    "Kibana позволяет создавать следующие типы диаграмм:\n1.Area chart- предназначена для отображения общего изменения\nданных во времени, когда выявление суммарного значения всех данных\nважнее, чем сравнение любых двух или более последовательностей.\nНапример, полезна для отображения использования ресурсов сервера.\n2.Data table- отображение данных как результата агрегации в\nвиде таблицы.\n3.Line chart- используется для отображения данных в виде линий\n(графиков). В отличие от Area charts, удобна для сравнения\nпоследовательностей между собой.\n4.Markdown widget- вставка произвольной информации, используя\nсинтаксис языка Markdown.\n5.Metric- отображение одного числа - результата агрегации\nчисловых данных.\n6.Pie Chart- предназначена для отображения вклада нескольких\nчастей в некоторый общий результат. Может принимать вид круговой\n(pie) или кольцевой (donut) диаграммы.\n7.Tag cloud- отображение данных таким образом, чтобы их размер\nзависел от некоторого числового показателя этих данных (например,\nколичества упоминаний).\n8.Tile map- специфический тип диаграмм, использующий агрегацию\nгеографических данных (тип поляgeo_point) для их отображения на\nкарте.\n9.Timeseries- специфический тип диаграмм, визуализирующий\nвременные ряды.\n10.Vertical bar chart- наиболее универсальная диаграмма,\nотображающая числовые показатели произвольных полей в виде\nвертикальной гистограммы.\nЗдесь будут рассмотрены некоторые наиболее универсальные из этих\nдиаграмм. Для ознакомления с работой остальных типов рекомендуем\nобратиться кофициальному руководству по Kibana.\nПримечание\nВ диаграммах возможно использование только агрегируемых типов\nполей. К ним относятся все числовые типы, а также типыdate,keyword,geo_shapeи другие. Агрегируемые поля отмечены\nгалочкой в графе «Aggregatable» (на странице Managenent -\nIndex Patterns).\nВсе диаграммы создаются в разделеVisualize:\nKibana, раздел Visualize\nВ общем случае, процесс создания диаграмм состоит из трех шагов:\nВыбор типа диаграммы.\nВыбор типа диаграммы.\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.ПримечаниеЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.\nПримечание\nЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных\nВ качестве источника данных может выступать шаблон индекса\nили результат поиска по данным (сохраненный или новый).\nНастройка отображаемых данных:\nНастройка отображаемых данных\nОкно настройки данных имеет стандартный вид:\nВ верхней части располагается панель меню с пунктами:\nNew- создать новую диаграмму, переход к шагу 1;\nSave- сохранить диаграмму;\nOpen- открыть существующую диаграмму;\nShare- предоставить доступ к сохраненной диаграмме;\nRefresh- обновить данные.\nНиже панели меню расположено поле поиска данных, использующее\nсинтаксисLucene. Данное поле используется для фильтрации\nданных, отображаемых в диаграмме. Например, для отображения только\nнеудаленных документов в этой панели нужно ввести запрос:\nгдеdeleted- поле, генерируемое во время индексации данных\nформ и хранящее значение 0, если данные в Synergy не были удалены.\nОсновная рабочая область окна делится на две части:\nнастройка данных: выбор полей и способа их агрегации;\nпросмотр результатов: отображение результата обработки\nвыбранных данных.\nВ части настройки данных, в разделеMetrics, необходимо\nвыбрать способ агрегации числовых данных, отображаемых в\nдиаграмме. В полеAggregationвыбирается способ агрегации,\nа в полеCustom labelвводится отображаемое название параметра.\nВ разделеBucketsнеобходимо выбрать используемые данные,\nчисловые параметры которых будут отображены на диаграмме. Так\nже, как и в разделеMetrics, здесь в полеAggregationвыбирается способ агрегации, а в полеCustom labelвводится\nотображаемое название параметра. Отличие от разделаMetricsсостоит в том, что разделBucketsпозволяет группировать\nпроизвольные типы данных при выборе соответствующего типа\nагрегации.\nНаиболее универсальным способом агрегации, используемом во\nвсех примерах ниже, являетсяTerm. Этот способ позволяет\nагрегировать данные как строки, аналогично функцииGROUP BYв SQL. Подробно об остальных типах агрегации можно ознакомиться\nв официальном руководстве по Kibana.\nПри выборе этого типа агрегации дополнительно отображаются\nполя:\nField- выпадающий список, содержащий все поля, входящие\nв текущий шаблон индекса, для которых доступна агрегация.\nOrder By- параметр сортировки данных - по метрике из\nразделаMetrics, по отдельной метрике (Custom metric) или\nпо содержимому текущего поля (Term).\nOrder- направление сортировки:\nDescending- по убыванию;\nAscending- по возрастанию.\nSize- количество отображаемых элементов - отображаются\nуказанное количество элементов, располагающиеся в начале\nсписка отсортированных указанным образом данных.\nCustom label- отображаемое название параметра.\nДля каждого используемого параметра, независимо от того, используется\nли он в разделахMetricsилиBuckets, доступна дополнительная\nнастройка, отображаемая при нажатии на лейблAdvanced:\nJSON Input\nОна представляет собой текстовое поле, в которое можно добавить\nспециальные свойства в форматеJSON, например:\nВ настоящем документе процесс создания диаграмм и дашбордов\nбудет рассмотрен на примере анализа данных формы «Заявка»:\nФорма «Заявка»\nСоздание диаграммы Pie chart\nДля диаграммы Pie chart возможно два способа организации\nиспользуемых параметров:\nSplit Slices: параметр будет отображен на диаграмме как\nновый уровень секторов:\nЗаявки по офисам и клиентам\nНа этом примере в разделеBucketsв качестве первого\nпараметра использовано поле «Центр решений» - результаты этой\nагрегации на диаграмме отображены во внутреннем круге.\nВ качестве второго параметра используется поле «Клиент/проект»,\nи результаты этой агрегации отображаются во внешнем круге.\nПримечание\nТакая последовательность была выбрана в силу специфики\nвходных данных: известно, что один центр решений занимается\nнесколькими проектами, но одним проектом занимается ровно\nодин центр решений.\nИтоговая диаграмма позволяет оценить распределение объема\nзаявок как по центрам решений, так и по отдельным проектам.\nSplit Chart: для нового параметра будет построена\nотдельная диаграмма:\nЗаявки по офисам и клиентам\nЗдесь для каждого центра решений (поле выбрано первым\nпараметром с типомSplit Chart) отрисована отдельная\nдиаграмма, в которой показано распределение заявок по\nпроектам этих центров (второй параметр с типомSplit Slices).\nВидно, что три центра решений оставляли заявки только по одному\nиз своих проектов.\nПримечание\nKibana допускает использованиеSplit Chartтолько в\nсочетании сSplit Slices, причем в этом случае параметр\nсоSplit Chartобязательно должен располагаться выше, чем\nпараметр соSplit Slices(сначала разделить данные по\nотдельным диаграммам, а потом разделять данные внутри каждой\nдиаграммы).\nДобавить новый параметр можно, нажав на кнопкуAdd sub-buckets.\nВкладкаOptionsдля этого типа диаграмм содержит три\nпараметра:\nВкладка «Опции» диаграммы Pie chart\nВид диаграммы: если чекбоксDonutвключен, диаграмма\nпринимает вид кольцевой, если отключен - круговой (по\nумолчанию).\nРасположение легенды: по умолчанию справа от диаграммы.\nПоказывать всплывающие подсказки при наведении на часть\nдиаграммы: отображаются, если включен чекбоксShow Tooltip.\nСоздание диаграммы Data table\nВ разделеMetricsнеобходимо указать одну или несколько\nметрик, по которым будут агрегироваться данные в таблице.\nВ разделеBucketsнеобходимо указать используемые параметры\nи способы их агрегации. Для этого типа диаграмм также существует\nдва способа организации входных параметров:\nSplit Rowsдля добавления параметра как нового столбца к\nтекущей таблице;\nSplit Tableдля добавления параметра как отдельной таблицы.\nПримечание\nФункциональность этих способов полностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nНастроены отображаемые данные в таблице\nВ диаграмме, указанной на рисунке выше, все параметры были\nдобавлены какSplit Rows. Для каждого параметра в разделеBucketsиспользуется агрегацияTerms.\nВкладкаOptionsдля этого типа диаграмм содержит следующие\nпараметры:\nВкладка «Опции» диаграммы Data table\nКоличество отображаемых строк на странице: по умолчанию\nотображается 10 строк. В случае, если все записи не помещаются\nна одну страницу, в нижней части таблицы отображается переключатель\nстраниц.\nОтображать метрики для каждой группы/уровня: если чекбокс\nвключен, то для каждого столбца (в случаеSplit Rows) или\nкаждой таблицы (в случаеSplit Table) будет добавлен столбец\nс результатом агрегации из разделаMetrics.\nОтображать частичные строки: если чекбокс включен, то в таблицу\nбудут включены строки с данными, отсутствующими для выбранных\nиндексов (полей). По умолчанию в таблице отображаются только\nполностью заполненные строки.\nСчитать метрики для каждой группы/уровня: чекбокс, недоступный\nдля ручной установки. Его значение зависит от параметра\n«Отображать метрики для каждой группы/уровня».\nОтображать итоговые значения: если чекбокс включен, то на каждой\nстранице таблицы для каждой отображаемой метрики будет указано\nитоговое значение этой метрики для всех данных таблицы.\nФункция для итогов: выбор функции для подсчета итоговых значений\nметрик. Параметр доступен только в том случае, если установлен\nчекбокс «Отображать итоговые значения».\nСоздание диаграммы Vertical bar chart\nВ диаграмме этого типа по оси Y располагаются метрики (параметры\nвMetrics), с по оси X - группы (параметры вBuckets).\nДоступно указание нескольких метрик на оси Y и не больше одной\nгруппы каждого типа:\nX-Axis\nSplit Bars\nSplit Chart\nПримечание\nФункциональностьSplit BarsиSplit Chartполностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nДиаграмма Vertical bar chart, пример 1\nНа примере 1 показан результат разделения параметров по диаграммам:\nотображается количество заявок, поданных разными авторами и\nвыполненных разными исполнителями. Для этого исполнители расположены\nпо оси Х, а для каждого автора заявок отрисована отдельная диаграмма.\nДиаграмма Vertical bar chart, пример 2\nНа примере 2 показана простая гистограмма, визуализирующая количество\nзаявок, выполненных разными исполнителями.\nСоздание диаграммы Tile map\nВ диаграмме этого типа визуализируются числовые метрики (параметры\nвMetrics), относящиеся к разным географическим точкам (параметры вBuckets).\nДоступно указание ровно одной метрики и одного разделения по координатам.\nВ разделеBucketsможет быть указан только один тип аггрегирования -Geohash,\nиспользующийся для данных типаgeo_point.\nПодсказка\nДля получения координат в документах индексов Elasticsearch необходимо записать\nпару чисел вkeyкомпонента формы. Проще всего это сделать в компонентах\nтипов «Выпадающий список», «Выбор вариантов» или «Переключатель вариантов»:\nдля них достаточно в качестве наименования элемента указать название географической\nточки, а в качестве значения - пару координат, например:\nНастройка координат в компоненте на форме\nСпецифичный тип диаграммы, который не имеет разделаData.\nВ левой части рабочей области располагается поле ввода текста\nс использованием синтаксиса языкаMarkdown, в правой\nчасти отображается результат разметки текста:\nСоздание Markdown widget\nЭта диаграмма не имеет никаких особых настроек.\nДиаграммаMetricработает только с числовыми данными, поэтому\nдля нее доступны только агрегации типаMetrics:\nСоздание Metrics\nДобавить новую метрику можно, нажав на кнопкуAdd metrics.\nНовая метрика будет добавлена как новое отображаемое число.\nВкладкаOptionsдля этого типа диаграмм содержит только\nодин параметр - размер шрифта:\nВкладка «Опции» диаграммы Metrics\nСоздание Tag cloud\nВ диаграмме Tag cloud возможно использование только одной агрегацииMetricsи только одного, специального способа организации данных вBuckets-Tags. Добавление новых метрик или новых групп недоступно.\nПример диаграммы Tag cloud\nВкладкаOptionsсодержит следующие параметры:\nзависимость размера текста от числовой метрики: линейная, логарифмическая\nили квадратичная;\nориентация тэгов: горизонтальная, вертикальная или произвольная;\nграницы размеров шрифта в тэгах;\nотображать название используемых параметров: чекбокс, по умолчанию выключен.\nВкладка «опции» диаграммы Tag cloud\nДашборд представляет собой панель, на которой располагаются\nранее созданные диаграммы, с широкими возможностями настроек\nотображения, обновления и публикации.\nСоздание дашбордов производится в разделеDashboard:\nKibana, раздел Dashboard\nПанель меню этого раздела содержит пункты:\nNew- переход к строке поиска и созданию нового фильтра.\nAdd- добавить новый дашборд, содержит перечень сохраненных диаграмм\nи результатов поиска:\nДобавление диаграммы на дашборд\nКаждая диаграмма в списке сопровождается пиктограммой, указывающей на тип\nдиаграммы.\nSave- сохранить текущий дашборд.\nOpen- открыть ранее сохраненный дашборд.\nShare- настройки публикации дашборда. Доступны только для сохраненного\nдашборда.\nOptions- настройка внешнего вида дашборда, содержит единственный\nчекбокс «Использовать темную тему», по умолчанию выключен.\nTime range- настройка режима отображения данных для диаграмм.\nВ самой панели отображается настроенный период. По умолчанию отображаются\nданные за последние 15 минут. Данная настройка актуальна, если есть\nнеобходимость отображения данных в режиме реального времени. Доступна\nвозможность быстрой настройки периода (за сегодня, за эту неделю,\nза последний год), указания абсолютной (дата и время в форматеYYYY-MM-DDHH:mm:ss.SSS) или относительной (например, последние\n25 минут) настройки.\nНастройки периода отображения\nПри переходе к этой настройке в панели меню появляется дополнительный\nпунктAuto-refresh. Он предназначен для настройки интервала обновления\nдиаграмм:\nНастройки периода обновления диаграмм\nДанная настройка актуальна, если данные, на основе которых построены\nдиаграммы, регулярно обновляются: например, в терминах Synergy, если необходимо\nотображать актуальные данные реестров, в которых регулярно появляются новые\nзаписи.\nПо умолчанию автообновление выключено.\nДля всех диаграмм на дашборде возможно одновременное применение условий\nдля отображаемых данных. Для этого нужно ввести условие в панель поиска,\nрасполагающуюся ниже панели меню. Функциональность этой панели для\nразделаDashboardsаналогично панели в разделеVisualize.\nДля добавления ранее сохраненной диаграммы на дашборд необходимо выбрать пункт\nменюAdd. Отобразится список доступных диаграмм (илл. «Добавление диаграммы\nна дашборд» выше). Необходимо кликнуть на нужную диаграмму - она будет добавлена\nна дашборд:\nДобавлена панель диаграммы на дашборд\nРазмер отображаемой диаграммы можно изменить, потянув за левый нижний угол панели\nдиаграммы:\nИзменение размера панели диаграммы\nИзменен размер панели диаграммы\nВ случае, если все данные диаграммы не помещаются на панели, в нее будет добавлен\nвнутренний скролл.\nПримечание\nЕсли на определенном размере панели диаграммы «Облако тэгов» не помещаются все\nданные, в ней будут отображены только наиболее популярные тэги (столько, сколько\nвозможно уместить на указанном размере панели), и будет отображен текст, предупреждающий,\nчто для отображения всех данных необходимо увеличить размер панели диаграммы:\nНа панели диаграммы отображаются пиктограммы управления:\n- изменить диаграмму (переход к настройкам отображаемых данных диаграммы в разделеVisualize);\n- переместить панель диаграммы на дашборде;\n- удалить панель диаграммы с дашборда;\n- изменить размер панели диаграммы;\n- отобразать/свернуть источники данных в виде таблицы, запроса или\nисходных данных Elasticsearch, а также статистику запроса данных для этой диаграммы;\n- отобразить/свернуть легенду.\nПримечание\nКоличество диаграмм, располагаемых на дашборде, не ограничено, наложение диаграмм\nдруг на друга не допускается.\nПример готового дашборда:\nПример готового дашборда в режиме редактирования\nТипы использованных примеров диаграмм (перечислены сверху вниз, слева направо):\nMarkdown widget\nPie chart\nTag cloud\nMetric\nVertical bar chart\nPie chart\nData table\nПредупреждение\nПрименение фильтров ко всем диаграммам на дашборде дает корректные\nрезультаты только в том случае, если коды используемых полей полностью\nсовпадают (в том числе постфиксы). В случае, если необходимо отображение\nданных из нескольких форм, имеющих сквозные параметры (например, параметр\n«Статус»), необходимо, чтобы коды компоненов, соответствующих этому\nпараметру, совпадали на всех формах, а в диаграммах использовалось одно\nи то же поле с учетом постфикса.\nKibana предоставляет способы публикации дашборда как интерактивной диаграммы\nили как снимка его состояния на момент публикации (shapshot). Публикация\nпроизводится в менюShare:\nПункт меню «Share»\nВстраивание как дашборда, так и его снимка возможно двумя способами:\nкак фреймаhtml- код для вставки содержится в полеEmbedded iframe;\nкак ссылки - URL страницы содержится в полеLink.\nПодсказка\nПо URL, автоматически генерируемому Kibana, пользователям предоставляется\nдашборд в режиме редактирования, с правом доступа ко всем разделам Kibana.\nДля того, чтобы предоставить пользователям доступ к дашборду только в режиме\nпросмотра, необходимо в URL ссылки добавить параметр:\n&embed=true\nОдин из способов публикации дашборда в Synergy - добавление его каквнешнего модуля. При этом каждый дашборд\nдолжен быть оформлен как отдельный внешний модуль. В качестве адреса приложения\nнеобходимо использовать URL дашборда.\nДругой способ - включение фрейма с дашбордом впользовательский компонент.\nВ этом случае в качестве HTML-кода необходимо использовать код из поляEmbedded iframe.\nПодсказка\nПо умолчанию в код фрейма включены границы 800х600 пикселей. Для того, чтобы\nдашборд занимал все доступное место, необходимо изменить эти параметры:\nheight=\"100%\"width=\"100%\"\nПараметрembed=true, означающий доступ к дашборду только в режиме просмотра,\nвключается Kibana по умолчанию.\nВнимание\nОбратите внимание, что для того, чтобы дашборд был доступен пользователю, у него\nдолжен быть доступ к серверу, на котором запущена Kibana.\nПример дашборда, опубликованного как внешний модуль",
    "Все диаграммы Kibana, за исключением диаграмм Metric и Markdown widget,\nполностью интерактивны. Возможно «проваливание» по клику на любую часть\nдиаграммы: при этом условие, соответствующее этой части, будет применено\nко всем диаграммам на дашборде.\nРассмотрим использование диаграмм на примере ранее показанного дашборда\n«Анализ заявок в центральный офис» (илл. «Пример дашборда, опубликованного\nкак внешний модуль»).\nПодбор диаграмм на дашборде позволяет такие действия:\nпросмотр всех заявок определенного статуса или типа;\nанализ загруженности и качества работы исполнителей;\nпросмотр статуса заявок от выбранного центра решений\nили от выбранного клиента/проекта, и так далее.\nВ качестве примера детально рассмотрим действие«Просмотр всех заявок в\nстатусе „Отклонено“».\nДля просмотра сведений по отклоненным заявкам необходимо на диаграмме\n«Заявки по статусам» кликнуть на сектор, соответствующий статусу «Отклонено».\nУсловие «Статус заявки» = «Отклонено» автоматически применится ко всем\nдиаграммам (кроме Markdown widget):\nУсловие на статус применено\nПроизошло «проваливание»: все диаграммы отображают результаты только\nпо заявкам, имеющим статус «Отклонено». На примере видно, что всего было\nотклонено 6 заявок, больше всего из них имели тип «Невоспроизводимая ошибка».\nТакже видно, какие центры решений подавали эти заявки, кто из исполнителей\nих отклонял. В нижней части дашборда таблица содержит перечень всех отклоненных\nзаявок.\nВ верхней части дашборда отобразилась плашка примененного фильтра в формате%названиеполя%:\"%значение%\". При наведении мыши на эту плашку отображаются\nпиктограммы возможных действий с фильтром:\nвключить/выключить фильтр;\nзакрепить фильтр;\nотображать только результаты фильтрации / отображать все результаты;\nудалить фильтр;\nредактировать запрос для фильтра (синтаксис Elasticsearch).\nДля того, чтобы применить еще одно условие (например, увидеть отклоненную\nзаявку с типом «Оценка», достаточно в диаграммеTag cloudкликнуть на лейбл\nс этим типом. Новое условие применится автоматически:\nУсловие на тип применено\nВидно, что единственная отклоненная заявка с типом «Оценка» касалась возможности\nнастройки выборочного доступа к записям реестра.\nНовый фильтр отображен в верхней части дашборда. Кроме того, в верхней части\nдоступно менюActions, позволяющее действия одновременно над всеми фильтрами.\nПредупреждение\nВсе фильтры применяются только для текущего пользователя и только на время текущего\nподключения. Каждый переход к внешнему модулю с диаграммами означает новое подключение\nк Kibana, и при этом все ранее сохраненные условия будут сброшены.",
    "Ошибка связана с невозможностью доступа к сервису Easticsearch (ES). При\nее возникновении сначала необходимо проверить статус ES. Для этого в\nконсоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nДругой способ - проверить статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли при ошибкеStatus: Redрезультат выполнения этих команд совпадает\nс ожидаемым, это значит, что сервис Elasticsearch запустился, но еще не\nуспел обработать все данных в индексах. Ошибка может возникать, если в\nES загружен большой объем данных. В этом случае рекомендуется дать ES\nвремя на полную загрузку (до 30 минут).\nЕсли спустя время статус Kibana не изменился, или в результате выполнения\nкомандыcurlпоявляется сообщение о невозможности подсоединения\nк серверу, значит, необходимо перезапустить ES, выполнив команду:",
    "При возникновении такой проблемы рекомендуется:\nОстановить запущенные сервисы, выполнив команды:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить запущенные сервисы, выполнив команды:\nПерейти к настройке локали сервера:# dpkg-reconfigure locales\nПерейти к настройке локали сервера:\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Остановить все сервисы:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить все сервисы:\nУдалить существующие индексы ES:# rm -r /var/lib/elasticsearch/nodes\nУдалить существующие индексы ES:\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Диаграмма/дашборд были опубликованы в режиме редактирования. Чтобы\nизбежать такой проблемы, необходимо в параметры URL-ссылки или HTML-фрейма\nдобавить параметрembed=true. Этот параметр означает, что данные должны\nпубликоваться в режиме просмотра.",
    "Проблема возникает в том случае, если отключена Kibana. Необходимо\nпроверить ее состояние:\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nдля проверки статуса из консоли сервера выполните команду:# /etc/init.d/kibana status\nдля проверки статуса из консоли сервера выполните команду:\nРезультатом выполнения должно быть сообщение:\nВ случае, если Kibana не запущена или вернула ошибку, необходимо\nее перезапустить, выполнив команду:",
    "Kibana отображает в диаграммах только заполненные исходные данные.\nДиаграмма может не отображаться в двух случаях:\nК диаграмме было применено условие, результаты которого не\nиспользуются в диаграмме.\nВ исходных данных (в формах и реестрах Synergy) нет ни одного\nдокумента, данные из которого должны отобразиться в диаграмме.\nДанное поведение не является ошибкой ни Kibana, ни Synergy, и при\nобновлении данных диаграммы отобразятся автоматически.",
    "Проблема может возникнуть при импорте диаграмм из внешних источников\n(в том числе при установке бизнес-приложений на базе Synergy, использующих\nKibana), и чаще всего связана с отсутствием в шаблоне индекса числового поля\nс постфиксом_double. Проверить это можно, перейдя к настройке диаграммы:\nв агрегациях по отсутствующим полям отображается ошибка.\nИндекс для поля_doubleсоздается только в том случае, если из содержимого\nполя удалось выделить число. То есть если во всех документах поле не заполнено,\nто и индекс с типомdoubleдля него создан не будет.\nДля того, чтобы исправить проблему, нужно хотя бы в одном документе по форме\nзаполнить числовое поле, на отсутствие которого ссылается Kibana, после чего\nнеобходимо обновить шаблон индекса для диграммы, нажав на кнопку «Обновить»\n(разделManagement-Index patterns).\nДля того, чтобы предотвратить возникновение такой ошибки, рекомендуется для\nкаждого поля, которое будет использовано в диаграммах Kibana как числовое,\nсохранять значение по умолчанию в редакторе форм.",
    "Проблема возникает из-за отсутствия или неправильной настройки периода обновления\nданных. Проверить эти настройки можно в Kibana:\nОткрыть дашборд, требующий настройки автообновления.\nОткрыть дашборд, требующий настройки автообновления.\nВ панели меню выбрать настройки периода времени:\nВ панели меню выбрать настройки периода времени:\nВыбрать пунктAuto-refresh:\nВыбрать пунктAuto-refresh:\nНастроитьRefresh Interval- периодичность обновления данных.\nНастроитьRefresh Interval- периодичность обновления данных.\nОсторожно\nНе рекомендуется устанавливать периодичность обновления меньше, чем 30\nсекунд, поскольку на стороне пользователя может возникнуть проблема фризов\n(секундных подергиваний или застываний изображения).",
    "Возможно, не был переключен индексатор данных форм. По умолчанию в Synergy\nдля индексации данных используется система Lucene. Переключение индексаторов\nмежду Lucene и ES осуществляется в файле/opt/synergy/jboss/standalone/configuration/arta/esb/formIndex.xml.\nНеобходимо убедиться, что содержимое первого тэга<handler>, соответствующее\nLucene, закомментировано, и раскомментировать содержимое тэга после<elastic>(относящееся к ES):",
    "Необходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).Проверка статуса ES может быть осуществлена двумя способами:в консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh statusРезультатом выполнения команды должно быть сообщение:[ok]elasticsearchisrunning.проверьте статус ES непосредственно:# curl localhost:9200localhost:9200- это адрес ES по умолчанию.Вывод должен быть таким:{\"name\":\"RFSWkzt\",\"cluster_name\":\"elasticsearch\",\"cluster_uuid\":\"r67YbmerQvyNHdxlzDIt3A\",\"version\":{\"number\":\"5.1.2\",\"build_hash\":\"c8c4c16\",\"build_date\":\"2017-01-11T20:18:39.146Z\",\"build_snapshot\":false,\"lucene_version\":\"6.3.0\"},\"tagline\":\"You Know, for Search\"}\nНеобходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).\nПроверка статуса ES может быть осуществлена двумя способами:\nв консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh status\nв консоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nпроверьте статус ES непосредственно:# curl localhost:9200\nпроверьте статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:################################# Elasticsearch################################# Elasticsearch home directory#ES_HOME=/usr/share/elasticsearch# Elasticsearch Java pathJAVA_HOME=/usr/lib/jvm/java-8-oracle# Elasticsearch configuration directory#CONF_DIR=/etc/elasticsearch# Elasticsearch data directory#DATA_DIR=/var/lib/elasticsearch# Elasticsearch logs directory#LOG_DIR=/var/log/elasticsearch# Elasticsearch PID directory#PID_DIR=/var/run/elasticsearch# Additional Java OPTS#ES_JAVA_OPTS=# Configure restart on package upgrade (true, every other setting will lead to not restarting)#RESTART_ON_UPGRADE=trueВниманиеВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:\nВнимание\nВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nПерезапустите ES, выполнив команду:# etc/init.d/elasticsearsh restart\nПерезапустите ES, выполнив команду:",
    "Аналитические дашборды - это набор диаграмм, отображающих состояние\nданных в различных представлениях и разрезах. Они предназначены для\nупрощения работы по их оценке, обработке, прогнозированию дальнейшего\nсостояния и принятию решений.",
    "Для интеграции аналитических дашбордов в Synergy используется\nкомбинация инструментовElasticsearchиKibana.\nElasticsearch (ES)-\nэто мощный инструмент для полнотекстового поиска и анализа данных.\nОн позволяет быстро загружать, выполнять поиск и анализировать\nбольшие объемы данных. Однако ES не имеет специальной визуальной\nоболочки, и его использование возможно с помощью набора специальных\nAPI.\nKibana- это платформа\nдля анализа и визуализации данных. Kibana обрабатывает данные,\nзагруженные в ES, и работает только параллельно с ним. Если\nработа с ES предполагает использование специального синтаксиса\nкоманд, то Kibana позволяет обрабатывать те же данные с\nпомощью визуального интерфейса. При этом Kibana содержит\nинтерпретатор, позволяющий использование всех возможностей и\nспециальных команд ES.\nИндексация и обработка исходных данных Synergy производится с\nпомощью ES, дальнейший анализ и визуализация - с помощью Kibana.\nВ настоящем документе будут рассмотрены только некоторые из\nвозможностей этих инструментов, непосредственно относящиеся\nк задаче визуализации данных. Для подробного изучения всех их\nвозможностей и способов использования рекомендуем обращаться\nк официальной документации:\nElasticsearch;\nKibana.",
    "Запись данных в индекс производится после сохранения данных по форме.\nПервичная загрузка данных в ES осуществляется с помощью процесса индексации\nданных форм (Административное приложение -> Обслуживание системы -> Управление индексом форм).\nВ это время для каждой формы и каждого компонента этой формы в Synergy\nсоздается несколько индексов. Каждый из этих индексов будет отображен в\nKibana со своим кодом, как используемое поле.",
    "Для всех данных по форме, принадлежащих реестру с идентификаторомsomeRegistryID,\nсоздаётся индекс с именем<index-prefix>-r-someRegistryID.\nДля всех данных по форме с идентификаторомsomeFormIDсоздаётся\nиндекс с именем<index-prefix>-f-someFormID.\nЕсли итоговая длина названия индекса (как для форм, так и для реестров)\nпревысит 255 байт, оно будет обрезано до 255 байт.\nТаким образом, для каждого реестра и для каждой формы, по которым есть данные,\nбудет создано по индексу. Если по форме создан реестр, а также созданы какие-то\nданные вне реестра, то в этом случае будет создано два индекса:\n<index-prefix>-r-IdOfRegistryWithOtherForm\n<index-prefix>-f-otherID.\nПримечание\nЗдесьописано, как получить названия всех имеющихся индексов в Elasticsearch.\nКроме этого, для удобства использования и возможности переноса конфигурации для\nкаждого из вышеперечисленных индексов создаётсяalias.\nИмена alias-ов формируются так:\nДля данных реестров:r-нормализованный_код_реестра\nДля данных форм без реестров:f-нормализованный_код_формыгденормализованый_код_реестраинормализованный_код_формы- коды, соответственно,\nреестра и формы, в которых специальные символы , ., [, ], {, }, (, ), +, -, ?, ^, $, |\nзаменяются на _.\nПредупреждение\nПри этом возможна ситуация, когда нормализованные коды разных реестров совпадут и alias\nбудет создан на на все соответветствующие индексы. Эта маловероятное затруднение может быть\nрешено изменением кодов соответствующих реестров или форм. В случае, если это невозможно,\nнеобходимые alias-ыможно создать вручную.\nПри изменении кода реестра или формы в Synergy имя соответствующего alias-а также изменяется.",
    "Одна единица данных в индексе Elasticsearch называетсяДокумент. Документ содержит\nполя определённыхтипов.\nКаждый документ в текущем индексе соответствует одной единице данных по форме (=файлу по форме,\nзаписи реестра) и содержит следующие поля:\nasfDataId- идентификатор данных по форме, типkeyword;\nasfDataId- идентификатор данных по форме, типkeyword;\nformId- идентификатор формы, типkeyword;\nformId- идентификатор формы, типkeyword;\nformCode- код формы, типkeyword;\nformCode- код формы, типkeyword;\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\ndocumentId- идентификатор документа Synergy, типkeyword;\ndocumentId- идентификатор документа Synergy, типkeyword;\nstatus- статус записи реестра, типnumber:0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,не связанных с реестром1 - «В процессе» (STATE_NOT_FINISHED)2 - «Активная» (STATE_SUCCESSFUL)3 - «Неуспешная» (STATE_UNSUCCESSFUL)\nstatus- статус записи реестра, типnumber:\n0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,\nне связанных с реестром\n1 - «В процессе» (STATE_NOT_FINISHED)\n2 - «Активная» (STATE_SUCCESSFUL)\n3 - «Неуспешная» (STATE_UNSUCCESSFUL)\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ncreated- дата и время создания данных по форме, типdate;\ncreated- дата и время создания данных по форме, типdate;\nmodified- дата и время изменения данных по форме, типdate.\nmodified- дата и время изменения данных по форме, типdate.\nДалее следуют поля, соответствующие компонентам формы:\nДля каждого компонента формы создаётся несколько полей документа в индексе.\nНазвание полей, соответствующих компоненту формы, формируется так:идентфикаторкомпонентаформывнижнемрегистре_key_постфиксиидентфикаторкомпонентаформывнижнемрегистре_value_постфикс(данные для которых берутся,\nсоответственно, из полейkeyиvalueданных по форме).\nДля каждого поля*_keyи*_valueсоздаются поля с нижеперечисленными постфиксами.\nДля компонентов, находящихся внутри динамической таблицы, а также компонентов с\nмультивыбором («Объекты Synergy»), значения записываются вмассивдля всех постфиксов с учетом типов компонентов.\nДля компонентов, имеющихkeyиvalue, создается общее поле*_object(Object).\nПостфиксы для полей*_key:\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_number- поле содержит значениеkey, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеkey, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_double- поле содержит значениеkey, приведенное к числу, типdouble;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_double- поле содержит значениеkey, приведенное к числу, типdouble;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)51.13333,71.43333(пара чисел, разделенных запятой и пробелом)51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)51.133,-71\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:\n51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)\n51.13333,71.43333(пара чисел, разделенных запятой и пробелом)\n51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)\n51.133,-71\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nПостфиксы для полей*_value:\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nКоличество символов, которые будут включены в поля_exactи_sort, зависят от настроек, указанных\nв конфигурационном файле/opt/synergy/jboss/standalone/configuration/arta/elasticConfiguration.xml.\nПодробное описание этих настроек приведено вРуководстве администратора.",
    "Индексы изменения данных создаются только для тех форм и реестров, коды которых подпадают\nпод шаблоны (секции в конфигурационном файлеarta/elasticConfiguration.xml, см. описание выше).\nИмя индекса<index-prefix>-rh-someRegistryIDи<index-prefix>-fh-someFormID, для реестров и\nформ, соответственно. Alias-ы:rh-нормализованный_код_реестраиfh-нормализованный_код_формы.\nОтличие индексов изменения данных от текущих индексов - на каждое изменение данных по форме\nсоздаётся новый документ в индексе. Кроме этого, для компонентов формы создаются только поля\nсо следующими постфиксами:\nДля*_key:_exact_number_date_double\nДля*_key:\n_exact\n_number\n_date\n_double\nДля*_value:_exact_number\nДля*_value:\n_exact\n_number\nТипы данных и условия создания полей такие же, как и в текущем индексе.",
    "Для использования индексов Elasticsearch в диаграммах Kibana\nнеобходимо указать эти индексы, используяшаблоны индексов(Index patterns). Они представляют собой маску имени, которой\nдолжны соответствовать индексы, входящие в этот шаблон.\nПодробно о шаблонах индексов написано вофициальном руководстве по Kibana.\nНапример, если необходимо создать шаблон для индексовmyindex-1,myindex-2,myindex-3иmyindex-abc, требуется создать\nшаблон индексаmyindex-*, где символ * означает подстановку\nпроизвольного набора символов.\nПримечание\nПоскольку имена индексов данных форм составляются\nна основе кодов соответствующих компонентов форм, рекомендуется присваивать\nэтим компонентам коды с учетом некоторого значащего префикса так,\nчтобы используемые данные можно было объединить в группу по маске\nимени.\nВ случае, если изменение кодов компонентов не представляется\nвозможным, можно создать шаблон индекса с маской «*». Этот шаблон\nбудет содержать все индексы Elasticsearch.\nДругой способ объединения данных по форме в единый шаблон индекса -\nсоздание шаблона для отдельного реестра или формы. Например, если\nв диаграмме необходимо использовать данные реестраsomeRegistryID,\nнужно создать шаблон индекса с названиемr-someRegistryID.\nАналогично, для использования данных формы (в случае, если Synergy\nне содержит реестра для этой формы) с кодомsomeFormIDнужно\nсоздать шаблон индексаf-someFormID.\nСоздание шаблонов индексов осуществляется в разделеManagement-Index Patterns. Для создания нового шаблона нужно нажать на\nкнопку+ Add New. Откроется окно создания нового индекса:\nСоздание нового шаблона индексов\nУстановленный чекбоксIndex contains time-based eventsозначает,\nчто данные, которые входят в шаблон, содержат временные данные.\nВнимание\nНе рекомендуется оставлять этот чекбокс включенным, если не\nпланируется визуализация данных во времени - например, отслеживать\nнагрузку на сервер в настоящий момент. Без особой настройки диаграммы,\nиспользующие такие поля, будут отображать только данные, соответствующие\nтекущему моменту времени.\nВ полеIndex name or patternнеобходимо ввести имя шаблона индекса:\nСоздание нового шаблона индексов без временных данных\nВ случае, если Elasticsearch содержит индексы с именами, соответствующими\nуказанному шаблону, отобразится доступная кнопкаCreate. Для создания\nшаблона индекса нужно нажать на эту кнопку.\nСозданный шаблон индексов\nПосле создания шаблона отображается таблица со списком индексов, входящих\nв этот шаблон, и их свойствами. Эти свойства зависят от типов индексов.\nТипы, с которыми индексируются данные форм Synergy, описаны в разделеИндексация данных форм в ARTA Synergy.",
    "Kibana позволяет создавать следующие типы диаграмм:\n1.Area chart- предназначена для отображения общего изменения\nданных во времени, когда выявление суммарного значения всех данных\nважнее, чем сравнение любых двух или более последовательностей.\nНапример, полезна для отображения использования ресурсов сервера.\n2.Data table- отображение данных как результата агрегации в\nвиде таблицы.\n3.Line chart- используется для отображения данных в виде линий\n(графиков). В отличие от Area charts, удобна для сравнения\nпоследовательностей между собой.\n4.Markdown widget- вставка произвольной информации, используя\nсинтаксис языка Markdown.\n5.Metric- отображение одного числа - результата агрегации\nчисловых данных.\n6.Pie Chart- предназначена для отображения вклада нескольких\nчастей в некоторый общий результат. Может принимать вид круговой\n(pie) или кольцевой (donut) диаграммы.\n7.Tag cloud- отображение данных таким образом, чтобы их размер\nзависел от некоторого числового показателя этих данных (например,\nколичества упоминаний).\n8.Tile map- специфический тип диаграмм, использующий агрегацию\nгеографических данных (тип поляgeo_point) для их отображения на\nкарте.\n9.Timeseries- специфический тип диаграмм, визуализирующий\nвременные ряды.\n10.Vertical bar chart- наиболее универсальная диаграмма,\nотображающая числовые показатели произвольных полей в виде\nвертикальной гистограммы.\nЗдесь будут рассмотрены некоторые наиболее универсальные из этих\nдиаграмм. Для ознакомления с работой остальных типов рекомендуем\nобратиться кофициальному руководству по Kibana.\nПримечание\nВ диаграммах возможно использование только агрегируемых типов\nполей. К ним относятся все числовые типы, а также типыdate,keyword,geo_shapeи другие. Агрегируемые поля отмечены\nгалочкой в графе «Aggregatable» (на странице Managenent -\nIndex Patterns).\nВсе диаграммы создаются в разделеVisualize:\nKibana, раздел Visualize\nВ общем случае, процесс создания диаграмм состоит из трех шагов:\nВыбор типа диаграммы.\nВыбор типа диаграммы.\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.ПримечаниеЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.\nПримечание\nЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных\nВ качестве источника данных может выступать шаблон индекса\nили результат поиска по данным (сохраненный или новый).\nНастройка отображаемых данных:\nНастройка отображаемых данных\nОкно настройки данных имеет стандартный вид:\nВ верхней части располагается панель меню с пунктами:\nNew- создать новую диаграмму, переход к шагу 1;\nSave- сохранить диаграмму;\nOpen- открыть существующую диаграмму;\nShare- предоставить доступ к сохраненной диаграмме;\nRefresh- обновить данные.\nНиже панели меню расположено поле поиска данных, использующее\nсинтаксисLucene. Данное поле используется для фильтрации\nданных, отображаемых в диаграмме. Например, для отображения только\nнеудаленных документов в этой панели нужно ввести запрос:\nгдеdeleted- поле, генерируемое во время индексации данных\nформ и хранящее значение 0, если данные в Synergy не были удалены.\nОсновная рабочая область окна делится на две части:\nнастройка данных: выбор полей и способа их агрегации;\nпросмотр результатов: отображение результата обработки\nвыбранных данных.\nВ части настройки данных, в разделеMetrics, необходимо\nвыбрать способ агрегации числовых данных, отображаемых в\nдиаграмме. В полеAggregationвыбирается способ агрегации,\nа в полеCustom labelвводится отображаемое название параметра.\nВ разделеBucketsнеобходимо выбрать используемые данные,\nчисловые параметры которых будут отображены на диаграмме. Так\nже, как и в разделеMetrics, здесь в полеAggregationвыбирается способ агрегации, а в полеCustom labelвводится\nотображаемое название параметра. Отличие от разделаMetricsсостоит в том, что разделBucketsпозволяет группировать\nпроизвольные типы данных при выборе соответствующего типа\nагрегации.\nНаиболее универсальным способом агрегации, используемом во\nвсех примерах ниже, являетсяTerm. Этот способ позволяет\nагрегировать данные как строки, аналогично функцииGROUP BYв SQL. Подробно об остальных типах агрегации можно ознакомиться\nв официальном руководстве по Kibana.\nПри выборе этого типа агрегации дополнительно отображаются\nполя:\nField- выпадающий список, содержащий все поля, входящие\nв текущий шаблон индекса, для которых доступна агрегация.\nOrder By- параметр сортировки данных - по метрике из\nразделаMetrics, по отдельной метрике (Custom metric) или\nпо содержимому текущего поля (Term).\nOrder- направление сортировки:\nDescending- по убыванию;\nAscending- по возрастанию.\nSize- количество отображаемых элементов - отображаются\nуказанное количество элементов, располагающиеся в начале\nсписка отсортированных указанным образом данных.\nCustom label- отображаемое название параметра.\nДля каждого используемого параметра, независимо от того, используется\nли он в разделахMetricsилиBuckets, доступна дополнительная\nнастройка, отображаемая при нажатии на лейблAdvanced:\nJSON Input\nОна представляет собой текстовое поле, в которое можно добавить\nспециальные свойства в форматеJSON, например:\nВ настоящем документе процесс создания диаграмм и дашбордов\nбудет рассмотрен на примере анализа данных формы «Заявка»:\nФорма «Заявка»\nСоздание диаграммы Pie chart\nДля диаграммы Pie chart возможно два способа организации\nиспользуемых параметров:\nSplit Slices: параметр будет отображен на диаграмме как\nновый уровень секторов:\nЗаявки по офисам и клиентам\nНа этом примере в разделеBucketsв качестве первого\nпараметра использовано поле «Центр решений» - результаты этой\nагрегации на диаграмме отображены во внутреннем круге.\nВ качестве второго параметра используется поле «Клиент/проект»,\nи результаты этой агрегации отображаются во внешнем круге.\nПримечание\nТакая последовательность была выбрана в силу специфики\nвходных данных: известно, что один центр решений занимается\nнесколькими проектами, но одним проектом занимается ровно\nодин центр решений.\nИтоговая диаграмма позволяет оценить распределение объема\nзаявок как по центрам решений, так и по отдельным проектам.\nSplit Chart: для нового параметра будет построена\nотдельная диаграмма:\nЗаявки по офисам и клиентам\nЗдесь для каждого центра решений (поле выбрано первым\nпараметром с типомSplit Chart) отрисована отдельная\nдиаграмма, в которой показано распределение заявок по\nпроектам этих центров (второй параметр с типомSplit Slices).\nВидно, что три центра решений оставляли заявки только по одному\nиз своих проектов.\nПримечание\nKibana допускает использованиеSplit Chartтолько в\nсочетании сSplit Slices, причем в этом случае параметр\nсоSplit Chartобязательно должен располагаться выше, чем\nпараметр соSplit Slices(сначала разделить данные по\nотдельным диаграммам, а потом разделять данные внутри каждой\nдиаграммы).\nДобавить новый параметр можно, нажав на кнопкуAdd sub-buckets.\nВкладкаOptionsдля этого типа диаграмм содержит три\nпараметра:\nВкладка «Опции» диаграммы Pie chart\nВид диаграммы: если чекбоксDonutвключен, диаграмма\nпринимает вид кольцевой, если отключен - круговой (по\nумолчанию).\nРасположение легенды: по умолчанию справа от диаграммы.\nПоказывать всплывающие подсказки при наведении на часть\nдиаграммы: отображаются, если включен чекбоксShow Tooltip.\nСоздание диаграммы Data table\nВ разделеMetricsнеобходимо указать одну или несколько\nметрик, по которым будут агрегироваться данные в таблице.\nВ разделеBucketsнеобходимо указать используемые параметры\nи способы их агрегации. Для этого типа диаграмм также существует\nдва способа организации входных параметров:\nSplit Rowsдля добавления параметра как нового столбца к\nтекущей таблице;\nSplit Tableдля добавления параметра как отдельной таблицы.\nПримечание\nФункциональность этих способов полностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nНастроены отображаемые данные в таблице\nВ диаграмме, указанной на рисунке выше, все параметры были\nдобавлены какSplit Rows. Для каждого параметра в разделеBucketsиспользуется агрегацияTerms.\nВкладкаOptionsдля этого типа диаграмм содержит следующие\nпараметры:\nВкладка «Опции» диаграммы Data table\nКоличество отображаемых строк на странице: по умолчанию\nотображается 10 строк. В случае, если все записи не помещаются\nна одну страницу, в нижней части таблицы отображается переключатель\nстраниц.\nОтображать метрики для каждой группы/уровня: если чекбокс\nвключен, то для каждого столбца (в случаеSplit Rows) или\nкаждой таблицы (в случаеSplit Table) будет добавлен столбец\nс результатом агрегации из разделаMetrics.\nОтображать частичные строки: если чекбокс включен, то в таблицу\nбудут включены строки с данными, отсутствующими для выбранных\nиндексов (полей). По умолчанию в таблице отображаются только\nполностью заполненные строки.\nСчитать метрики для каждой группы/уровня: чекбокс, недоступный\nдля ручной установки. Его значение зависит от параметра\n«Отображать метрики для каждой группы/уровня».\nОтображать итоговые значения: если чекбокс включен, то на каждой\nстранице таблицы для каждой отображаемой метрики будет указано\nитоговое значение этой метрики для всех данных таблицы.\nФункция для итогов: выбор функции для подсчета итоговых значений\nметрик. Параметр доступен только в том случае, если установлен\nчекбокс «Отображать итоговые значения».\nСоздание диаграммы Vertical bar chart\nВ диаграмме этого типа по оси Y располагаются метрики (параметры\nвMetrics), с по оси X - группы (параметры вBuckets).\nДоступно указание нескольких метрик на оси Y и не больше одной\nгруппы каждого типа:\nX-Axis\nSplit Bars\nSplit Chart\nПримечание\nФункциональностьSplit BarsиSplit Chartполностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nДиаграмма Vertical bar chart, пример 1\nНа примере 1 показан результат разделения параметров по диаграммам:\nотображается количество заявок, поданных разными авторами и\nвыполненных разными исполнителями. Для этого исполнители расположены\nпо оси Х, а для каждого автора заявок отрисована отдельная диаграмма.\nДиаграмма Vertical bar chart, пример 2\nНа примере 2 показана простая гистограмма, визуализирующая количество\nзаявок, выполненных разными исполнителями.\nСоздание диаграммы Tile map\nВ диаграмме этого типа визуализируются числовые метрики (параметры\nвMetrics), относящиеся к разным географическим точкам (параметры вBuckets).\nДоступно указание ровно одной метрики и одного разделения по координатам.\nВ разделеBucketsможет быть указан только один тип аггрегирования -Geohash,\nиспользующийся для данных типаgeo_point.\nПодсказка\nДля получения координат в документах индексов Elasticsearch необходимо записать\nпару чисел вkeyкомпонента формы. Проще всего это сделать в компонентах\nтипов «Выпадающий список», «Выбор вариантов» или «Переключатель вариантов»:\nдля них достаточно в качестве наименования элемента указать название географической\nточки, а в качестве значения - пару координат, например:\nНастройка координат в компоненте на форме\nСпецифичный тип диаграммы, который не имеет разделаData.\nВ левой части рабочей области располагается поле ввода текста\nс использованием синтаксиса языкаMarkdown, в правой\nчасти отображается результат разметки текста:\nСоздание Markdown widget\nЭта диаграмма не имеет никаких особых настроек.\nДиаграммаMetricработает только с числовыми данными, поэтому\nдля нее доступны только агрегации типаMetrics:\nСоздание Metrics\nДобавить новую метрику можно, нажав на кнопкуAdd metrics.\nНовая метрика будет добавлена как новое отображаемое число.\nВкладкаOptionsдля этого типа диаграмм содержит только\nодин параметр - размер шрифта:\nВкладка «Опции» диаграммы Metrics\nСоздание Tag cloud\nВ диаграмме Tag cloud возможно использование только одной агрегацииMetricsи только одного, специального способа организации данных вBuckets-Tags. Добавление новых метрик или новых групп недоступно.\nПример диаграммы Tag cloud\nВкладкаOptionsсодержит следующие параметры:\nзависимость размера текста от числовой метрики: линейная, логарифмическая\nили квадратичная;\nориентация тэгов: горизонтальная, вертикальная или произвольная;\nграницы размеров шрифта в тэгах;\nотображать название используемых параметров: чекбокс, по умолчанию выключен.\nВкладка «опции» диаграммы Tag cloud\nДашборд представляет собой панель, на которой располагаются\nранее созданные диаграммы, с широкими возможностями настроек\nотображения, обновления и публикации.\nСоздание дашбордов производится в разделеDashboard:\nKibana, раздел Dashboard\nПанель меню этого раздела содержит пункты:\nNew- переход к строке поиска и созданию нового фильтра.\nAdd- добавить новый дашборд, содержит перечень сохраненных диаграмм\nи результатов поиска:\nДобавление диаграммы на дашборд\nКаждая диаграмма в списке сопровождается пиктограммой, указывающей на тип\nдиаграммы.\nSave- сохранить текущий дашборд.\nOpen- открыть ранее сохраненный дашборд.\nShare- настройки публикации дашборда. Доступны только для сохраненного\nдашборда.\nOptions- настройка внешнего вида дашборда, содержит единственный\nчекбокс «Использовать темную тему», по умолчанию выключен.\nTime range- настройка режима отображения данных для диаграмм.\nВ самой панели отображается настроенный период. По умолчанию отображаются\nданные за последние 15 минут. Данная настройка актуальна, если есть\nнеобходимость отображения данных в режиме реального времени. Доступна\nвозможность быстрой настройки периода (за сегодня, за эту неделю,\nза последний год), указания абсолютной (дата и время в форматеYYYY-MM-DDHH:mm:ss.SSS) или относительной (например, последние\n25 минут) настройки.\nНастройки периода отображения\nПри переходе к этой настройке в панели меню появляется дополнительный\nпунктAuto-refresh. Он предназначен для настройки интервала обновления\nдиаграмм:\nНастройки периода обновления диаграмм\nДанная настройка актуальна, если данные, на основе которых построены\nдиаграммы, регулярно обновляются: например, в терминах Synergy, если необходимо\nотображать актуальные данные реестров, в которых регулярно появляются новые\nзаписи.\nПо умолчанию автообновление выключено.\nДля всех диаграмм на дашборде возможно одновременное применение условий\nдля отображаемых данных. Для этого нужно ввести условие в панель поиска,\nрасполагающуюся ниже панели меню. Функциональность этой панели для\nразделаDashboardsаналогично панели в разделеVisualize.\nДля добавления ранее сохраненной диаграммы на дашборд необходимо выбрать пункт\nменюAdd. Отобразится список доступных диаграмм (илл. «Добавление диаграммы\nна дашборд» выше). Необходимо кликнуть на нужную диаграмму - она будет добавлена\nна дашборд:\nДобавлена панель диаграммы на дашборд\nРазмер отображаемой диаграммы можно изменить, потянув за левый нижний угол панели\nдиаграммы:\nИзменение размера панели диаграммы\nИзменен размер панели диаграммы\nВ случае, если все данные диаграммы не помещаются на панели, в нее будет добавлен\nвнутренний скролл.\nПримечание\nЕсли на определенном размере панели диаграммы «Облако тэгов» не помещаются все\nданные, в ней будут отображены только наиболее популярные тэги (столько, сколько\nвозможно уместить на указанном размере панели), и будет отображен текст, предупреждающий,\nчто для отображения всех данных необходимо увеличить размер панели диаграммы:\nНа панели диаграммы отображаются пиктограммы управления:\n- изменить диаграмму (переход к настройкам отображаемых данных диаграммы в разделеVisualize);\n- переместить панель диаграммы на дашборде;\n- удалить панель диаграммы с дашборда;\n- изменить размер панели диаграммы;\n- отобразать/свернуть источники данных в виде таблицы, запроса или\nисходных данных Elasticsearch, а также статистику запроса данных для этой диаграммы;\n- отобразить/свернуть легенду.\nПримечание\nКоличество диаграмм, располагаемых на дашборде, не ограничено, наложение диаграмм\nдруг на друга не допускается.\nПример готового дашборда:\nПример готового дашборда в режиме редактирования\nТипы использованных примеров диаграмм (перечислены сверху вниз, слева направо):\nMarkdown widget\nPie chart\nTag cloud\nMetric\nVertical bar chart\nPie chart\nData table\nПредупреждение\nПрименение фильтров ко всем диаграммам на дашборде дает корректные\nрезультаты только в том случае, если коды используемых полей полностью\nсовпадают (в том числе постфиксы). В случае, если необходимо отображение\nданных из нескольких форм, имеющих сквозные параметры (например, параметр\n«Статус»), необходимо, чтобы коды компоненов, соответствующих этому\nпараметру, совпадали на всех формах, а в диаграммах использовалось одно\nи то же поле с учетом постфикса.\nKibana предоставляет способы публикации дашборда как интерактивной диаграммы\nили как снимка его состояния на момент публикации (shapshot). Публикация\nпроизводится в менюShare:\nПункт меню «Share»\nВстраивание как дашборда, так и его снимка возможно двумя способами:\nкак фреймаhtml- код для вставки содержится в полеEmbedded iframe;\nкак ссылки - URL страницы содержится в полеLink.\nПодсказка\nПо URL, автоматически генерируемому Kibana, пользователям предоставляется\nдашборд в режиме редактирования, с правом доступа ко всем разделам Kibana.\nДля того, чтобы предоставить пользователям доступ к дашборду только в режиме\nпросмотра, необходимо в URL ссылки добавить параметр:\n&embed=true\nОдин из способов публикации дашборда в Synergy - добавление его каквнешнего модуля. При этом каждый дашборд\nдолжен быть оформлен как отдельный внешний модуль. В качестве адреса приложения\nнеобходимо использовать URL дашборда.\nДругой способ - включение фрейма с дашбордом впользовательский компонент.\nВ этом случае в качестве HTML-кода необходимо использовать код из поляEmbedded iframe.\nПодсказка\nПо умолчанию в код фрейма включены границы 800х600 пикселей. Для того, чтобы\nдашборд занимал все доступное место, необходимо изменить эти параметры:\nheight=\"100%\"width=\"100%\"\nПараметрembed=true, означающий доступ к дашборду только в режиме просмотра,\nвключается Kibana по умолчанию.\nВнимание\nОбратите внимание, что для того, чтобы дашборд был доступен пользователю, у него\nдолжен быть доступ к серверу, на котором запущена Kibana.\nПример дашборда, опубликованного как внешний модуль",
    "Все диаграммы Kibana, за исключением диаграмм Metric и Markdown widget,\nполностью интерактивны. Возможно «проваливание» по клику на любую часть\nдиаграммы: при этом условие, соответствующее этой части, будет применено\nко всем диаграммам на дашборде.\nРассмотрим использование диаграмм на примере ранее показанного дашборда\n«Анализ заявок в центральный офис» (илл. «Пример дашборда, опубликованного\nкак внешний модуль»).\nПодбор диаграмм на дашборде позволяет такие действия:\nпросмотр всех заявок определенного статуса или типа;\nанализ загруженности и качества работы исполнителей;\nпросмотр статуса заявок от выбранного центра решений\nили от выбранного клиента/проекта, и так далее.\nВ качестве примера детально рассмотрим действие«Просмотр всех заявок в\nстатусе „Отклонено“».\nДля просмотра сведений по отклоненным заявкам необходимо на диаграмме\n«Заявки по статусам» кликнуть на сектор, соответствующий статусу «Отклонено».\nУсловие «Статус заявки» = «Отклонено» автоматически применится ко всем\nдиаграммам (кроме Markdown widget):\nУсловие на статус применено\nПроизошло «проваливание»: все диаграммы отображают результаты только\nпо заявкам, имеющим статус «Отклонено». На примере видно, что всего было\nотклонено 6 заявок, больше всего из них имели тип «Невоспроизводимая ошибка».\nТакже видно, какие центры решений подавали эти заявки, кто из исполнителей\nих отклонял. В нижней части дашборда таблица содержит перечень всех отклоненных\nзаявок.\nВ верхней части дашборда отобразилась плашка примененного фильтра в формате%названиеполя%:\"%значение%\". При наведении мыши на эту плашку отображаются\nпиктограммы возможных действий с фильтром:\nвключить/выключить фильтр;\nзакрепить фильтр;\nотображать только результаты фильтрации / отображать все результаты;\nудалить фильтр;\nредактировать запрос для фильтра (синтаксис Elasticsearch).\nДля того, чтобы применить еще одно условие (например, увидеть отклоненную\nзаявку с типом «Оценка», достаточно в диаграммеTag cloudкликнуть на лейбл\nс этим типом. Новое условие применится автоматически:\nУсловие на тип применено\nВидно, что единственная отклоненная заявка с типом «Оценка» касалась возможности\nнастройки выборочного доступа к записям реестра.\nНовый фильтр отображен в верхней части дашборда. Кроме того, в верхней части\nдоступно менюActions, позволяющее действия одновременно над всеми фильтрами.\nПредупреждение\nВсе фильтры применяются только для текущего пользователя и только на время текущего\nподключения. Каждый переход к внешнему модулю с диаграммами означает новое подключение\nк Kibana, и при этом все ранее сохраненные условия будут сброшены.",
    "Ошибка связана с невозможностью доступа к сервису Easticsearch (ES). При\nее возникновении сначала необходимо проверить статус ES. Для этого в\nконсоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nДругой способ - проверить статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли при ошибкеStatus: Redрезультат выполнения этих команд совпадает\nс ожидаемым, это значит, что сервис Elasticsearch запустился, но еще не\nуспел обработать все данных в индексах. Ошибка может возникать, если в\nES загружен большой объем данных. В этом случае рекомендуется дать ES\nвремя на полную загрузку (до 30 минут).\nЕсли спустя время статус Kibana не изменился, или в результате выполнения\nкомандыcurlпоявляется сообщение о невозможности подсоединения\nк серверу, значит, необходимо перезапустить ES, выполнив команду:",
    "При возникновении такой проблемы рекомендуется:\nОстановить запущенные сервисы, выполнив команды:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить запущенные сервисы, выполнив команды:\nПерейти к настройке локали сервера:# dpkg-reconfigure locales\nПерейти к настройке локали сервера:\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Остановить все сервисы:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить все сервисы:\nУдалить существующие индексы ES:# rm -r /var/lib/elasticsearch/nodes\nУдалить существующие индексы ES:\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Диаграмма/дашборд были опубликованы в режиме редактирования. Чтобы\nизбежать такой проблемы, необходимо в параметры URL-ссылки или HTML-фрейма\nдобавить параметрembed=true. Этот параметр означает, что данные должны\nпубликоваться в режиме просмотра.",
    "Проблема возникает в том случае, если отключена Kibana. Необходимо\nпроверить ее состояние:\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nдля проверки статуса из консоли сервера выполните команду:# /etc/init.d/kibana status\nдля проверки статуса из консоли сервера выполните команду:\nРезультатом выполнения должно быть сообщение:\nВ случае, если Kibana не запущена или вернула ошибку, необходимо\nее перезапустить, выполнив команду:",
    "Kibana отображает в диаграммах только заполненные исходные данные.\nДиаграмма может не отображаться в двух случаях:\nК диаграмме было применено условие, результаты которого не\nиспользуются в диаграмме.\nВ исходных данных (в формах и реестрах Synergy) нет ни одного\nдокумента, данные из которого должны отобразиться в диаграмме.\nДанное поведение не является ошибкой ни Kibana, ни Synergy, и при\nобновлении данных диаграммы отобразятся автоматически.",
    "Проблема может возникнуть при импорте диаграмм из внешних источников\n(в том числе при установке бизнес-приложений на базе Synergy, использующих\nKibana), и чаще всего связана с отсутствием в шаблоне индекса числового поля\nс постфиксом_double. Проверить это можно, перейдя к настройке диаграммы:\nв агрегациях по отсутствующим полям отображается ошибка.\nИндекс для поля_doubleсоздается только в том случае, если из содержимого\nполя удалось выделить число. То есть если во всех документах поле не заполнено,\nто и индекс с типомdoubleдля него создан не будет.\nДля того, чтобы исправить проблему, нужно хотя бы в одном документе по форме\nзаполнить числовое поле, на отсутствие которого ссылается Kibana, после чего\nнеобходимо обновить шаблон индекса для диграммы, нажав на кнопку «Обновить»\n(разделManagement-Index patterns).\nДля того, чтобы предотвратить возникновение такой ошибки, рекомендуется для\nкаждого поля, которое будет использовано в диаграммах Kibana как числовое,\nсохранять значение по умолчанию в редакторе форм.",
    "Проблема возникает из-за отсутствия или неправильной настройки периода обновления\nданных. Проверить эти настройки можно в Kibana:\nОткрыть дашборд, требующий настройки автообновления.\nОткрыть дашборд, требующий настройки автообновления.\nВ панели меню выбрать настройки периода времени:\nВ панели меню выбрать настройки периода времени:\nВыбрать пунктAuto-refresh:\nВыбрать пунктAuto-refresh:\nНастроитьRefresh Interval- периодичность обновления данных.\nНастроитьRefresh Interval- периодичность обновления данных.\nОсторожно\nНе рекомендуется устанавливать периодичность обновления меньше, чем 30\nсекунд, поскольку на стороне пользователя может возникнуть проблема фризов\n(секундных подергиваний или застываний изображения).",
    "Возможно, не был переключен индексатор данных форм. По умолчанию в Synergy\nдля индексации данных используется система Lucene. Переключение индексаторов\nмежду Lucene и ES осуществляется в файле/opt/synergy/jboss/standalone/configuration/arta/esb/formIndex.xml.\nНеобходимо убедиться, что содержимое первого тэга<handler>, соответствующее\nLucene, закомментировано, и раскомментировать содержимое тэга после<elastic>(относящееся к ES):",
    "Необходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).Проверка статуса ES может быть осуществлена двумя способами:в консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh statusРезультатом выполнения команды должно быть сообщение:[ok]elasticsearchisrunning.проверьте статус ES непосредственно:# curl localhost:9200localhost:9200- это адрес ES по умолчанию.Вывод должен быть таким:{\"name\":\"RFSWkzt\",\"cluster_name\":\"elasticsearch\",\"cluster_uuid\":\"r67YbmerQvyNHdxlzDIt3A\",\"version\":{\"number\":\"5.1.2\",\"build_hash\":\"c8c4c16\",\"build_date\":\"2017-01-11T20:18:39.146Z\",\"build_snapshot\":false,\"lucene_version\":\"6.3.0\"},\"tagline\":\"You Know, for Search\"}\nНеобходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).\nПроверка статуса ES может быть осуществлена двумя способами:\nв консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh status\nв консоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nпроверьте статус ES непосредственно:# curl localhost:9200\nпроверьте статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:################################# Elasticsearch################################# Elasticsearch home directory#ES_HOME=/usr/share/elasticsearch# Elasticsearch Java pathJAVA_HOME=/usr/lib/jvm/java-8-oracle# Elasticsearch configuration directory#CONF_DIR=/etc/elasticsearch# Elasticsearch data directory#DATA_DIR=/var/lib/elasticsearch# Elasticsearch logs directory#LOG_DIR=/var/log/elasticsearch# Elasticsearch PID directory#PID_DIR=/var/run/elasticsearch# Additional Java OPTS#ES_JAVA_OPTS=# Configure restart on package upgrade (true, every other setting will lead to not restarting)#RESTART_ON_UPGRADE=trueВниманиеВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:\nВнимание\nВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nПерезапустите ES, выполнив команду:# etc/init.d/elasticsearsh restart\nПерезапустите ES, выполнив команду:",
    "Аналитические дашборды - это набор диаграмм, отображающих состояние\nданных в различных представлениях и разрезах. Они предназначены для\nупрощения работы по их оценке, обработке, прогнозированию дальнейшего\nсостояния и принятию решений.",
    "Для интеграции аналитических дашбордов в Synergy используется\nкомбинация инструментовElasticsearchиKibana.\nElasticsearch (ES)-\nэто мощный инструмент для полнотекстового поиска и анализа данных.\nОн позволяет быстро загружать, выполнять поиск и анализировать\nбольшие объемы данных. Однако ES не имеет специальной визуальной\nоболочки, и его использование возможно с помощью набора специальных\nAPI.\nKibana- это платформа\nдля анализа и визуализации данных. Kibana обрабатывает данные,\nзагруженные в ES, и работает только параллельно с ним. Если\nработа с ES предполагает использование специального синтаксиса\nкоманд, то Kibana позволяет обрабатывать те же данные с\nпомощью визуального интерфейса. При этом Kibana содержит\nинтерпретатор, позволяющий использование всех возможностей и\nспециальных команд ES.\nИндексация и обработка исходных данных Synergy производится с\nпомощью ES, дальнейший анализ и визуализация - с помощью Kibana.\nВ настоящем документе будут рассмотрены только некоторые из\nвозможностей этих инструментов, непосредственно относящиеся\nк задаче визуализации данных. Для подробного изучения всех их\nвозможностей и способов использования рекомендуем обращаться\nк официальной документации:\nElasticsearch;\nKibana.",
    "Запись данных в индекс производится после сохранения данных по форме.\nПервичная загрузка данных в ES осуществляется с помощью процесса индексации\nданных форм (Административное приложение -> Обслуживание системы -> Управление индексом форм).\nВ это время для каждой формы и каждого компонента этой формы в Synergy\nсоздается несколько индексов. Каждый из этих индексов будет отображен в\nKibana со своим кодом, как используемое поле.",
    "Для всех данных по форме, принадлежащих реестру с идентификаторомsomeRegistryID,\nсоздаётся индекс с именем<index-prefix>-r-someRegistryID.\nДля всех данных по форме с идентификаторомsomeFormIDсоздаётся\nиндекс с именем<index-prefix>-f-someFormID.\nЕсли итоговая длина названия индекса (как для форм, так и для реестров)\nпревысит 255 байт, оно будет обрезано до 255 байт.\nТаким образом, для каждого реестра и для каждой формы, по которым есть данные,\nбудет создано по индексу. Если по форме создан реестр, а также созданы какие-то\nданные вне реестра, то в этом случае будет создано два индекса:\n<index-prefix>-r-IdOfRegistryWithOtherForm\n<index-prefix>-f-otherID.\nПримечание\nЗдесьописано, как получить названия всех имеющихся индексов в Elasticsearch.\nКроме этого, для удобства использования и возможности переноса конфигурации для\nкаждого из вышеперечисленных индексов создаётсяalias.\nИмена alias-ов формируются так:\nДля данных реестров:r-нормализованный_код_реестра\nДля данных форм без реестров:f-нормализованный_код_формыгденормализованый_код_реестраинормализованный_код_формы- коды, соответственно,\nреестра и формы, в которых специальные символы , ., [, ], {, }, (, ), +, -, ?, ^, $, |\nзаменяются на _.\nПредупреждение\nПри этом возможна ситуация, когда нормализованные коды разных реестров совпадут и alias\nбудет создан на на все соответветствующие индексы. Эта маловероятное затруднение может быть\nрешено изменением кодов соответствующих реестров или форм. В случае, если это невозможно,\nнеобходимые alias-ыможно создать вручную.\nПри изменении кода реестра или формы в Synergy имя соответствующего alias-а также изменяется.",
    "Одна единица данных в индексе Elasticsearch называетсяДокумент. Документ содержит\nполя определённыхтипов.\nКаждый документ в текущем индексе соответствует одной единице данных по форме (=файлу по форме,\nзаписи реестра) и содержит следующие поля:\nasfDataId- идентификатор данных по форме, типkeyword;\nasfDataId- идентификатор данных по форме, типkeyword;\nformId- идентификатор формы, типkeyword;\nformId- идентификатор формы, типkeyword;\nformCode- код формы, типkeyword;\nformCode- код формы, типkeyword;\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\ndocumentId- идентификатор документа Synergy, типkeyword;\ndocumentId- идентификатор документа Synergy, типkeyword;\nstatus- статус записи реестра, типnumber:0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,не связанных с реестром1 - «В процессе» (STATE_NOT_FINISHED)2 - «Активная» (STATE_SUCCESSFUL)3 - «Неуспешная» (STATE_UNSUCCESSFUL)\nstatus- статус записи реестра, типnumber:\n0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,\nне связанных с реестром\n1 - «В процессе» (STATE_NOT_FINISHED)\n2 - «Активная» (STATE_SUCCESSFUL)\n3 - «Неуспешная» (STATE_UNSUCCESSFUL)\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ncreated- дата и время создания данных по форме, типdate;\ncreated- дата и время создания данных по форме, типdate;\nmodified- дата и время изменения данных по форме, типdate.\nmodified- дата и время изменения данных по форме, типdate.\nДалее следуют поля, соответствующие компонентам формы:\nДля каждого компонента формы создаётся несколько полей документа в индексе.\nНазвание полей, соответствующих компоненту формы, формируется так:идентфикаторкомпонентаформывнижнемрегистре_key_постфиксиидентфикаторкомпонентаформывнижнемрегистре_value_постфикс(данные для которых берутся,\nсоответственно, из полейkeyиvalueданных по форме).\nДля каждого поля*_keyи*_valueсоздаются поля с нижеперечисленными постфиксами.\nДля компонентов, находящихся внутри динамической таблицы, а также компонентов с\nмультивыбором («Объекты Synergy»), значения записываются вмассивдля всех постфиксов с учетом типов компонентов.\nДля компонентов, имеющихkeyиvalue, создается общее поле*_object(Object).\nПостфиксы для полей*_key:\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_number- поле содержит значениеkey, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеkey, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_double- поле содержит значениеkey, приведенное к числу, типdouble;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_double- поле содержит значениеkey, приведенное к числу, типdouble;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)51.13333,71.43333(пара чисел, разделенных запятой и пробелом)51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)51.133,-71\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:\n51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)\n51.13333,71.43333(пара чисел, разделенных запятой и пробелом)\n51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)\n51.133,-71\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nПостфиксы для полей*_value:\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nКоличество символов, которые будут включены в поля_exactи_sort, зависят от настроек, указанных\nв конфигурационном файле/opt/synergy/jboss/standalone/configuration/arta/elasticConfiguration.xml.\nПодробное описание этих настроек приведено вРуководстве администратора.",
    "Индексы изменения данных создаются только для тех форм и реестров, коды которых подпадают\nпод шаблоны (секции в конфигурационном файлеarta/elasticConfiguration.xml, см. описание выше).\nИмя индекса<index-prefix>-rh-someRegistryIDи<index-prefix>-fh-someFormID, для реестров и\nформ, соответственно. Alias-ы:rh-нормализованный_код_реестраиfh-нормализованный_код_формы.\nОтличие индексов изменения данных от текущих индексов - на каждое изменение данных по форме\nсоздаётся новый документ в индексе. Кроме этого, для компонентов формы создаются только поля\nсо следующими постфиксами:\nДля*_key:_exact_number_date_double\nДля*_key:\n_exact\n_number\n_date\n_double\nДля*_value:_exact_number\nДля*_value:\n_exact\n_number\nТипы данных и условия создания полей такие же, как и в текущем индексе.",
    "Для использования индексов Elasticsearch в диаграммах Kibana\nнеобходимо указать эти индексы, используяшаблоны индексов(Index patterns). Они представляют собой маску имени, которой\nдолжны соответствовать индексы, входящие в этот шаблон.\nПодробно о шаблонах индексов написано вофициальном руководстве по Kibana.\nНапример, если необходимо создать шаблон для индексовmyindex-1,myindex-2,myindex-3иmyindex-abc, требуется создать\nшаблон индексаmyindex-*, где символ * означает подстановку\nпроизвольного набора символов.\nПримечание\nПоскольку имена индексов данных форм составляются\nна основе кодов соответствующих компонентов форм, рекомендуется присваивать\nэтим компонентам коды с учетом некоторого значащего префикса так,\nчтобы используемые данные можно было объединить в группу по маске\nимени.\nВ случае, если изменение кодов компонентов не представляется\nвозможным, можно создать шаблон индекса с маской «*». Этот шаблон\nбудет содержать все индексы Elasticsearch.\nДругой способ объединения данных по форме в единый шаблон индекса -\nсоздание шаблона для отдельного реестра или формы. Например, если\nв диаграмме необходимо использовать данные реестраsomeRegistryID,\nнужно создать шаблон индекса с названиемr-someRegistryID.\nАналогично, для использования данных формы (в случае, если Synergy\nне содержит реестра для этой формы) с кодомsomeFormIDнужно\nсоздать шаблон индексаf-someFormID.\nСоздание шаблонов индексов осуществляется в разделеManagement-Index Patterns. Для создания нового шаблона нужно нажать на\nкнопку+ Add New. Откроется окно создания нового индекса:\nСоздание нового шаблона индексов\nУстановленный чекбоксIndex contains time-based eventsозначает,\nчто данные, которые входят в шаблон, содержат временные данные.\nВнимание\nНе рекомендуется оставлять этот чекбокс включенным, если не\nпланируется визуализация данных во времени - например, отслеживать\nнагрузку на сервер в настоящий момент. Без особой настройки диаграммы,\nиспользующие такие поля, будут отображать только данные, соответствующие\nтекущему моменту времени.\nВ полеIndex name or patternнеобходимо ввести имя шаблона индекса:\nСоздание нового шаблона индексов без временных данных\nВ случае, если Elasticsearch содержит индексы с именами, соответствующими\nуказанному шаблону, отобразится доступная кнопкаCreate. Для создания\nшаблона индекса нужно нажать на эту кнопку.\nСозданный шаблон индексов\nПосле создания шаблона отображается таблица со списком индексов, входящих\nв этот шаблон, и их свойствами. Эти свойства зависят от типов индексов.\nТипы, с которыми индексируются данные форм Synergy, описаны в разделеИндексация данных форм в ARTA Synergy.",
    "Kibana позволяет создавать следующие типы диаграмм:\n1.Area chart- предназначена для отображения общего изменения\nданных во времени, когда выявление суммарного значения всех данных\nважнее, чем сравнение любых двух или более последовательностей.\nНапример, полезна для отображения использования ресурсов сервера.\n2.Data table- отображение данных как результата агрегации в\nвиде таблицы.\n3.Line chart- используется для отображения данных в виде линий\n(графиков). В отличие от Area charts, удобна для сравнения\nпоследовательностей между собой.\n4.Markdown widget- вставка произвольной информации, используя\nсинтаксис языка Markdown.\n5.Metric- отображение одного числа - результата агрегации\nчисловых данных.\n6.Pie Chart- предназначена для отображения вклада нескольких\nчастей в некоторый общий результат. Может принимать вид круговой\n(pie) или кольцевой (donut) диаграммы.\n7.Tag cloud- отображение данных таким образом, чтобы их размер\nзависел от некоторого числового показателя этих данных (например,\nколичества упоминаний).\n8.Tile map- специфический тип диаграмм, использующий агрегацию\nгеографических данных (тип поляgeo_point) для их отображения на\nкарте.\n9.Timeseries- специфический тип диаграмм, визуализирующий\nвременные ряды.\n10.Vertical bar chart- наиболее универсальная диаграмма,\nотображающая числовые показатели произвольных полей в виде\nвертикальной гистограммы.\nЗдесь будут рассмотрены некоторые наиболее универсальные из этих\nдиаграмм. Для ознакомления с работой остальных типов рекомендуем\nобратиться кофициальному руководству по Kibana.\nПримечание\nВ диаграммах возможно использование только агрегируемых типов\nполей. К ним относятся все числовые типы, а также типыdate,keyword,geo_shapeи другие. Агрегируемые поля отмечены\nгалочкой в графе «Aggregatable» (на странице Managenent -\nIndex Patterns).\nВсе диаграммы создаются в разделеVisualize:\nKibana, раздел Visualize\nВ общем случае, процесс создания диаграмм состоит из трех шагов:\nВыбор типа диаграммы.\nВыбор типа диаграммы.\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.ПримечаниеЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.\nПримечание\nЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных\nВ качестве источника данных может выступать шаблон индекса\nили результат поиска по данным (сохраненный или новый).\nНастройка отображаемых данных:\nНастройка отображаемых данных\nОкно настройки данных имеет стандартный вид:\nВ верхней части располагается панель меню с пунктами:\nNew- создать новую диаграмму, переход к шагу 1;\nSave- сохранить диаграмму;\nOpen- открыть существующую диаграмму;\nShare- предоставить доступ к сохраненной диаграмме;\nRefresh- обновить данные.\nНиже панели меню расположено поле поиска данных, использующее\nсинтаксисLucene. Данное поле используется для фильтрации\nданных, отображаемых в диаграмме. Например, для отображения только\nнеудаленных документов в этой панели нужно ввести запрос:\nгдеdeleted- поле, генерируемое во время индексации данных\nформ и хранящее значение 0, если данные в Synergy не были удалены.\nОсновная рабочая область окна делится на две части:\nнастройка данных: выбор полей и способа их агрегации;\nпросмотр результатов: отображение результата обработки\nвыбранных данных.\nВ части настройки данных, в разделеMetrics, необходимо\nвыбрать способ агрегации числовых данных, отображаемых в\nдиаграмме. В полеAggregationвыбирается способ агрегации,\nа в полеCustom labelвводится отображаемое название параметра.\nВ разделеBucketsнеобходимо выбрать используемые данные,\nчисловые параметры которых будут отображены на диаграмме. Так\nже, как и в разделеMetrics, здесь в полеAggregationвыбирается способ агрегации, а в полеCustom labelвводится\nотображаемое название параметра. Отличие от разделаMetricsсостоит в том, что разделBucketsпозволяет группировать\nпроизвольные типы данных при выборе соответствующего типа\nагрегации.\nНаиболее универсальным способом агрегации, используемом во\nвсех примерах ниже, являетсяTerm. Этот способ позволяет\nагрегировать данные как строки, аналогично функцииGROUP BYв SQL. Подробно об остальных типах агрегации можно ознакомиться\nв официальном руководстве по Kibana.\nПри выборе этого типа агрегации дополнительно отображаются\nполя:\nField- выпадающий список, содержащий все поля, входящие\nв текущий шаблон индекса, для которых доступна агрегация.\nOrder By- параметр сортировки данных - по метрике из\nразделаMetrics, по отдельной метрике (Custom metric) или\nпо содержимому текущего поля (Term).\nOrder- направление сортировки:\nDescending- по убыванию;\nAscending- по возрастанию.\nSize- количество отображаемых элементов - отображаются\nуказанное количество элементов, располагающиеся в начале\nсписка отсортированных указанным образом данных.\nCustom label- отображаемое название параметра.\nДля каждого используемого параметра, независимо от того, используется\nли он в разделахMetricsилиBuckets, доступна дополнительная\nнастройка, отображаемая при нажатии на лейблAdvanced:\nJSON Input\nОна представляет собой текстовое поле, в которое можно добавить\nспециальные свойства в форматеJSON, например:\nВ настоящем документе процесс создания диаграмм и дашбордов\nбудет рассмотрен на примере анализа данных формы «Заявка»:\nФорма «Заявка»\nСоздание диаграммы Pie chart\nДля диаграммы Pie chart возможно два способа организации\nиспользуемых параметров:\nSplit Slices: параметр будет отображен на диаграмме как\nновый уровень секторов:\nЗаявки по офисам и клиентам\nНа этом примере в разделеBucketsв качестве первого\nпараметра использовано поле «Центр решений» - результаты этой\nагрегации на диаграмме отображены во внутреннем круге.\nВ качестве второго параметра используется поле «Клиент/проект»,\nи результаты этой агрегации отображаются во внешнем круге.\nПримечание\nТакая последовательность была выбрана в силу специфики\nвходных данных: известно, что один центр решений занимается\nнесколькими проектами, но одним проектом занимается ровно\nодин центр решений.\nИтоговая диаграмма позволяет оценить распределение объема\nзаявок как по центрам решений, так и по отдельным проектам.\nSplit Chart: для нового параметра будет построена\nотдельная диаграмма:\nЗаявки по офисам и клиентам\nЗдесь для каждого центра решений (поле выбрано первым\nпараметром с типомSplit Chart) отрисована отдельная\nдиаграмма, в которой показано распределение заявок по\nпроектам этих центров (второй параметр с типомSplit Slices).\nВидно, что три центра решений оставляли заявки только по одному\nиз своих проектов.\nПримечание\nKibana допускает использованиеSplit Chartтолько в\nсочетании сSplit Slices, причем в этом случае параметр\nсоSplit Chartобязательно должен располагаться выше, чем\nпараметр соSplit Slices(сначала разделить данные по\nотдельным диаграммам, а потом разделять данные внутри каждой\nдиаграммы).\nДобавить новый параметр можно, нажав на кнопкуAdd sub-buckets.\nВкладкаOptionsдля этого типа диаграмм содержит три\nпараметра:\nВкладка «Опции» диаграммы Pie chart\nВид диаграммы: если чекбоксDonutвключен, диаграмма\nпринимает вид кольцевой, если отключен - круговой (по\nумолчанию).\nРасположение легенды: по умолчанию справа от диаграммы.\nПоказывать всплывающие подсказки при наведении на часть\nдиаграммы: отображаются, если включен чекбоксShow Tooltip.\nСоздание диаграммы Data table\nВ разделеMetricsнеобходимо указать одну или несколько\nметрик, по которым будут агрегироваться данные в таблице.\nВ разделеBucketsнеобходимо указать используемые параметры\nи способы их агрегации. Для этого типа диаграмм также существует\nдва способа организации входных параметров:\nSplit Rowsдля добавления параметра как нового столбца к\nтекущей таблице;\nSplit Tableдля добавления параметра как отдельной таблицы.\nПримечание\nФункциональность этих способов полностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nНастроены отображаемые данные в таблице\nВ диаграмме, указанной на рисунке выше, все параметры были\nдобавлены какSplit Rows. Для каждого параметра в разделеBucketsиспользуется агрегацияTerms.\nВкладкаOptionsдля этого типа диаграмм содержит следующие\nпараметры:\nВкладка «Опции» диаграммы Data table\nКоличество отображаемых строк на странице: по умолчанию\nотображается 10 строк. В случае, если все записи не помещаются\nна одну страницу, в нижней части таблицы отображается переключатель\nстраниц.\nОтображать метрики для каждой группы/уровня: если чекбокс\nвключен, то для каждого столбца (в случаеSplit Rows) или\nкаждой таблицы (в случаеSplit Table) будет добавлен столбец\nс результатом агрегации из разделаMetrics.\nОтображать частичные строки: если чекбокс включен, то в таблицу\nбудут включены строки с данными, отсутствующими для выбранных\nиндексов (полей). По умолчанию в таблице отображаются только\nполностью заполненные строки.\nСчитать метрики для каждой группы/уровня: чекбокс, недоступный\nдля ручной установки. Его значение зависит от параметра\n«Отображать метрики для каждой группы/уровня».\nОтображать итоговые значения: если чекбокс включен, то на каждой\nстранице таблицы для каждой отображаемой метрики будет указано\nитоговое значение этой метрики для всех данных таблицы.\nФункция для итогов: выбор функции для подсчета итоговых значений\nметрик. Параметр доступен только в том случае, если установлен\nчекбокс «Отображать итоговые значения».\nСоздание диаграммы Vertical bar chart\nВ диаграмме этого типа по оси Y располагаются метрики (параметры\nвMetrics), с по оси X - группы (параметры вBuckets).\nДоступно указание нескольких метрик на оси Y и не больше одной\nгруппы каждого типа:\nX-Axis\nSplit Bars\nSplit Chart\nПримечание\nФункциональностьSplit BarsиSplit Chartполностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nДиаграмма Vertical bar chart, пример 1\nНа примере 1 показан результат разделения параметров по диаграммам:\nотображается количество заявок, поданных разными авторами и\nвыполненных разными исполнителями. Для этого исполнители расположены\nпо оси Х, а для каждого автора заявок отрисована отдельная диаграмма.\nДиаграмма Vertical bar chart, пример 2\nНа примере 2 показана простая гистограмма, визуализирующая количество\nзаявок, выполненных разными исполнителями.\nСоздание диаграммы Tile map\nВ диаграмме этого типа визуализируются числовые метрики (параметры\nвMetrics), относящиеся к разным географическим точкам (параметры вBuckets).\nДоступно указание ровно одной метрики и одного разделения по координатам.\nВ разделеBucketsможет быть указан только один тип аггрегирования -Geohash,\nиспользующийся для данных типаgeo_point.\nПодсказка\nДля получения координат в документах индексов Elasticsearch необходимо записать\nпару чисел вkeyкомпонента формы. Проще всего это сделать в компонентах\nтипов «Выпадающий список», «Выбор вариантов» или «Переключатель вариантов»:\nдля них достаточно в качестве наименования элемента указать название географической\nточки, а в качестве значения - пару координат, например:\nНастройка координат в компоненте на форме\nСпецифичный тип диаграммы, который не имеет разделаData.\nВ левой части рабочей области располагается поле ввода текста\nс использованием синтаксиса языкаMarkdown, в правой\nчасти отображается результат разметки текста:\nСоздание Markdown widget\nЭта диаграмма не имеет никаких особых настроек.\nДиаграммаMetricработает только с числовыми данными, поэтому\nдля нее доступны только агрегации типаMetrics:\nСоздание Metrics\nДобавить новую метрику можно, нажав на кнопкуAdd metrics.\nНовая метрика будет добавлена как новое отображаемое число.\nВкладкаOptionsдля этого типа диаграмм содержит только\nодин параметр - размер шрифта:\nВкладка «Опции» диаграммы Metrics\nСоздание Tag cloud\nВ диаграмме Tag cloud возможно использование только одной агрегацииMetricsи только одного, специального способа организации данных вBuckets-Tags. Добавление новых метрик или новых групп недоступно.\nПример диаграммы Tag cloud\nВкладкаOptionsсодержит следующие параметры:\nзависимость размера текста от числовой метрики: линейная, логарифмическая\nили квадратичная;\nориентация тэгов: горизонтальная, вертикальная или произвольная;\nграницы размеров шрифта в тэгах;\nотображать название используемых параметров: чекбокс, по умолчанию выключен.\nВкладка «опции» диаграммы Tag cloud\nДашборд представляет собой панель, на которой располагаются\nранее созданные диаграммы, с широкими возможностями настроек\nотображения, обновления и публикации.\nСоздание дашбордов производится в разделеDashboard:\nKibana, раздел Dashboard\nПанель меню этого раздела содержит пункты:\nNew- переход к строке поиска и созданию нового фильтра.\nAdd- добавить новый дашборд, содержит перечень сохраненных диаграмм\nи результатов поиска:\nДобавление диаграммы на дашборд\nКаждая диаграмма в списке сопровождается пиктограммой, указывающей на тип\nдиаграммы.\nSave- сохранить текущий дашборд.\nOpen- открыть ранее сохраненный дашборд.\nShare- настройки публикации дашборда. Доступны только для сохраненного\nдашборда.\nOptions- настройка внешнего вида дашборда, содержит единственный\nчекбокс «Использовать темную тему», по умолчанию выключен.\nTime range- настройка режима отображения данных для диаграмм.\nВ самой панели отображается настроенный период. По умолчанию отображаются\nданные за последние 15 минут. Данная настройка актуальна, если есть\nнеобходимость отображения данных в режиме реального времени. Доступна\nвозможность быстрой настройки периода (за сегодня, за эту неделю,\nза последний год), указания абсолютной (дата и время в форматеYYYY-MM-DDHH:mm:ss.SSS) или относительной (например, последние\n25 минут) настройки.\nНастройки периода отображения\nПри переходе к этой настройке в панели меню появляется дополнительный\nпунктAuto-refresh. Он предназначен для настройки интервала обновления\nдиаграмм:\nНастройки периода обновления диаграмм\nДанная настройка актуальна, если данные, на основе которых построены\nдиаграммы, регулярно обновляются: например, в терминах Synergy, если необходимо\nотображать актуальные данные реестров, в которых регулярно появляются новые\nзаписи.\nПо умолчанию автообновление выключено.\nДля всех диаграмм на дашборде возможно одновременное применение условий\nдля отображаемых данных. Для этого нужно ввести условие в панель поиска,\nрасполагающуюся ниже панели меню. Функциональность этой панели для\nразделаDashboardsаналогично панели в разделеVisualize.\nДля добавления ранее сохраненной диаграммы на дашборд необходимо выбрать пункт\nменюAdd. Отобразится список доступных диаграмм (илл. «Добавление диаграммы\nна дашборд» выше). Необходимо кликнуть на нужную диаграмму - она будет добавлена\nна дашборд:\nДобавлена панель диаграммы на дашборд\nРазмер отображаемой диаграммы можно изменить, потянув за левый нижний угол панели\nдиаграммы:\nИзменение размера панели диаграммы\nИзменен размер панели диаграммы\nВ случае, если все данные диаграммы не помещаются на панели, в нее будет добавлен\nвнутренний скролл.\nПримечание\nЕсли на определенном размере панели диаграммы «Облако тэгов» не помещаются все\nданные, в ней будут отображены только наиболее популярные тэги (столько, сколько\nвозможно уместить на указанном размере панели), и будет отображен текст, предупреждающий,\nчто для отображения всех данных необходимо увеличить размер панели диаграммы:\nНа панели диаграммы отображаются пиктограммы управления:\n- изменить диаграмму (переход к настройкам отображаемых данных диаграммы в разделеVisualize);\n- переместить панель диаграммы на дашборде;\n- удалить панель диаграммы с дашборда;\n- изменить размер панели диаграммы;\n- отобразать/свернуть источники данных в виде таблицы, запроса или\nисходных данных Elasticsearch, а также статистику запроса данных для этой диаграммы;\n- отобразить/свернуть легенду.\nПримечание\nКоличество диаграмм, располагаемых на дашборде, не ограничено, наложение диаграмм\nдруг на друга не допускается.\nПример готового дашборда:\nПример готового дашборда в режиме редактирования\nТипы использованных примеров диаграмм (перечислены сверху вниз, слева направо):\nMarkdown widget\nPie chart\nTag cloud\nMetric\nVertical bar chart\nPie chart\nData table\nПредупреждение\nПрименение фильтров ко всем диаграммам на дашборде дает корректные\nрезультаты только в том случае, если коды используемых полей полностью\nсовпадают (в том числе постфиксы). В случае, если необходимо отображение\nданных из нескольких форм, имеющих сквозные параметры (например, параметр\n«Статус»), необходимо, чтобы коды компоненов, соответствующих этому\nпараметру, совпадали на всех формах, а в диаграммах использовалось одно\nи то же поле с учетом постфикса.\nKibana предоставляет способы публикации дашборда как интерактивной диаграммы\nили как снимка его состояния на момент публикации (shapshot). Публикация\nпроизводится в менюShare:\nПункт меню «Share»\nВстраивание как дашборда, так и его снимка возможно двумя способами:\nкак фреймаhtml- код для вставки содержится в полеEmbedded iframe;\nкак ссылки - URL страницы содержится в полеLink.\nПодсказка\nПо URL, автоматически генерируемому Kibana, пользователям предоставляется\nдашборд в режиме редактирования, с правом доступа ко всем разделам Kibana.\nДля того, чтобы предоставить пользователям доступ к дашборду только в режиме\nпросмотра, необходимо в URL ссылки добавить параметр:\n&embed=true\nОдин из способов публикации дашборда в Synergy - добавление его каквнешнего модуля. При этом каждый дашборд\nдолжен быть оформлен как отдельный внешний модуль. В качестве адреса приложения\nнеобходимо использовать URL дашборда.\nДругой способ - включение фрейма с дашбордом впользовательский компонент.\nВ этом случае в качестве HTML-кода необходимо использовать код из поляEmbedded iframe.\nПодсказка\nПо умолчанию в код фрейма включены границы 800х600 пикселей. Для того, чтобы\nдашборд занимал все доступное место, необходимо изменить эти параметры:\nheight=\"100%\"width=\"100%\"\nПараметрembed=true, означающий доступ к дашборду только в режиме просмотра,\nвключается Kibana по умолчанию.\nВнимание\nОбратите внимание, что для того, чтобы дашборд был доступен пользователю, у него\nдолжен быть доступ к серверу, на котором запущена Kibana.\nПример дашборда, опубликованного как внешний модуль",
    "Все диаграммы Kibana, за исключением диаграмм Metric и Markdown widget,\nполностью интерактивны. Возможно «проваливание» по клику на любую часть\nдиаграммы: при этом условие, соответствующее этой части, будет применено\nко всем диаграммам на дашборде.\nРассмотрим использование диаграмм на примере ранее показанного дашборда\n«Анализ заявок в центральный офис» (илл. «Пример дашборда, опубликованного\nкак внешний модуль»).\nПодбор диаграмм на дашборде позволяет такие действия:\nпросмотр всех заявок определенного статуса или типа;\nанализ загруженности и качества работы исполнителей;\nпросмотр статуса заявок от выбранного центра решений\nили от выбранного клиента/проекта, и так далее.\nВ качестве примера детально рассмотрим действие«Просмотр всех заявок в\nстатусе „Отклонено“».\nДля просмотра сведений по отклоненным заявкам необходимо на диаграмме\n«Заявки по статусам» кликнуть на сектор, соответствующий статусу «Отклонено».\nУсловие «Статус заявки» = «Отклонено» автоматически применится ко всем\nдиаграммам (кроме Markdown widget):\nУсловие на статус применено\nПроизошло «проваливание»: все диаграммы отображают результаты только\nпо заявкам, имеющим статус «Отклонено». На примере видно, что всего было\nотклонено 6 заявок, больше всего из них имели тип «Невоспроизводимая ошибка».\nТакже видно, какие центры решений подавали эти заявки, кто из исполнителей\nих отклонял. В нижней части дашборда таблица содержит перечень всех отклоненных\nзаявок.\nВ верхней части дашборда отобразилась плашка примененного фильтра в формате%названиеполя%:\"%значение%\". При наведении мыши на эту плашку отображаются\nпиктограммы возможных действий с фильтром:\nвключить/выключить фильтр;\nзакрепить фильтр;\nотображать только результаты фильтрации / отображать все результаты;\nудалить фильтр;\nредактировать запрос для фильтра (синтаксис Elasticsearch).\nДля того, чтобы применить еще одно условие (например, увидеть отклоненную\nзаявку с типом «Оценка», достаточно в диаграммеTag cloudкликнуть на лейбл\nс этим типом. Новое условие применится автоматически:\nУсловие на тип применено\nВидно, что единственная отклоненная заявка с типом «Оценка» касалась возможности\nнастройки выборочного доступа к записям реестра.\nНовый фильтр отображен в верхней части дашборда. Кроме того, в верхней части\nдоступно менюActions, позволяющее действия одновременно над всеми фильтрами.\nПредупреждение\nВсе фильтры применяются только для текущего пользователя и только на время текущего\nподключения. Каждый переход к внешнему модулю с диаграммами означает новое подключение\nк Kibana, и при этом все ранее сохраненные условия будут сброшены.",
    "Ошибка связана с невозможностью доступа к сервису Easticsearch (ES). При\nее возникновении сначала необходимо проверить статус ES. Для этого в\nконсоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nДругой способ - проверить статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли при ошибкеStatus: Redрезультат выполнения этих команд совпадает\nс ожидаемым, это значит, что сервис Elasticsearch запустился, но еще не\nуспел обработать все данных в индексах. Ошибка может возникать, если в\nES загружен большой объем данных. В этом случае рекомендуется дать ES\nвремя на полную загрузку (до 30 минут).\nЕсли спустя время статус Kibana не изменился, или в результате выполнения\nкомандыcurlпоявляется сообщение о невозможности подсоединения\nк серверу, значит, необходимо перезапустить ES, выполнив команду:",
    "При возникновении такой проблемы рекомендуется:\nОстановить запущенные сервисы, выполнив команды:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить запущенные сервисы, выполнив команды:\nПерейти к настройке локали сервера:# dpkg-reconfigure locales\nПерейти к настройке локали сервера:\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Остановить все сервисы:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить все сервисы:\nУдалить существующие индексы ES:# rm -r /var/lib/elasticsearch/nodes\nУдалить существующие индексы ES:\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Диаграмма/дашборд были опубликованы в режиме редактирования. Чтобы\nизбежать такой проблемы, необходимо в параметры URL-ссылки или HTML-фрейма\nдобавить параметрembed=true. Этот параметр означает, что данные должны\nпубликоваться в режиме просмотра.",
    "Проблема возникает в том случае, если отключена Kibana. Необходимо\nпроверить ее состояние:\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nдля проверки статуса из консоли сервера выполните команду:# /etc/init.d/kibana status\nдля проверки статуса из консоли сервера выполните команду:\nРезультатом выполнения должно быть сообщение:\nВ случае, если Kibana не запущена или вернула ошибку, необходимо\nее перезапустить, выполнив команду:",
    "Kibana отображает в диаграммах только заполненные исходные данные.\nДиаграмма может не отображаться в двух случаях:\nК диаграмме было применено условие, результаты которого не\nиспользуются в диаграмме.\nВ исходных данных (в формах и реестрах Synergy) нет ни одного\nдокумента, данные из которого должны отобразиться в диаграмме.\nДанное поведение не является ошибкой ни Kibana, ни Synergy, и при\nобновлении данных диаграммы отобразятся автоматически.",
    "Проблема может возникнуть при импорте диаграмм из внешних источников\n(в том числе при установке бизнес-приложений на базе Synergy, использующих\nKibana), и чаще всего связана с отсутствием в шаблоне индекса числового поля\nс постфиксом_double. Проверить это можно, перейдя к настройке диаграммы:\nв агрегациях по отсутствующим полям отображается ошибка.\nИндекс для поля_doubleсоздается только в том случае, если из содержимого\nполя удалось выделить число. То есть если во всех документах поле не заполнено,\nто и индекс с типомdoubleдля него создан не будет.\nДля того, чтобы исправить проблему, нужно хотя бы в одном документе по форме\nзаполнить числовое поле, на отсутствие которого ссылается Kibana, после чего\nнеобходимо обновить шаблон индекса для диграммы, нажав на кнопку «Обновить»\n(разделManagement-Index patterns).\nДля того, чтобы предотвратить возникновение такой ошибки, рекомендуется для\nкаждого поля, которое будет использовано в диаграммах Kibana как числовое,\nсохранять значение по умолчанию в редакторе форм.",
    "Проблема возникает из-за отсутствия или неправильной настройки периода обновления\nданных. Проверить эти настройки можно в Kibana:\nОткрыть дашборд, требующий настройки автообновления.\nОткрыть дашборд, требующий настройки автообновления.\nВ панели меню выбрать настройки периода времени:\nВ панели меню выбрать настройки периода времени:\nВыбрать пунктAuto-refresh:\nВыбрать пунктAuto-refresh:\nНастроитьRefresh Interval- периодичность обновления данных.\nНастроитьRefresh Interval- периодичность обновления данных.\nОсторожно\nНе рекомендуется устанавливать периодичность обновления меньше, чем 30\nсекунд, поскольку на стороне пользователя может возникнуть проблема фризов\n(секундных подергиваний или застываний изображения).",
    "Возможно, не был переключен индексатор данных форм. По умолчанию в Synergy\nдля индексации данных используется система Lucene. Переключение индексаторов\nмежду Lucene и ES осуществляется в файле/opt/synergy/jboss/standalone/configuration/arta/esb/formIndex.xml.\nНеобходимо убедиться, что содержимое первого тэга<handler>, соответствующее\nLucene, закомментировано, и раскомментировать содержимое тэга после<elastic>(относящееся к ES):",
    "Необходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).Проверка статуса ES может быть осуществлена двумя способами:в консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh statusРезультатом выполнения команды должно быть сообщение:[ok]elasticsearchisrunning.проверьте статус ES непосредственно:# curl localhost:9200localhost:9200- это адрес ES по умолчанию.Вывод должен быть таким:{\"name\":\"RFSWkzt\",\"cluster_name\":\"elasticsearch\",\"cluster_uuid\":\"r67YbmerQvyNHdxlzDIt3A\",\"version\":{\"number\":\"5.1.2\",\"build_hash\":\"c8c4c16\",\"build_date\":\"2017-01-11T20:18:39.146Z\",\"build_snapshot\":false,\"lucene_version\":\"6.3.0\"},\"tagline\":\"You Know, for Search\"}\nНеобходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).\nПроверка статуса ES может быть осуществлена двумя способами:\nв консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh status\nв консоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nпроверьте статус ES непосредственно:# curl localhost:9200\nпроверьте статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:################################# Elasticsearch################################# Elasticsearch home directory#ES_HOME=/usr/share/elasticsearch# Elasticsearch Java pathJAVA_HOME=/usr/lib/jvm/java-8-oracle# Elasticsearch configuration directory#CONF_DIR=/etc/elasticsearch# Elasticsearch data directory#DATA_DIR=/var/lib/elasticsearch# Elasticsearch logs directory#LOG_DIR=/var/log/elasticsearch# Elasticsearch PID directory#PID_DIR=/var/run/elasticsearch# Additional Java OPTS#ES_JAVA_OPTS=# Configure restart on package upgrade (true, every other setting will lead to not restarting)#RESTART_ON_UPGRADE=trueВниманиеВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:\nВнимание\nВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nПерезапустите ES, выполнив команду:# etc/init.d/elasticsearsh restart\nПерезапустите ES, выполнив команду:",
    "Аналитические дашборды - это набор диаграмм, отображающих состояние\nданных в различных представлениях и разрезах. Они предназначены для\nупрощения работы по их оценке, обработке, прогнозированию дальнейшего\nсостояния и принятию решений.",
    "Для интеграции аналитических дашбордов в Synergy используется\nкомбинация инструментовElasticsearchиKibana.\nElasticsearch (ES)-\nэто мощный инструмент для полнотекстового поиска и анализа данных.\nОн позволяет быстро загружать, выполнять поиск и анализировать\nбольшие объемы данных. Однако ES не имеет специальной визуальной\nоболочки, и его использование возможно с помощью набора специальных\nAPI.\nKibana- это платформа\nдля анализа и визуализации данных. Kibana обрабатывает данные,\nзагруженные в ES, и работает только параллельно с ним. Если\nработа с ES предполагает использование специального синтаксиса\nкоманд, то Kibana позволяет обрабатывать те же данные с\nпомощью визуального интерфейса. При этом Kibana содержит\nинтерпретатор, позволяющий использование всех возможностей и\nспециальных команд ES.\nИндексация и обработка исходных данных Synergy производится с\nпомощью ES, дальнейший анализ и визуализация - с помощью Kibana.\nВ настоящем документе будут рассмотрены только некоторые из\nвозможностей этих инструментов, непосредственно относящиеся\nк задаче визуализации данных. Для подробного изучения всех их\nвозможностей и способов использования рекомендуем обращаться\nк официальной документации:\nElasticsearch;\nKibana.",
    "Запись данных в индекс производится после сохранения данных по форме.\nПервичная загрузка данных в ES осуществляется с помощью процесса индексации\nданных форм (Административное приложение -> Обслуживание системы -> Управление индексом форм).\nВ это время для каждой формы и каждого компонента этой формы в Synergy\nсоздается несколько индексов. Каждый из этих индексов будет отображен в\nKibana со своим кодом, как используемое поле.",
    "Для всех данных по форме, принадлежащих реестру с идентификаторомsomeRegistryID,\nсоздаётся индекс с именем<index-prefix>-r-someRegistryID.\nДля всех данных по форме с идентификаторомsomeFormIDсоздаётся\nиндекс с именем<index-prefix>-f-someFormID.\nЕсли итоговая длина названия индекса (как для форм, так и для реестров)\nпревысит 255 байт, оно будет обрезано до 255 байт.\nТаким образом, для каждого реестра и для каждой формы, по которым есть данные,\nбудет создано по индексу. Если по форме создан реестр, а также созданы какие-то\nданные вне реестра, то в этом случае будет создано два индекса:\n<index-prefix>-r-IdOfRegistryWithOtherForm\n<index-prefix>-f-otherID.\nПримечание\nЗдесьописано, как получить названия всех имеющихся индексов в Elasticsearch.\nКроме этого, для удобства использования и возможности переноса конфигурации для\nкаждого из вышеперечисленных индексов создаётсяalias.\nИмена alias-ов формируются так:\nДля данных реестров:r-нормализованный_код_реестра\nДля данных форм без реестров:f-нормализованный_код_формыгденормализованый_код_реестраинормализованный_код_формы- коды, соответственно,\nреестра и формы, в которых специальные символы , ., [, ], {, }, (, ), +, -, ?, ^, $, |\nзаменяются на _.\nПредупреждение\nПри этом возможна ситуация, когда нормализованные коды разных реестров совпадут и alias\nбудет создан на на все соответветствующие индексы. Эта маловероятное затруднение может быть\nрешено изменением кодов соответствующих реестров или форм. В случае, если это невозможно,\nнеобходимые alias-ыможно создать вручную.\nПри изменении кода реестра или формы в Synergy имя соответствующего alias-а также изменяется.",
    "Одна единица данных в индексе Elasticsearch называетсяДокумент. Документ содержит\nполя определённыхтипов.\nКаждый документ в текущем индексе соответствует одной единице данных по форме (=файлу по форме,\nзаписи реестра) и содержит следующие поля:\nasfDataId- идентификатор данных по форме, типkeyword;\nasfDataId- идентификатор данных по форме, типkeyword;\nformId- идентификатор формы, типkeyword;\nformId- идентификатор формы, типkeyword;\nformCode- код формы, типkeyword;\nformCode- код формы, типkeyword;\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\nregistryId- идентификатор реестра, типkeyword(содержит значение-1для данных по\nформе, не связанных с реестром);\ndocumentId- идентификатор документа Synergy, типkeyword;\ndocumentId- идентификатор документа Synergy, типkeyword;\nstatus- статус записи реестра, типnumber:0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,не связанных с реестром1 - «В процессе» (STATE_NOT_FINISHED)2 - «Активная» (STATE_SUCCESSFUL)3 - «Неуспешная» (STATE_UNSUCCESSFUL)\nstatus- статус записи реестра, типnumber:\n0 - «Подготовка» (NO_ROUTE) - это значение также устанавливается для данных по форме,\nне связанных с реестром\n1 - «В процессе» (STATE_NOT_FINISHED)\n2 - «Активная» (STATE_SUCCESSFUL)\n3 - «Неуспешная» (STATE_UNSUCCESSFUL)\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ndeleted- признак удаления записи реестра (0 - не удалено, 1 - удалено), типnumber(0 для данных по форме, не связанных с реестром);\ncreated- дата и время создания данных по форме, типdate;\ncreated- дата и время создания данных по форме, типdate;\nmodified- дата и время изменения данных по форме, типdate.\nmodified- дата и время изменения данных по форме, типdate.\nДалее следуют поля, соответствующие компонентам формы:\nДля каждого компонента формы создаётся несколько полей документа в индексе.\nНазвание полей, соответствующих компоненту формы, формируется так:идентфикаторкомпонентаформывнижнемрегистре_key_постфиксиидентфикаторкомпонентаформывнижнемрегистре_value_постфикс(данные для которых берутся,\nсоответственно, из полейkeyиvalueданных по форме).\nДля каждого поля*_keyи*_valueсоздаются поля с нижеперечисленными постфиксами.\nДля компонентов, находящихся внутри динамической таблицы, а также компонентов с\nмультивыбором («Объекты Synergy»), значения записываются вмассивдля всех постфиксов с учетом типов компонентов.\nДля компонентов, имеющихkeyиvalue, создается общее поле*_object(Object).\nПостфиксы для полей*_key:\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеkey, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_sort- поле содержит точное значениеkey, типkeyword;\n_number- поле содержит значениеkey, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеkey, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_date- поле содержит значениеkey, приведенное к дате; поле присутствует только для\nкомпонентов Synergy типа «Дата/время»; типdate;\n_double- поле содержит значениеkey, приведенное к числу, типdouble;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_double- поле содержит значениеkey, приведенное к числу, типdouble;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить число (т.е. есть хотя бы один документ, использующий это поле,\nсодержит числовое значение);\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;ПримечаниеДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)51.13333,71.43333(пара чисел, разделенных запятой и пробелом)51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)51.133,-71\n_geo_point- поле содержитгеокоординаты,\nкоторые удалось выделить из содержимого поля, типgeo_point;\nПримечание\nДанное поле создается только в том случае, если из значенияkeyудалось\nвыделить координаты, т.е. значениеkeyсответствует формату «широта, долгота» -\nсодержит пару чисел, разделенных запятой и являющихся валидными координатами, например:\n51.133333,71.433333(пара чисел, разделенных запятой, без пробелов)\n51.13333,71.43333(пара чисел, разделенных запятой и пробелом)\n51.13,-71.43(пара чисел с точностью до сотых, разделенные запятой и пробелом)\n51.133,-71\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияkey, через пробел, типtext.\nПостфиксы для полей*_value:\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_exact- поле содержит значениеvalue, приведенное к нижнему регистру, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_sort- поле содержит точное значениеvalue, типkeyword;\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;ПримечаниеЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_number- поле содержит значениеvalue, приведенное к числу, типnumber;\nПримечание\nЕсли полеkeyв документе пусто, в данное поле будет записано максимальное\nзначение для типаlong: 9 223 372 036 854 775 807\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_prefix- поле содержит возможные префиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\n_postfix- поле содержит возможные постфиксы из значенияvalue, через пробел, типtext;\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nпустой постфикс - поле содержит n-граммы значенияvalue, через пробел, типtext.\nКоличество символов, которые будут включены в поля_exactи_sort, зависят от настроек, указанных\nв конфигурационном файле/opt/synergy/jboss/standalone/configuration/arta/elasticConfiguration.xml.\nПодробное описание этих настроек приведено вРуководстве администратора.",
    "Индексы изменения данных создаются только для тех форм и реестров, коды которых подпадают\nпод шаблоны (секции в конфигурационном файлеarta/elasticConfiguration.xml, см. описание выше).\nИмя индекса<index-prefix>-rh-someRegistryIDи<index-prefix>-fh-someFormID, для реестров и\nформ, соответственно. Alias-ы:rh-нормализованный_код_реестраиfh-нормализованный_код_формы.\nОтличие индексов изменения данных от текущих индексов - на каждое изменение данных по форме\nсоздаётся новый документ в индексе. Кроме этого, для компонентов формы создаются только поля\nсо следующими постфиксами:\nДля*_key:_exact_number_date_double\nДля*_key:\n_exact\n_number\n_date\n_double\nДля*_value:_exact_number\nДля*_value:\n_exact\n_number\nТипы данных и условия создания полей такие же, как и в текущем индексе.",
    "Для использования индексов Elasticsearch в диаграммах Kibana\nнеобходимо указать эти индексы, используяшаблоны индексов(Index patterns). Они представляют собой маску имени, которой\nдолжны соответствовать индексы, входящие в этот шаблон.\nПодробно о шаблонах индексов написано вофициальном руководстве по Kibana.\nНапример, если необходимо создать шаблон для индексовmyindex-1,myindex-2,myindex-3иmyindex-abc, требуется создать\nшаблон индексаmyindex-*, где символ * означает подстановку\nпроизвольного набора символов.\nПримечание\nПоскольку имена индексов данных форм составляются\nна основе кодов соответствующих компонентов форм, рекомендуется присваивать\nэтим компонентам коды с учетом некоторого значащего префикса так,\nчтобы используемые данные можно было объединить в группу по маске\nимени.\nВ случае, если изменение кодов компонентов не представляется\nвозможным, можно создать шаблон индекса с маской «*». Этот шаблон\nбудет содержать все индексы Elasticsearch.\nДругой способ объединения данных по форме в единый шаблон индекса -\nсоздание шаблона для отдельного реестра или формы. Например, если\nв диаграмме необходимо использовать данные реестраsomeRegistryID,\nнужно создать шаблон индекса с названиемr-someRegistryID.\nАналогично, для использования данных формы (в случае, если Synergy\nне содержит реестра для этой формы) с кодомsomeFormIDнужно\nсоздать шаблон индексаf-someFormID.\nСоздание шаблонов индексов осуществляется в разделеManagement-Index Patterns. Для создания нового шаблона нужно нажать на\nкнопку+ Add New. Откроется окно создания нового индекса:\nСоздание нового шаблона индексов\nУстановленный чекбоксIndex contains time-based eventsозначает,\nчто данные, которые входят в шаблон, содержат временные данные.\nВнимание\nНе рекомендуется оставлять этот чекбокс включенным, если не\nпланируется визуализация данных во времени - например, отслеживать\nнагрузку на сервер в настоящий момент. Без особой настройки диаграммы,\nиспользующие такие поля, будут отображать только данные, соответствующие\nтекущему моменту времени.\nВ полеIndex name or patternнеобходимо ввести имя шаблона индекса:\nСоздание нового шаблона индексов без временных данных\nВ случае, если Elasticsearch содержит индексы с именами, соответствующими\nуказанному шаблону, отобразится доступная кнопкаCreate. Для создания\nшаблона индекса нужно нажать на эту кнопку.\nСозданный шаблон индексов\nПосле создания шаблона отображается таблица со списком индексов, входящих\nв этот шаблон, и их свойствами. Эти свойства зависят от типов индексов.\nТипы, с которыми индексируются данные форм Synergy, описаны в разделеИндексация данных форм в ARTA Synergy.",
    "Kibana позволяет создавать следующие типы диаграмм:\n1.Area chart- предназначена для отображения общего изменения\nданных во времени, когда выявление суммарного значения всех данных\nважнее, чем сравнение любых двух или более последовательностей.\nНапример, полезна для отображения использования ресурсов сервера.\n2.Data table- отображение данных как результата агрегации в\nвиде таблицы.\n3.Line chart- используется для отображения данных в виде линий\n(графиков). В отличие от Area charts, удобна для сравнения\nпоследовательностей между собой.\n4.Markdown widget- вставка произвольной информации, используя\nсинтаксис языка Markdown.\n5.Metric- отображение одного числа - результата агрегации\nчисловых данных.\n6.Pie Chart- предназначена для отображения вклада нескольких\nчастей в некоторый общий результат. Может принимать вид круговой\n(pie) или кольцевой (donut) диаграммы.\n7.Tag cloud- отображение данных таким образом, чтобы их размер\nзависел от некоторого числового показателя этих данных (например,\nколичества упоминаний).\n8.Tile map- специфический тип диаграмм, использующий агрегацию\nгеографических данных (тип поляgeo_point) для их отображения на\nкарте.\n9.Timeseries- специфический тип диаграмм, визуализирующий\nвременные ряды.\n10.Vertical bar chart- наиболее универсальная диаграмма,\nотображающая числовые показатели произвольных полей в виде\nвертикальной гистограммы.\nЗдесь будут рассмотрены некоторые наиболее универсальные из этих\nдиаграмм. Для ознакомления с работой остальных типов рекомендуем\nобратиться кофициальному руководству по Kibana.\nПримечание\nВ диаграммах возможно использование только агрегируемых типов\nполей. К ним относятся все числовые типы, а также типыdate,keyword,geo_shapeи другие. Агрегируемые поля отмечены\nгалочкой в графе «Aggregatable» (на странице Managenent -\nIndex Patterns).\nВсе диаграммы создаются в разделеVisualize:\nKibana, раздел Visualize\nВ общем случае, процесс создания диаграмм состоит из трех шагов:\nВыбор типа диаграммы.\nВыбор типа диаграммы.\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.ПримечаниеЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных шаблона индекса.\nВ одной диаграмме возможно использование только одного шаблона,\nпоэтому для использования в одной диаграмме данных документов по\nнескольким формам, необходимо использовать alias-ы.\nПримечание\nЭтот шаг отсутствует для диаграммыMarkdown widget\nВыбор источника данных\nВ качестве источника данных может выступать шаблон индекса\nили результат поиска по данным (сохраненный или новый).\nНастройка отображаемых данных:\nНастройка отображаемых данных\nОкно настройки данных имеет стандартный вид:\nВ верхней части располагается панель меню с пунктами:\nNew- создать новую диаграмму, переход к шагу 1;\nSave- сохранить диаграмму;\nOpen- открыть существующую диаграмму;\nShare- предоставить доступ к сохраненной диаграмме;\nRefresh- обновить данные.\nНиже панели меню расположено поле поиска данных, использующее\nсинтаксисLucene. Данное поле используется для фильтрации\nданных, отображаемых в диаграмме. Например, для отображения только\nнеудаленных документов в этой панели нужно ввести запрос:\nгдеdeleted- поле, генерируемое во время индексации данных\nформ и хранящее значение 0, если данные в Synergy не были удалены.\nОсновная рабочая область окна делится на две части:\nнастройка данных: выбор полей и способа их агрегации;\nпросмотр результатов: отображение результата обработки\nвыбранных данных.\nВ части настройки данных, в разделеMetrics, необходимо\nвыбрать способ агрегации числовых данных, отображаемых в\nдиаграмме. В полеAggregationвыбирается способ агрегации,\nа в полеCustom labelвводится отображаемое название параметра.\nВ разделеBucketsнеобходимо выбрать используемые данные,\nчисловые параметры которых будут отображены на диаграмме. Так\nже, как и в разделеMetrics, здесь в полеAggregationвыбирается способ агрегации, а в полеCustom labelвводится\nотображаемое название параметра. Отличие от разделаMetricsсостоит в том, что разделBucketsпозволяет группировать\nпроизвольные типы данных при выборе соответствующего типа\nагрегации.\nНаиболее универсальным способом агрегации, используемом во\nвсех примерах ниже, являетсяTerm. Этот способ позволяет\nагрегировать данные как строки, аналогично функцииGROUP BYв SQL. Подробно об остальных типах агрегации можно ознакомиться\nв официальном руководстве по Kibana.\nПри выборе этого типа агрегации дополнительно отображаются\nполя:\nField- выпадающий список, содержащий все поля, входящие\nв текущий шаблон индекса, для которых доступна агрегация.\nOrder By- параметр сортировки данных - по метрике из\nразделаMetrics, по отдельной метрике (Custom metric) или\nпо содержимому текущего поля (Term).\nOrder- направление сортировки:\nDescending- по убыванию;\nAscending- по возрастанию.\nSize- количество отображаемых элементов - отображаются\nуказанное количество элементов, располагающиеся в начале\nсписка отсортированных указанным образом данных.\nCustom label- отображаемое название параметра.\nДля каждого используемого параметра, независимо от того, используется\nли он в разделахMetricsилиBuckets, доступна дополнительная\nнастройка, отображаемая при нажатии на лейблAdvanced:\nJSON Input\nОна представляет собой текстовое поле, в которое можно добавить\nспециальные свойства в форматеJSON, например:\nВ настоящем документе процесс создания диаграмм и дашбордов\nбудет рассмотрен на примере анализа данных формы «Заявка»:\nФорма «Заявка»\nСоздание диаграммы Pie chart\nДля диаграммы Pie chart возможно два способа организации\nиспользуемых параметров:\nSplit Slices: параметр будет отображен на диаграмме как\nновый уровень секторов:\nЗаявки по офисам и клиентам\nНа этом примере в разделеBucketsв качестве первого\nпараметра использовано поле «Центр решений» - результаты этой\nагрегации на диаграмме отображены во внутреннем круге.\nВ качестве второго параметра используется поле «Клиент/проект»,\nи результаты этой агрегации отображаются во внешнем круге.\nПримечание\nТакая последовательность была выбрана в силу специфики\nвходных данных: известно, что один центр решений занимается\nнесколькими проектами, но одним проектом занимается ровно\nодин центр решений.\nИтоговая диаграмма позволяет оценить распределение объема\nзаявок как по центрам решений, так и по отдельным проектам.\nSplit Chart: для нового параметра будет построена\nотдельная диаграмма:\nЗаявки по офисам и клиентам\nЗдесь для каждого центра решений (поле выбрано первым\nпараметром с типомSplit Chart) отрисована отдельная\nдиаграмма, в которой показано распределение заявок по\nпроектам этих центров (второй параметр с типомSplit Slices).\nВидно, что три центра решений оставляли заявки только по одному\nиз своих проектов.\nПримечание\nKibana допускает использованиеSplit Chartтолько в\nсочетании сSplit Slices, причем в этом случае параметр\nсоSplit Chartобязательно должен располагаться выше, чем\nпараметр соSplit Slices(сначала разделить данные по\nотдельным диаграммам, а потом разделять данные внутри каждой\nдиаграммы).\nДобавить новый параметр можно, нажав на кнопкуAdd sub-buckets.\nВкладкаOptionsдля этого типа диаграмм содержит три\nпараметра:\nВкладка «Опции» диаграммы Pie chart\nВид диаграммы: если чекбоксDonutвключен, диаграмма\nпринимает вид кольцевой, если отключен - круговой (по\nумолчанию).\nРасположение легенды: по умолчанию справа от диаграммы.\nПоказывать всплывающие подсказки при наведении на часть\nдиаграммы: отображаются, если включен чекбоксShow Tooltip.\nСоздание диаграммы Data table\nВ разделеMetricsнеобходимо указать одну или несколько\nметрик, по которым будут агрегироваться данные в таблице.\nВ разделеBucketsнеобходимо указать используемые параметры\nи способы их агрегации. Для этого типа диаграмм также существует\nдва способа организации входных параметров:\nSplit Rowsдля добавления параметра как нового столбца к\nтекущей таблице;\nSplit Tableдля добавления параметра как отдельной таблицы.\nПримечание\nФункциональность этих способов полностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nНастроены отображаемые данные в таблице\nВ диаграмме, указанной на рисунке выше, все параметры были\nдобавлены какSplit Rows. Для каждого параметра в разделеBucketsиспользуется агрегацияTerms.\nВкладкаOptionsдля этого типа диаграмм содержит следующие\nпараметры:\nВкладка «Опции» диаграммы Data table\nКоличество отображаемых строк на странице: по умолчанию\nотображается 10 строк. В случае, если все записи не помещаются\nна одну страницу, в нижней части таблицы отображается переключатель\nстраниц.\nОтображать метрики для каждой группы/уровня: если чекбокс\nвключен, то для каждого столбца (в случаеSplit Rows) или\nкаждой таблицы (в случаеSplit Table) будет добавлен столбец\nс результатом агрегации из разделаMetrics.\nОтображать частичные строки: если чекбокс включен, то в таблицу\nбудут включены строки с данными, отсутствующими для выбранных\nиндексов (полей). По умолчанию в таблице отображаются только\nполностью заполненные строки.\nСчитать метрики для каждой группы/уровня: чекбокс, недоступный\nдля ручной установки. Его значение зависит от параметра\n«Отображать метрики для каждой группы/уровня».\nОтображать итоговые значения: если чекбокс включен, то на каждой\nстранице таблицы для каждой отображаемой метрики будет указано\nитоговое значение этой метрики для всех данных таблицы.\nФункция для итогов: выбор функции для подсчета итоговых значений\nметрик. Параметр доступен только в том случае, если установлен\nчекбокс «Отображать итоговые значения».\nСоздание диаграммы Vertical bar chart\nВ диаграмме этого типа по оси Y располагаются метрики (параметры\nвMetrics), с по оси X - группы (параметры вBuckets).\nДоступно указание нескольких метрик на оси Y и не больше одной\nгруппы каждого типа:\nX-Axis\nSplit Bars\nSplit Chart\nПримечание\nФункциональностьSplit BarsиSplit Chartполностью аналогичнаSplit SlicesиSplit Chartдля круговой диаграммы.\nДиаграмма Vertical bar chart, пример 1\nНа примере 1 показан результат разделения параметров по диаграммам:\nотображается количество заявок, поданных разными авторами и\nвыполненных разными исполнителями. Для этого исполнители расположены\nпо оси Х, а для каждого автора заявок отрисована отдельная диаграмма.\nДиаграмма Vertical bar chart, пример 2\nНа примере 2 показана простая гистограмма, визуализирующая количество\nзаявок, выполненных разными исполнителями.\nСоздание диаграммы Tile map\nВ диаграмме этого типа визуализируются числовые метрики (параметры\nвMetrics), относящиеся к разным географическим точкам (параметры вBuckets).\nДоступно указание ровно одной метрики и одного разделения по координатам.\nВ разделеBucketsможет быть указан только один тип аггрегирования -Geohash,\nиспользующийся для данных типаgeo_point.\nПодсказка\nДля получения координат в документах индексов Elasticsearch необходимо записать\nпару чисел вkeyкомпонента формы. Проще всего это сделать в компонентах\nтипов «Выпадающий список», «Выбор вариантов» или «Переключатель вариантов»:\nдля них достаточно в качестве наименования элемента указать название географической\nточки, а в качестве значения - пару координат, например:\nНастройка координат в компоненте на форме\nСпецифичный тип диаграммы, который не имеет разделаData.\nВ левой части рабочей области располагается поле ввода текста\nс использованием синтаксиса языкаMarkdown, в правой\nчасти отображается результат разметки текста:\nСоздание Markdown widget\nЭта диаграмма не имеет никаких особых настроек.\nДиаграммаMetricработает только с числовыми данными, поэтому\nдля нее доступны только агрегации типаMetrics:\nСоздание Metrics\nДобавить новую метрику можно, нажав на кнопкуAdd metrics.\nНовая метрика будет добавлена как новое отображаемое число.\nВкладкаOptionsдля этого типа диаграмм содержит только\nодин параметр - размер шрифта:\nВкладка «Опции» диаграммы Metrics\nСоздание Tag cloud\nВ диаграмме Tag cloud возможно использование только одной агрегацииMetricsи только одного, специального способа организации данных вBuckets-Tags. Добавление новых метрик или новых групп недоступно.\nПример диаграммы Tag cloud\nВкладкаOptionsсодержит следующие параметры:\nзависимость размера текста от числовой метрики: линейная, логарифмическая\nили квадратичная;\nориентация тэгов: горизонтальная, вертикальная или произвольная;\nграницы размеров шрифта в тэгах;\nотображать название используемых параметров: чекбокс, по умолчанию выключен.\nВкладка «опции» диаграммы Tag cloud\nДашборд представляет собой панель, на которой располагаются\nранее созданные диаграммы, с широкими возможностями настроек\nотображения, обновления и публикации.\nСоздание дашбордов производится в разделеDashboard:\nKibana, раздел Dashboard\nПанель меню этого раздела содержит пункты:\nNew- переход к строке поиска и созданию нового фильтра.\nAdd- добавить новый дашборд, содержит перечень сохраненных диаграмм\nи результатов поиска:\nДобавление диаграммы на дашборд\nКаждая диаграмма в списке сопровождается пиктограммой, указывающей на тип\nдиаграммы.\nSave- сохранить текущий дашборд.\nOpen- открыть ранее сохраненный дашборд.\nShare- настройки публикации дашборда. Доступны только для сохраненного\nдашборда.\nOptions- настройка внешнего вида дашборда, содержит единственный\nчекбокс «Использовать темную тему», по умолчанию выключен.\nTime range- настройка режима отображения данных для диаграмм.\nВ самой панели отображается настроенный период. По умолчанию отображаются\nданные за последние 15 минут. Данная настройка актуальна, если есть\nнеобходимость отображения данных в режиме реального времени. Доступна\nвозможность быстрой настройки периода (за сегодня, за эту неделю,\nза последний год), указания абсолютной (дата и время в форматеYYYY-MM-DDHH:mm:ss.SSS) или относительной (например, последние\n25 минут) настройки.\nНастройки периода отображения\nПри переходе к этой настройке в панели меню появляется дополнительный\nпунктAuto-refresh. Он предназначен для настройки интервала обновления\nдиаграмм:\nНастройки периода обновления диаграмм\nДанная настройка актуальна, если данные, на основе которых построены\nдиаграммы, регулярно обновляются: например, в терминах Synergy, если необходимо\nотображать актуальные данные реестров, в которых регулярно появляются новые\nзаписи.\nПо умолчанию автообновление выключено.\nДля всех диаграмм на дашборде возможно одновременное применение условий\nдля отображаемых данных. Для этого нужно ввести условие в панель поиска,\nрасполагающуюся ниже панели меню. Функциональность этой панели для\nразделаDashboardsаналогично панели в разделеVisualize.\nДля добавления ранее сохраненной диаграммы на дашборд необходимо выбрать пункт\nменюAdd. Отобразится список доступных диаграмм (илл. «Добавление диаграммы\nна дашборд» выше). Необходимо кликнуть на нужную диаграмму - она будет добавлена\nна дашборд:\nДобавлена панель диаграммы на дашборд\nРазмер отображаемой диаграммы можно изменить, потянув за левый нижний угол панели\nдиаграммы:\nИзменение размера панели диаграммы\nИзменен размер панели диаграммы\nВ случае, если все данные диаграммы не помещаются на панели, в нее будет добавлен\nвнутренний скролл.\nПримечание\nЕсли на определенном размере панели диаграммы «Облако тэгов» не помещаются все\nданные, в ней будут отображены только наиболее популярные тэги (столько, сколько\nвозможно уместить на указанном размере панели), и будет отображен текст, предупреждающий,\nчто для отображения всех данных необходимо увеличить размер панели диаграммы:\nНа панели диаграммы отображаются пиктограммы управления:\n- изменить диаграмму (переход к настройкам отображаемых данных диаграммы в разделеVisualize);\n- переместить панель диаграммы на дашборде;\n- удалить панель диаграммы с дашборда;\n- изменить размер панели диаграммы;\n- отобразать/свернуть источники данных в виде таблицы, запроса или\nисходных данных Elasticsearch, а также статистику запроса данных для этой диаграммы;\n- отобразить/свернуть легенду.\nПримечание\nКоличество диаграмм, располагаемых на дашборде, не ограничено, наложение диаграмм\nдруг на друга не допускается.\nПример готового дашборда:\nПример готового дашборда в режиме редактирования\nТипы использованных примеров диаграмм (перечислены сверху вниз, слева направо):\nMarkdown widget\nPie chart\nTag cloud\nMetric\nVertical bar chart\nPie chart\nData table\nПредупреждение\nПрименение фильтров ко всем диаграммам на дашборде дает корректные\nрезультаты только в том случае, если коды используемых полей полностью\nсовпадают (в том числе постфиксы). В случае, если необходимо отображение\nданных из нескольких форм, имеющих сквозные параметры (например, параметр\n«Статус»), необходимо, чтобы коды компоненов, соответствующих этому\nпараметру, совпадали на всех формах, а в диаграммах использовалось одно\nи то же поле с учетом постфикса.\nKibana предоставляет способы публикации дашборда как интерактивной диаграммы\nили как снимка его состояния на момент публикации (shapshot). Публикация\nпроизводится в менюShare:\nПункт меню «Share»\nВстраивание как дашборда, так и его снимка возможно двумя способами:\nкак фреймаhtml- код для вставки содержится в полеEmbedded iframe;\nкак ссылки - URL страницы содержится в полеLink.\nПодсказка\nПо URL, автоматически генерируемому Kibana, пользователям предоставляется\nдашборд в режиме редактирования, с правом доступа ко всем разделам Kibana.\nДля того, чтобы предоставить пользователям доступ к дашборду только в режиме\nпросмотра, необходимо в URL ссылки добавить параметр:\n&embed=true\nОдин из способов публикации дашборда в Synergy - добавление его каквнешнего модуля. При этом каждый дашборд\nдолжен быть оформлен как отдельный внешний модуль. В качестве адреса приложения\nнеобходимо использовать URL дашборда.\nДругой способ - включение фрейма с дашбордом впользовательский компонент.\nВ этом случае в качестве HTML-кода необходимо использовать код из поляEmbedded iframe.\nПодсказка\nПо умолчанию в код фрейма включены границы 800х600 пикселей. Для того, чтобы\nдашборд занимал все доступное место, необходимо изменить эти параметры:\nheight=\"100%\"width=\"100%\"\nПараметрembed=true, означающий доступ к дашборду только в режиме просмотра,\nвключается Kibana по умолчанию.\nВнимание\nОбратите внимание, что для того, чтобы дашборд был доступен пользователю, у него\nдолжен быть доступ к серверу, на котором запущена Kibana.\nПример дашборда, опубликованного как внешний модуль",
    "Все диаграммы Kibana, за исключением диаграмм Metric и Markdown widget,\nполностью интерактивны. Возможно «проваливание» по клику на любую часть\nдиаграммы: при этом условие, соответствующее этой части, будет применено\nко всем диаграммам на дашборде.\nРассмотрим использование диаграмм на примере ранее показанного дашборда\n«Анализ заявок в центральный офис» (илл. «Пример дашборда, опубликованного\nкак внешний модуль»).\nПодбор диаграмм на дашборде позволяет такие действия:\nпросмотр всех заявок определенного статуса или типа;\nанализ загруженности и качества работы исполнителей;\nпросмотр статуса заявок от выбранного центра решений\nили от выбранного клиента/проекта, и так далее.\nВ качестве примера детально рассмотрим действие«Просмотр всех заявок в\nстатусе „Отклонено“».\nДля просмотра сведений по отклоненным заявкам необходимо на диаграмме\n«Заявки по статусам» кликнуть на сектор, соответствующий статусу «Отклонено».\nУсловие «Статус заявки» = «Отклонено» автоматически применится ко всем\nдиаграммам (кроме Markdown widget):\nУсловие на статус применено\nПроизошло «проваливание»: все диаграммы отображают результаты только\nпо заявкам, имеющим статус «Отклонено». На примере видно, что всего было\nотклонено 6 заявок, больше всего из них имели тип «Невоспроизводимая ошибка».\nТакже видно, какие центры решений подавали эти заявки, кто из исполнителей\nих отклонял. В нижней части дашборда таблица содержит перечень всех отклоненных\nзаявок.\nВ верхней части дашборда отобразилась плашка примененного фильтра в формате%названиеполя%:\"%значение%\". При наведении мыши на эту плашку отображаются\nпиктограммы возможных действий с фильтром:\nвключить/выключить фильтр;\nзакрепить фильтр;\nотображать только результаты фильтрации / отображать все результаты;\nудалить фильтр;\nредактировать запрос для фильтра (синтаксис Elasticsearch).\nДля того, чтобы применить еще одно условие (например, увидеть отклоненную\nзаявку с типом «Оценка», достаточно в диаграммеTag cloudкликнуть на лейбл\nс этим типом. Новое условие применится автоматически:\nУсловие на тип применено\nВидно, что единственная отклоненная заявка с типом «Оценка» касалась возможности\nнастройки выборочного доступа к записям реестра.\nНовый фильтр отображен в верхней части дашборда. Кроме того, в верхней части\nдоступно менюActions, позволяющее действия одновременно над всеми фильтрами.\nПредупреждение\nВсе фильтры применяются только для текущего пользователя и только на время текущего\nподключения. Каждый переход к внешнему модулю с диаграммами означает новое подключение\nк Kibana, и при этом все ранее сохраненные условия будут сброшены.",
    "Ошибка связана с невозможностью доступа к сервису Easticsearch (ES). При\nее возникновении сначала необходимо проверить статус ES. Для этого в\nконсоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nДругой способ - проверить статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли при ошибкеStatus: Redрезультат выполнения этих команд совпадает\nс ожидаемым, это значит, что сервис Elasticsearch запустился, но еще не\nуспел обработать все данных в индексах. Ошибка может возникать, если в\nES загружен большой объем данных. В этом случае рекомендуется дать ES\nвремя на полную загрузку (до 30 минут).\nЕсли спустя время статус Kibana не изменился, или в результате выполнения\nкомандыcurlпоявляется сообщение о невозможности подсоединения\nк серверу, значит, необходимо перезапустить ES, выполнив команду:",
    "При возникновении такой проблемы рекомендуется:\nОстановить запущенные сервисы, выполнив команды:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить запущенные сервисы, выполнив команды:\nПерейти к настройке локали сервера:# dpkg-reconfigure locales\nПерейти к настройке локали сервера:\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nВ качестве локали и локали по умолчанию установить локальen_US.UTF-8.\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy.\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Остановить все сервисы:# /etc/init.d/arta-synergy-jboss stop# /etc/init.d/kibana stop# /etc/init.d/elasticsearch stop\nОстановить все сервисы:\nУдалить существующие индексы ES:# rm -r /var/lib/elasticsearch/nodes\nУдалить существующие индексы ES:\nЗапустить Synergy и Elasticsearch:# /etc/init.d/arta-synergy-jboss start# /etc/init.d/elasticsearch start\nЗапустить Synergy и Elasticsearch:\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nВыполнить полную переиндексацию данных форм в административном\nприложении Synergy (Управление индексом форм).\nЗапустить Kibana:# /etc/init.d/kibana start\nЗапустить Kibana:",
    "Диаграмма/дашборд были опубликованы в режиме редактирования. Чтобы\nизбежать такой проблемы, необходимо в параметры URL-ссылки или HTML-фрейма\nдобавить параметрembed=true. Этот параметр означает, что данные должны\nпубликоваться в режиме просмотра.",
    "Проблема возникает в том случае, если отключена Kibana. Необходимо\nпроверить ее состояние:\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nв браузере перейти по адресу<server.host>:<server.port>, где<server.host>- адрес сервера, на котором запущена Kibana, а<server.port>- номер порта (по умолчанию используется порт 5601)\nдля проверки статуса из консоли сервера выполните команду:# /etc/init.d/kibana status\nдля проверки статуса из консоли сервера выполните команду:\nРезультатом выполнения должно быть сообщение:\nВ случае, если Kibana не запущена или вернула ошибку, необходимо\nее перезапустить, выполнив команду:",
    "Kibana отображает в диаграммах только заполненные исходные данные.\nДиаграмма может не отображаться в двух случаях:\nК диаграмме было применено условие, результаты которого не\nиспользуются в диаграмме.\nВ исходных данных (в формах и реестрах Synergy) нет ни одного\nдокумента, данные из которого должны отобразиться в диаграмме.\nДанное поведение не является ошибкой ни Kibana, ни Synergy, и при\nобновлении данных диаграммы отобразятся автоматически.",
    "Проблема может возникнуть при импорте диаграмм из внешних источников\n(в том числе при установке бизнес-приложений на базе Synergy, использующих\nKibana), и чаще всего связана с отсутствием в шаблоне индекса числового поля\nс постфиксом_double. Проверить это можно, перейдя к настройке диаграммы:\nв агрегациях по отсутствующим полям отображается ошибка.\nИндекс для поля_doubleсоздается только в том случае, если из содержимого\nполя удалось выделить число. То есть если во всех документах поле не заполнено,\nто и индекс с типомdoubleдля него создан не будет.\nДля того, чтобы исправить проблему, нужно хотя бы в одном документе по форме\nзаполнить числовое поле, на отсутствие которого ссылается Kibana, после чего\nнеобходимо обновить шаблон индекса для диграммы, нажав на кнопку «Обновить»\n(разделManagement-Index patterns).\nДля того, чтобы предотвратить возникновение такой ошибки, рекомендуется для\nкаждого поля, которое будет использовано в диаграммах Kibana как числовое,\nсохранять значение по умолчанию в редакторе форм.",
    "Проблема возникает из-за отсутствия или неправильной настройки периода обновления\nданных. Проверить эти настройки можно в Kibana:\nОткрыть дашборд, требующий настройки автообновления.\nОткрыть дашборд, требующий настройки автообновления.\nВ панели меню выбрать настройки периода времени:\nВ панели меню выбрать настройки периода времени:\nВыбрать пунктAuto-refresh:\nВыбрать пунктAuto-refresh:\nНастроитьRefresh Interval- периодичность обновления данных.\nНастроитьRefresh Interval- периодичность обновления данных.\nОсторожно\nНе рекомендуется устанавливать периодичность обновления меньше, чем 30\nсекунд, поскольку на стороне пользователя может возникнуть проблема фризов\n(секундных подергиваний или застываний изображения).",
    "Возможно, не был переключен индексатор данных форм. По умолчанию в Synergy\nдля индексации данных используется система Lucene. Переключение индексаторов\nмежду Lucene и ES осуществляется в файле/opt/synergy/jboss/standalone/configuration/arta/esb/formIndex.xml.\nНеобходимо убедиться, что содержимое первого тэга<handler>, соответствующее\nLucene, закомментировано, и раскомментировать содержимое тэга после<elastic>(относящееся к ES):",
    "Необходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).Проверка статуса ES может быть осуществлена двумя способами:в консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh statusРезультатом выполнения команды должно быть сообщение:[ok]elasticsearchisrunning.проверьте статус ES непосредственно:# curl localhost:9200localhost:9200- это адрес ES по умолчанию.Вывод должен быть таким:{\"name\":\"RFSWkzt\",\"cluster_name\":\"elasticsearch\",\"cluster_uuid\":\"r67YbmerQvyNHdxlzDIt3A\",\"version\":{\"number\":\"5.1.2\",\"build_hash\":\"c8c4c16\",\"build_date\":\"2017-01-11T20:18:39.146Z\",\"build_snapshot\":false,\"lucene_version\":\"6.3.0\"},\"tagline\":\"You Know, for Search\"}\nНеобходимо проверить, что ES действительно не запустился, поскольку\nвозможна ситуация, что он еще не успел провести первичную обработку\nданных (см. пункт 1).\nПроверка статуса ES может быть осуществлена двумя способами:\nв консоли сервера, на котором запущен ES, выполните команду:# /etc/init.d/elasticsearsh status\nв консоли сервера, на котором запущен ES, выполните команду:\nРезультатом выполнения команды должно быть сообщение:\nпроверьте статус ES непосредственно:# curl localhost:9200\nпроверьте статус ES непосредственно:\nlocalhost:9200- это адрес ES по умолчанию.\nВывод должен быть таким:\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:################################# Elasticsearch################################# Elasticsearch home directory#ES_HOME=/usr/share/elasticsearch# Elasticsearch Java pathJAVA_HOME=/usr/lib/jvm/java-8-oracle# Elasticsearch configuration directory#CONF_DIR=/etc/elasticsearch# Elasticsearch data directory#DATA_DIR=/var/lib/elasticsearch# Elasticsearch logs directory#LOG_DIR=/var/log/elasticsearch# Elasticsearch PID directory#PID_DIR=/var/run/elasticsearch# Additional Java OPTS#ES_JAVA_OPTS=# Configure restart on package upgrade (true, every other setting will lead to not restarting)#RESTART_ON_UPGRADE=trueВниманиеВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nЕсли вывод отличается, проверьте указание переменнойJAVA_HOMEв файле/etc/default/elasticsearch:\nВнимание\nВ качествеJAVA_HOMEиспользуется полный путь к папкеbinиспользуемой\nверсии Java. Строка с переменной должна быть раскомментирована.\nПерезапустите ES, выполнив команду:# etc/init.d/elasticsearsh restart\nПерезапустите ES, выполнив команду:",
    "Пользовательские отчеты предоставляют разработчику возможность формировать\nи загружать произвольные отчеты на основе данных, содержащихся в БД системы\nили получаемых с помощью API.\nСформированный шаблон отчета можно загрузить в приложение Synergy IDE и\nи предоставить пользователям права на его использование.\nДля разработки шаблона отчета используетсяTIBCO Jaspersoft Studio.\nПримечание\nРабота с Jaspersoft Studio рассматривается на примере версии6.6.0.\nПодсказка\nВ этом разделе будут рассмотрены лишь некоторые возможности Jaspersoft Studio.\nПри работе с отчетами мы рекомендуем обращаться кофициальному руководству TIBCO.",
    "Конфигурация, необходимая для работы JaspersoftStudio:\nне менее 500 МБ пространства на жестком диске\nминимум 1 ГБ оперативной памяти, рекомендуемый размер - 2 ГБ\nподдерживаемые ОС:Windows 7/8: x86 и x64Linux: x86 и x64MacOS X: x64\nWindows 7/8: x86 и x64\nLinux: x86 и x64\nMacOS X: x64",
    "Дистрибутив Jaspersoft можно скачать поссылке.\nДля работы с Synergy необходимо добавить проект, содержащий необходимые\nбиблиотеки и поддерживаемые шрифты:\nСкачайте приложенныйархив с проектом, добавьте его в папкуjasperSoftStudio\n2. Запустите JasperStudio, в меню выберите пунктFile - Open Projects from File System,\nдалее нажмите на кнопкуArchiveи выберите скачанный архив.\nИмпортированный проект отображается во вкладкеProject Explorer:",
    "JasperStudio позволяет получать данные посредством SQL-запроса, из данныхjsonилиxml. Источник данных указывается вадаптере данных, соответствующем\nотчету.\nВ целом для создания пользовательского отчета нужно проделать такие шаги:\nСоздать адаптер данных\nНастроить поля отчета\nНастроить внешний вид отчета\nДобавить новый пользовательский отчет, используя полученный шаблон отчета\nАдаптер данных- это объект, регулирующий источник данных, их структуру и способ получения.\nАдаптер хранится в виде файлаXMLи доступен всем шаблонам отчетов текущего проекта.",
    "Использование SQL в запросе позволяет строить отчет на основнии данных, расположенных\nнепосредственно в БД Synergy. Описание структуры БД приводится вдокументации.\nРассмотрим простой отчет, который будет содержать список пользователей Synergy.\nНа панели инструментов нажмите на кнопкуNew data Adapter. Откроется мастер\nсоздания нового соединения:\nШаг 1: выбор расположения и имени для нового адаптера\nНа первом шаге необходимо указать имя и расположение нового адаптера.\nСледующим шагом создания адаптера является выбор типа соединения:\nШаг 1: выбор типа соединения\nДля работы с SQL необходимо указать тип соединенияDatabaseJDBCConnection.\nДалее необходимо указать настройки соединения:\nDatasource JDBC connection\nВведены следующие параметры соединения:\nЗдесь<hostname>:<mysql_port>- адрес и порт сервера, на котором расположен MySQL,\nили, как в случае с пробросом соединения через SSH (пример ниже), локальный хост\nи порт, куда был выполнен проброс.\nДалее указываются логин и пароль пользователя, имеющего доступ к БД.\nДля проверки соединения можно нажать на кнопкуTest. Если соединение с указанными\nпараметрами удалось установить, то будет отображено сообщение«Successful»\nЕсли же соединение установить не удалось, то будет отображено сообщение с текстом ошибки.\nСохраните новый адаптер, нажав на кнопкуFinish.\nЕсли требуется установить соединение с БД, расположенной на удаленном сервере,\nто предварительно необходимо сделать проброс соединения через SSH, выполнив команду:\nЗдесь3307- локальный порт, с которым будет устанавливать соединение JasperSoft,localhost- локальный хост,3306- удаленный порт (например, портmysql,\nзапущенного на удаленном сервере),user@remote-host.com- пользователь@удаленный хост.\nПримечание\nПримечания:\nЭту команду требуется выполнять после каждого перезапуска сервера.\nВремя отклика возрастает, поскольку добавляются накладные расходы на шифрование/расшифровывание.\nНа локальном сервере появляется уязвимость удаленного сервера, так как есть\nпрямой проброс соединения. Поэтому для порта3307следует заблокировать доступ извне\nчерезiptableили брандмауэр.\nДля создания нового шаблона отчета нужно вызвать контекстное меню элемента дерева (например,\nкорневого элементаSynergyReports) и выбрать пунктNew - Jasper Report. Откроется\nмастер создания нового шаблона.\nШаг 1. Выбор разметки для шаблона отчета\nПервым шагом этого мастера является выбор разметки для шаблона. Выберем здесь простой\nлист формата А4 -Blank A4.\nШаг 2. Место расположения и имя шаблона\nНа втором шаге нужно указать имя шаблона и выбрать место расположения файла шаблона в проекте.\nДалее выполняется настройка запроса для отчета:\nШаг 3. Выбор адаптера данных и настройка запроса для отчета\nНа шаге 3 нужно выбрать ранее созданный адаптер данных и ввести запрос. Здесь мы используем\nадаптерSynergy connectionи вводим текст запроса:\nНа следующем шаге на основе введенного запроса формируется список полей, доступных для\nиспользования в отчете:\nШаг 4. Настройка полей отчета\nДля того, чтобы использовать полученное в запросе поле в качестве поля отчета, перенесите\nэто поле в правую часть диалога. Кнопка>>добавит в правую часть все доступные поля:\nНастройка полей отчета\nДалее при необходимостм можно выбрать поля, по которым должна выполняться группировка данных.\nВ нашем случае группировка не требуется.\nПосле завершения создания нового шаблона вкладка с ним откроется в рабочей области:\nОкно составления отчета\nСлева во вкладкеOutlineрасполагается дерево элементов отчета, где в качестве корня выступает\nсам отчет. В правой части во вкладкеPropertiesбудут отображаться свойства элемента, выбранного\nв дереве элементов. ВкладкаPaletteпозволяет добавить в шаблон отчета новые компоненты.\nПосередине окна располагается рабочая область отчета. По умолчанию открыта вкладкаDesign-\nв ней отображена структура отчета, и именно в ней настраивается внешний вид отчета.\nВкладкаSourceсодержит полученный отчет в формате XML.\nВкладкаPreviewпредназначена для предварительного просмотра итогового отчета.\nРабочая область шаблона отчета состоит из следующих основных секций:\nTitle: заголовок отчета. Секция будет напечатана один раз на первой странице\nотчета.\nPage Header: заголовок страницы. Секция будет напечана в начале каждой страницы отчета.\nОбычно здесь размещается название отчета либо номер текущей страницы.\nColumn Header: название колонок отчета.\nDetail 1: тело отчета. Секция отличается от остальных тем, что она повторяется в отчете\nровно столько раз, сколько строк будет в полученном отчете.\nColumn Footer: нижняя подпись колонок.\nPage Footer: нижний колонтитул страницы. Секция будет напечатана в конце каждой страницы\nотчета. Аналогично с заголовком страницы, здесь могут быть размещены название отчета или номер\nтекущей страницы.\nSummary: нижняя подпись отчета. Секция будет напечатана один раз в конце отчета.\nЕсли какая-либо секция в отчете не нужна, то достаточно просто уменьшить ее размер до 0\nи не помещать в нее компонентов. Если необходимо, чтобы область начиналась на следующей\nстранице, следует вставить в конец предыдущей области компонент разрыва (Break).\nПри необходимости изменить запрос для отчета можно, выбрав в контекстном меню элемента отчета\n(во вкладкеOutline) пунктDataset and Query:\nЗапрос и поля отчета\nВ этом же диалоге можно, например, просмотреть превью данных полей:\nПревью данных отчета\nПоля, настроенные в запросе, отображаются в дереве компонентов отчета, в нодеFields. Для\nтого, чтобы добавить их в рабочую область отчета, перетащим мышкой полеlastnameв область\nданныхDetail 1. В результате в этой области появилось отображение поля с лейблом$F{lastname}, а в области заголовков столбцовColumn Headerавтоматически был добавлен\nзаголовокlastname:\nДобавление поля отчета\nИзменить текст заголовка можно, дважды кликнув по лейблу заголовка. Укажем там значениие «Фамилия»:\nПовторим эти действия, чтобы добавить в шаблон отчета полеfirstname:\nУменьшим высоту неиспользуемых блоковTitleиPage Headerдо минимума, а блоковColumn HeaderиDetail 1- до 30px. Следать это можно как мышкой, так и с помощью вкладкиProperties:\nДля лейблов заголовков полей включим специальное свойствоnet.sf.jasperreports.style.isBold. Для того,\nчтобы найти это свойство, нужно открыть все свойства компонента и отфильтровать их список, используя\nтекстisBold:\nТеперь можно сохранить полученный шаблон и проверить, как будет выглядеть отчет (вкладкаPreview):\nЧасто возникает необходимость формировать отчет с использованием данных, которые должен вводить\nпользователь. Например, пользователь должен указать условие поиска сотрудников. Для того, чтобы\nэто сделать, в отчете необходимо использовать параметры.\nПараметры настраиваются во вкладкеParametersокна редактирования запроса:\nПо умолчанию здесь отображены встроенные параметры JasperReports. Новый параметр добавляется\nкнопкойAdd, редактируется - в диалоге:\nНовый параметрparam1имеет строковый тип. При генерации отчета из Synergy в качестве отображаемого\nимени параметра будет использовано значение поляDescription.\nДобавленный параметр будет отображен вместе со встроенными параметрами, что может быть неудобно. Для того,\nчтобы увидеть только параметры текущего отчета, нужно нажать на кнопку:\nДля использования параметров нужно добавить их в запрос. Обращение к параметру в запросе производится в\nформате$P{<имя_параметра>}:\nВ результате в отчет будут включены пользователи, чья фамилия начинается на значение, введенное\nпользователем.\nСохраним изменения, нажав на кнопкуOK, и проверим работу параметра:\nЗапрос параметра, введено значениеadm\nРезультат - один подходящий пользователь\nЕсли нужно проверить работу отчета для другого значения параметра, нажмите на кнопку.\nПри соединении JasperReports с Synergy предусмотрены некоторые специальные параметры.\nЕсли название параметра (Parametername) содержит комбинацию символов как в коде\nпеременной, то для данной переменной применяется специальный редактор:\nusers_names: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны имена пользователей,\nперечисленные через запятую, в форматеФамилия Имя О.\nusers_names: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны имена пользователей,\nперечисленные через запятую, в форматеФамилия Имя О.\nusers_id: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны ID\nпользователей, перечисленные через запятую, в одинарных кавычках.ПримечаниеЭтот параметр предназначен только для выполнения запросов. Пример:SELECT lastname, firstname FROM users WHERE userid in ($P!{param})Обратите внимание, что параметр в запросе должен быть записан с!\nusers_id: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны ID\nпользователей, перечисленные через запятую, в одинарных кавычках.\nПримечание\nЭтот параметр предназначен только для выполнения запросов. Пример:\nОбратите внимание, что параметр в запросе должен быть записан с!\nuser_name: Имя выбранного пользователя\nuser_name: Имя выбранного пользователя\nuser_id: ID выбранного пользователя\nuser_id: ID выбранного пользователя\ndepartments_names: Названия выбранных подразделений, перечисленные через запятую\ndepartments_names: Названия выбранных подразделений, перечисленные через запятую\ndepartments_id: Идентификаторы выбранных подразделений, перечисленные через запятую\ndepartments_id: Идентификаторы выбранных подразделений, перечисленные через запятую\ndepartment_name: Название выбранного подразделения\ndepartment_name: Название выбранного подразделения\ndepartment_id: Идентификатор выбранного подразделения\ndepartment_id: Идентификатор выбранного подразделения\ncurrentuser_id: Идентификатор пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра быть точно равно коду\ncurrentuser_id: Идентификатор пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра быть точно равно коду\ncurrentuser_name: Полное имя пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра должно быть точно равно коду\ncurrentuser_name: Полное имя пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра должно быть точно равно коду\ncurrentdate: Дата формирования отчета. Данный параметр не отображается при заполнении отчета\ncurrentdate: Дата формирования отчета. Данный параметр не отображается при заполнении отчета\naction: Идентификатор выбранного проекта\naction: Идентификатор выбранного проекта\nactions: Идентификаторы выбранных проектов, перечисленные через запятую\nactions: Идентификаторы выбранных проектов, перечисленные через запятую\n_dictionary: В параметре необходимо указать код справочника и коды полей, которые должны быть\nиспользованы в качестве значения параметра (value) и его подписи, отображаемой в отчете\n(title), в формате:<dictionary_code>.<value_code>.<title_code>_dictionary.  Например:send_items.item_number.item_name_dictionary.Если справочник содержит поля с кодамиtitleиvalue, то значение и подпись элементов\nсправочника будут выделены автоматически, и в названии параметра достаточно указать только код\nсправочника в формате<dictionary_code>_dictionary\n_dictionary: В параметре необходимо указать код справочника и коды полей, которые должны быть\nиспользованы в качестве значения параметра (value) и его подписи, отображаемой в отчете\n(title), в формате:<dictionary_code>.<value_code>.<title_code>_dictionary.  Например:send_items.item_number.item_name_dictionary.\nЕсли справочник содержит поля с кодамиtitleиvalue, то значение и подпись элементов\nсправочника будут выделены автоматически, и в названии параметра достаточно указать только код\nсправочника в формате<dictionary_code>_dictionary\nДля того, чтобы параметр стал опциональным, необходимо добавить для него специальное свойство:\nОткрыть диалог свойств параметра:\nОткрыть диалог свойств параметра:\nОткрыть список свойств параметра (кнопка…в полеProperties):\nОткрыть список свойств параметра (кнопка…в полеProperties):\n3. Нажать на кнопку+и добавить новое свойствоkz.arta.synergy.reports.parameters.optionalс любым значением:\nНажмите на кнопкуFinish, чтобы применить новое свойство.\nЧтобы проверить значение опционального параметра в отчете, используется условие вида:\nТо есть если параметрparamне задан, его значение не учитывается (результат сравненияtrue).\nЕсли параметр задан, то он сравнивается с переменнойt.\nЕсли же параметр - это мультивыбор значения справочника, то условие имеет вид:\nТо есть если список значенийparam_dictionaryне имеет элементов, то условие считается верным,\nиначе - выполняется проверка, содержится ли (ключевое словоIN) значение поляtв значенияхparam_dictionary. Если необходимо проверить, что значение поля не содержится в списке значений\nпараметра, можно использовать ключевое словоNOTIN.\nКогда дизайн шаблона закончен, необходимо добавить его в Synergy, чтобы отчет могли формировать\nконечные пользователи. Для этого нужно:\nЭкспортировать файл шаблона отчетаjrxml:Во вкладкеProject Explorerв контекстном меню элементаusers.jrxmlвыберите пунктExport Files to…. Откроется диалог экспорта шаблона, в котором нужно выделить экспортируемый\nфайл и целевую папку:В диалоге выбран файлusers.jrxmlи указана папка, в которую нужно экспортировать этот файл\nЭкспортировать файл шаблона отчетаjrxml:\nВо вкладкеProject Explorerв контекстном меню элементаusers.jrxmlвыберите пунктExport Files to…. Откроется диалог экспорта шаблона, в котором нужно выделить экспортируемый\nфайл и целевую папку:\nВ диалоге выбран файлusers.jrxmlи указана папка, в которую нужно экспортировать этот файл\nВ приложении Synergy IDE создать новый пользовательский отчет:Выделите папку, в которой должен располагаться новый отчет, и выберите в меню пунктОбъект-Добавить-Пользовательский отчет. Откроется вкладка создания нового отчета:\nВ приложении Synergy IDE создать новый пользовательский отчет:\nВыделите папку, в которой должен располагаться новый отчет, и выберите в меню пунктОбъект-Добавить-Пользовательский отчет. Откроется вкладка создания нового отчета:\nЗаполнить сведения об отчете и приложить экспортированный файл шаблона отчетаjrxml:Итоговый формат отчета регурируется маской имени файла. В данном случае отчет будет формироваться\nв форматеpdf.Поскольку отчет работает на основе SQL-запроса, то в поле «Тип источника данных» выбран вариант\n«SQL соединение».\nЗаполнить сведения об отчете и приложить экспортированный файл шаблона отчетаjrxml:\nИтоговый формат отчета регурируется маской имени файла. В данном случае отчет будет формироваться\nв форматеpdf.\nПоскольку отчет работает на основе SQL-запроса, то в поле «Тип источника данных» выбран вариант\n«SQL соединение».\nПосле сохранения нового пользовательского очета пользователям будет доступна возможность скачивания\nотчета из клиентской части Synergy.",
    "Synergy поддерживает использование большого количестваметодов API, иJasperReportпозволяет\nиспользовать данные JSON, возвращаемые этими методами, в качестве источника данных для отчетов.\nРассмотрим работу с JSON на примере отчета, содержащего список подписей документа.\nВ первую очередь создадим адаптер данных для нового отчета. Для этого в мастере создания нового\nадаптера выберем типJSON File:\nНа следующем шаге нужно указать источник данных:\nУкажем имя адаптераsignlist, в качестве источника укажем запросrest/api/docflow/doc/sign_list.\nЭтот метод поUUIDдокумента возвращает список подписей для него. Описание метода приведено\nвсправочнике API.\nВ полеFile/URLуказан полный URL метода и значение параметраdocumentIDв формате:\nПримечание\nОбратите внимание, что в URL адаптера данных указываются фиксированные значения входных параметров\nметода. Эти значения будут использоваться только для дизайна и предпросмотра шаблона отчета. При\nнастройке пользовательского отчета в Synergy IDE параметры будут настроены дополнительно.\nПодсказка\nПолучить значение UUID документа можно из его URL в Synergy:\nНеобходимо включить опциюUse the report JSON expression when filling the report.\nДалее нужно перейти к дополнительным настройкам соединения (кнопкаOptions):\nЗдесь указываются логин и пароль пользователя, от имени которого выполняется метод. На вкладкеHTTP Headersнужно добавить параметр способа авторизацииAuthorizationсо значениемBasicMTox.\nПосле завершения настройки адаптера нажмитеFinish. Вкладка с созданным адаптером открылась в\nрабочей области, и в ней можно вывполнить проверку соединения кнопкойTest Connection:\nШаблон отчета, использующего данные JSON, создается точно так же, как и для работы с SQL.\nНа панели инструментов нажмите на кнопкуNew JasperReport:\nНа первом шаге мастера создания нового шаблона снова выберем вариантBlank A4.\nВторой шаг мастера позволяет указать расположение и имя файла шаблона отчета.\nНа третьем шаге необходимо выбрать адаптер данных.\nПосле выбора адаптера данных в левой части будут отображены все поля, которые возвращает\nвыбранный метод для входных данных, указанных в URL метода. На основе этих полей можно\nсоставить запрос к данным.\nПримечание\nДанные, возвращаемые методами API, имеют древовидную структуру. Запрос для JSON\nпишется через точку. Например, если нужно получить все ноды<node_name>, то в запросе\nнужно писать просто<node_name>. Если же у<node_name>есть вложенное полеinfo,\nи нужно получить именно его, то в запросе нужно указать<node_name>.info.\nОбратите внимание, что, в отличие от SQL-запроса, здесь нельзя выбрать несколько полей одного\nуровня вложенности. Для доступа ко всем возвращаемым нодам мы рекомедуем оставить поле запроса\nпустым: поля отчета будут настроены отдельно.\nСозданный шаблон отчета откроется во вкладке рабочей области:\nЭтап дизайна отчета не отличается от уже рассмотренного в разделеДизайн шаблона отчета.\nНастроим набор полей отчета. Для этого нужно в контекстном меню корневой ноды шаблона (вкладкаOutline) выбрать пунктDataset and Query:\nМеханика добавления полей в отчет из данных JSON несколько отличается от работы с SQL. Для того,\nчтобы использовать ноды JSON как поля отчета, нужно выделить их правой кнопкой мыши и выбрать пунктAdd node as field:\nВ качестве полей отчета будут использованы имя пользователя, его должность, дата подписания,\nрезультат и комментарий.\nВы можете воспользоваться функцией предпросмотра выбранных данных, переключившись на вкладкуData preview:\nДалее так же, как и в предыдущем случае, выполняется дизайн шаблона отчета: нужные поля из\nвкладкиOutlineнужно мышкой переместить в соответствующие области шаблона. При необходимости\nлейблы для полей можно переименовать, а размер областей - уменьшить:\nРезультат дизайна шаблона. В качестве заголовка отчета используется элементStatic Text,\nкоторый можно выбрать из вкладкиPalette.\nПосмотрим, что получилось, переключившись на вкладкуPreview:\nРезультат дизайна шаблона. Отображены данные, соответствующие документу, чейUUIDуказан\nв адаптере данных\nНа этом дизайн шаблона отчета закончен.\nВ URL метода или в теле запроса можно использовать подстановки вида{parameter_name}.\nПри соединении JasperReports с Synergy предусмотрены некоторые автоматические параметры,\nв частности:\nelementid— идентификатор текущего выбранного объекта. К примеру, если отчет формируется\nдля карточки документа, то значением параметра являетсяUUIDэтого документа, если для\nреестра -UUIDреестра, и так далее.\nuserid— идентификатор текущего пользователя\nactorid— идентификатор текущего пользователя\nВ нашем примере со списком подписей документа будем использовать параметрelementidдля\nполучения идентификатора выбранного документа. Для этого достаточно добавить в отчет параметр\nс таким именем:\nВ диалоге настройки запроса отчетаDataset and Query, вкладкаParameters, добавляется\nновый параметр с именемelementid. Дополнительной настройки параметра не требуется -\nсовпадения имени параметра со специальным параметром Synergy достаточно для корректного\nего использования.\nКак и в предыдущем случае, сначала нужно выполнить экспорт шаблона отчета. Для этого во вкладкеProject Explorerв контекстном меню элемента отчетаdoc_singlist.jrxmlвыберите пунктExport Files to…. В открывшемся диалоге нужно выделить экспортируемый файл и целевую папку:\nДальше в приложении Synergy IDE нужно создать новый пользовательский отчет:\nРассмотрим подробнее заполнение сведедений об отчете:\nв качестве модуля нужно указать значение «Карточка документа». Это означает, что отчет будет\nдоступен для карточки открытого документа\nв качестве модуля нужно указать значение «Карточка документа». Это означает, что отчет будет\nдоступен для карточки открытого документа\nформат, в котором будет формироваться отчет, регулируется с помощью маски отчета; в нашем случае\nиспользуется формат PDF\nформат, в котором будет формироваться отчет, регулируется с помощью маски отчета; в нашем случае\nиспользуется формат PDF\nприложен экспортированный файл отчетаdoc_singlist.jrxml\nприложен экспортированный файл отчетаdoc_singlist.jrxml\nтип источника данных: JSON\nтип источника данных: JSON\nURL источника данных: выбран тип метода GET, а URL метода введен в формате:http://<host>:<port>/Synergy/rest/api/docflow/doc/sign_list?documentID={elementid}ПримечаниеЗдесь специальный параметр{elementid}используется для получения идентификатора\nтого документа, карточка которого открыта в момент вызова отчета.\nURL источника данных: выбран тип метода GET, а URL метода введен в формате:\nhttp://<host>:<port>/Synergy/rest/api/docflow/doc/sign_list?documentID={elementid}\nПримечание\nЗдесь специальный параметр{elementid}используется для получения идентификатора\nтого документа, карточка которого открыта в момент вызова отчета.\nв поле «Авторизация» указаны логин и пароль пользователя, от имени которого будет выполняться\nметод, используемый в отчете.\nв поле «Авторизация» указаны логин и пароль пользователя, от имени которого будет выполняться\nметод, используемый в отчете.\nСохраним пользовательский отчет и проверим, как он работает, из клиентской части Synergy:\nВ Synergy создан документ, который подписывали разные сотрудники\nПереключимся на карточку документа и в списке отчетов выберем созданный отчет «Список подписей»\nОтчет скачивается в виде файла PDF, содержимое этого файла совпадает с настроенным при дизайне отчета\nПримечание\nЕсли в результате скачивается пустой файл, убедитесь, что в шаблоне отчета для лейблов\nиспользуется один из подрреживаемых шрифтов, например, Arial (свойство компонентаnet.sf.jasperreports.style.fontName):\nПоддерживаемые шрифты перечислены в импортированном проектеSynergyReports. Вот их список:\nArial\nTimes New Roman\nCourier New\nDejaVu Sans\nDejaVu Serif\nDejaVu Sans Mono\nSansSerif\nSerif\nMonospaced",
    "Пользовательские отчеты предоставляют разработчику возможность формировать\nи загружать произвольные отчеты на основе данных, содержащихся в БД системы\nили получаемых с помощью API.\nСформированный шаблон отчета можно загрузить в приложение Synergy IDE и\nи предоставить пользователям права на его использование.\nДля разработки шаблона отчета используетсяTIBCO Jaspersoft Studio.\nПримечание\nРабота с Jaspersoft Studio рассматривается на примере версии6.6.0.\nПодсказка\nВ этом разделе будут рассмотрены лишь некоторые возможности Jaspersoft Studio.\nПри работе с отчетами мы рекомендуем обращаться кофициальному руководству TIBCO.",
    "Конфигурация, необходимая для работы JaspersoftStudio:\nне менее 500 МБ пространства на жестком диске\nминимум 1 ГБ оперативной памяти, рекомендуемый размер - 2 ГБ\nподдерживаемые ОС:Windows 7/8: x86 и x64Linux: x86 и x64MacOS X: x64\nWindows 7/8: x86 и x64\nLinux: x86 и x64\nMacOS X: x64",
    "Дистрибутив Jaspersoft можно скачать поссылке.\nДля работы с Synergy необходимо добавить проект, содержащий необходимые\nбиблиотеки и поддерживаемые шрифты:\nСкачайте приложенныйархив с проектом, добавьте его в папкуjasperSoftStudio\n2. Запустите JasperStudio, в меню выберите пунктFile - Open Projects from File System,\nдалее нажмите на кнопкуArchiveи выберите скачанный архив.\nИмпортированный проект отображается во вкладкеProject Explorer:",
    "JasperStudio позволяет получать данные посредством SQL-запроса, из данныхjsonилиxml. Источник данных указывается вадаптере данных, соответствующем\nотчету.\nВ целом для создания пользовательского отчета нужно проделать такие шаги:\nСоздать адаптер данных\nНастроить поля отчета\nНастроить внешний вид отчета\nДобавить новый пользовательский отчет, используя полученный шаблон отчета\nАдаптер данных- это объект, регулирующий источник данных, их структуру и способ получения.\nАдаптер хранится в виде файлаXMLи доступен всем шаблонам отчетов текущего проекта.",
    "Использование SQL в запросе позволяет строить отчет на основнии данных, расположенных\nнепосредственно в БД Synergy. Описание структуры БД приводится вдокументации.\nРассмотрим простой отчет, который будет содержать список пользователей Synergy.\nНа панели инструментов нажмите на кнопкуNew data Adapter. Откроется мастер\nсоздания нового соединения:\nШаг 1: выбор расположения и имени для нового адаптера\nНа первом шаге необходимо указать имя и расположение нового адаптера.\nСледующим шагом создания адаптера является выбор типа соединения:\nШаг 1: выбор типа соединения\nДля работы с SQL необходимо указать тип соединенияDatabaseJDBCConnection.\nДалее необходимо указать настройки соединения:\nDatasource JDBC connection\nВведены следующие параметры соединения:\nЗдесь<hostname>:<mysql_port>- адрес и порт сервера, на котором расположен MySQL,\nили, как в случае с пробросом соединения через SSH (пример ниже), локальный хост\nи порт, куда был выполнен проброс.\nДалее указываются логин и пароль пользователя, имеющего доступ к БД.\nДля проверки соединения можно нажать на кнопкуTest. Если соединение с указанными\nпараметрами удалось установить, то будет отображено сообщение«Successful»\nЕсли же соединение установить не удалось, то будет отображено сообщение с текстом ошибки.\nСохраните новый адаптер, нажав на кнопкуFinish.\nЕсли требуется установить соединение с БД, расположенной на удаленном сервере,\nто предварительно необходимо сделать проброс соединения через SSH, выполнив команду:\nЗдесь3307- локальный порт, с которым будет устанавливать соединение JasperSoft,localhost- локальный хост,3306- удаленный порт (например, портmysql,\nзапущенного на удаленном сервере),user@remote-host.com- пользователь@удаленный хост.\nПримечание\nПримечания:\nЭту команду требуется выполнять после каждого перезапуска сервера.\nВремя отклика возрастает, поскольку добавляются накладные расходы на шифрование/расшифровывание.\nНа локальном сервере появляется уязвимость удаленного сервера, так как есть\nпрямой проброс соединения. Поэтому для порта3307следует заблокировать доступ извне\nчерезiptableили брандмауэр.\nДля создания нового шаблона отчета нужно вызвать контекстное меню элемента дерева (например,\nкорневого элементаSynergyReports) и выбрать пунктNew - Jasper Report. Откроется\nмастер создания нового шаблона.\nШаг 1. Выбор разметки для шаблона отчета\nПервым шагом этого мастера является выбор разметки для шаблона. Выберем здесь простой\nлист формата А4 -Blank A4.\nШаг 2. Место расположения и имя шаблона\nНа втором шаге нужно указать имя шаблона и выбрать место расположения файла шаблона в проекте.\nДалее выполняется настройка запроса для отчета:\nШаг 3. Выбор адаптера данных и настройка запроса для отчета\nНа шаге 3 нужно выбрать ранее созданный адаптер данных и ввести запрос. Здесь мы используем\nадаптерSynergy connectionи вводим текст запроса:\nНа следующем шаге на основе введенного запроса формируется список полей, доступных для\nиспользования в отчете:\nШаг 4. Настройка полей отчета\nДля того, чтобы использовать полученное в запросе поле в качестве поля отчета, перенесите\nэто поле в правую часть диалога. Кнопка>>добавит в правую часть все доступные поля:\nНастройка полей отчета\nДалее при необходимостм можно выбрать поля, по которым должна выполняться группировка данных.\nВ нашем случае группировка не требуется.\nПосле завершения создания нового шаблона вкладка с ним откроется в рабочей области:\nОкно составления отчета\nСлева во вкладкеOutlineрасполагается дерево элементов отчета, где в качестве корня выступает\nсам отчет. В правой части во вкладкеPropertiesбудут отображаться свойства элемента, выбранного\nв дереве элементов. ВкладкаPaletteпозволяет добавить в шаблон отчета новые компоненты.\nПосередине окна располагается рабочая область отчета. По умолчанию открыта вкладкаDesign-\nв ней отображена структура отчета, и именно в ней настраивается внешний вид отчета.\nВкладкаSourceсодержит полученный отчет в формате XML.\nВкладкаPreviewпредназначена для предварительного просмотра итогового отчета.\nРабочая область шаблона отчета состоит из следующих основных секций:\nTitle: заголовок отчета. Секция будет напечатана один раз на первой странице\nотчета.\nPage Header: заголовок страницы. Секция будет напечана в начале каждой страницы отчета.\nОбычно здесь размещается название отчета либо номер текущей страницы.\nColumn Header: название колонок отчета.\nDetail 1: тело отчета. Секция отличается от остальных тем, что она повторяется в отчете\nровно столько раз, сколько строк будет в полученном отчете.\nColumn Footer: нижняя подпись колонок.\nPage Footer: нижний колонтитул страницы. Секция будет напечатана в конце каждой страницы\nотчета. Аналогично с заголовком страницы, здесь могут быть размещены название отчета или номер\nтекущей страницы.\nSummary: нижняя подпись отчета. Секция будет напечатана один раз в конце отчета.\nЕсли какая-либо секция в отчете не нужна, то достаточно просто уменьшить ее размер до 0\nи не помещать в нее компонентов. Если необходимо, чтобы область начиналась на следующей\nстранице, следует вставить в конец предыдущей области компонент разрыва (Break).\nПри необходимости изменить запрос для отчета можно, выбрав в контекстном меню элемента отчета\n(во вкладкеOutline) пунктDataset and Query:\nЗапрос и поля отчета\nВ этом же диалоге можно, например, просмотреть превью данных полей:\nПревью данных отчета\nПоля, настроенные в запросе, отображаются в дереве компонентов отчета, в нодеFields. Для\nтого, чтобы добавить их в рабочую область отчета, перетащим мышкой полеlastnameв область\nданныхDetail 1. В результате в этой области появилось отображение поля с лейблом$F{lastname}, а в области заголовков столбцовColumn Headerавтоматически был добавлен\nзаголовокlastname:\nДобавление поля отчета\nИзменить текст заголовка можно, дважды кликнув по лейблу заголовка. Укажем там значениие «Фамилия»:\nПовторим эти действия, чтобы добавить в шаблон отчета полеfirstname:\nУменьшим высоту неиспользуемых блоковTitleиPage Headerдо минимума, а блоковColumn HeaderиDetail 1- до 30px. Следать это можно как мышкой, так и с помощью вкладкиProperties:\nДля лейблов заголовков полей включим специальное свойствоnet.sf.jasperreports.style.isBold. Для того,\nчтобы найти это свойство, нужно открыть все свойства компонента и отфильтровать их список, используя\nтекстisBold:\nТеперь можно сохранить полученный шаблон и проверить, как будет выглядеть отчет (вкладкаPreview):\nЧасто возникает необходимость формировать отчет с использованием данных, которые должен вводить\nпользователь. Например, пользователь должен указать условие поиска сотрудников. Для того, чтобы\nэто сделать, в отчете необходимо использовать параметры.\nПараметры настраиваются во вкладкеParametersокна редактирования запроса:\nПо умолчанию здесь отображены встроенные параметры JasperReports. Новый параметр добавляется\nкнопкойAdd, редактируется - в диалоге:\nНовый параметрparam1имеет строковый тип. При генерации отчета из Synergy в качестве отображаемого\nимени параметра будет использовано значение поляDescription.\nДобавленный параметр будет отображен вместе со встроенными параметрами, что может быть неудобно. Для того,\nчтобы увидеть только параметры текущего отчета, нужно нажать на кнопку:\nДля использования параметров нужно добавить их в запрос. Обращение к параметру в запросе производится в\nформате$P{<имя_параметра>}:\nВ результате в отчет будут включены пользователи, чья фамилия начинается на значение, введенное\nпользователем.\nСохраним изменения, нажав на кнопкуOK, и проверим работу параметра:\nЗапрос параметра, введено значениеadm\nРезультат - один подходящий пользователь\nЕсли нужно проверить работу отчета для другого значения параметра, нажмите на кнопку.\nПри соединении JasperReports с Synergy предусмотрены некоторые специальные параметры.\nЕсли название параметра (Parametername) содержит комбинацию символов как в коде\nпеременной, то для данной переменной применяется специальный редактор:\nusers_names: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны имена пользователей,\nперечисленные через запятую, в форматеФамилия Имя О.\nusers_names: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны имена пользователей,\nперечисленные через запятую, в форматеФамилия Имя О.\nusers_id: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны ID\nпользователей, перечисленные через запятую, в одинарных кавычках.ПримечаниеЭтот параметр предназначен только для выполнения запросов. Пример:SELECT lastname, firstname FROM users WHERE userid in ($P!{param})Обратите внимание, что параметр в запросе должен быть записан с!\nusers_id: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны ID\nпользователей, перечисленные через запятую, в одинарных кавычках.\nПримечание\nЭтот параметр предназначен только для выполнения запросов. Пример:\nОбратите внимание, что параметр в запросе должен быть записан с!\nuser_name: Имя выбранного пользователя\nuser_name: Имя выбранного пользователя\nuser_id: ID выбранного пользователя\nuser_id: ID выбранного пользователя\ndepartments_names: Названия выбранных подразделений, перечисленные через запятую\ndepartments_names: Названия выбранных подразделений, перечисленные через запятую\ndepartments_id: Идентификаторы выбранных подразделений, перечисленные через запятую\ndepartments_id: Идентификаторы выбранных подразделений, перечисленные через запятую\ndepartment_name: Название выбранного подразделения\ndepartment_name: Название выбранного подразделения\ndepartment_id: Идентификатор выбранного подразделения\ndepartment_id: Идентификатор выбранного подразделения\ncurrentuser_id: Идентификатор пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра быть точно равно коду\ncurrentuser_id: Идентификатор пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра быть точно равно коду\ncurrentuser_name: Полное имя пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра должно быть точно равно коду\ncurrentuser_name: Полное имя пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра должно быть точно равно коду\ncurrentdate: Дата формирования отчета. Данный параметр не отображается при заполнении отчета\ncurrentdate: Дата формирования отчета. Данный параметр не отображается при заполнении отчета\naction: Идентификатор выбранного проекта\naction: Идентификатор выбранного проекта\nactions: Идентификаторы выбранных проектов, перечисленные через запятую\nactions: Идентификаторы выбранных проектов, перечисленные через запятую\n_dictionary: В параметре необходимо указать код справочника и коды полей, которые должны быть\nиспользованы в качестве значения параметра (value) и его подписи, отображаемой в отчете\n(title), в формате:<dictionary_code>.<value_code>.<title_code>_dictionary.  Например:send_items.item_number.item_name_dictionary.Если справочник содержит поля с кодамиtitleиvalue, то значение и подпись элементов\nсправочника будут выделены автоматически, и в названии параметра достаточно указать только код\nсправочника в формате<dictionary_code>_dictionary\n_dictionary: В параметре необходимо указать код справочника и коды полей, которые должны быть\nиспользованы в качестве значения параметра (value) и его подписи, отображаемой в отчете\n(title), в формате:<dictionary_code>.<value_code>.<title_code>_dictionary.  Например:send_items.item_number.item_name_dictionary.\nЕсли справочник содержит поля с кодамиtitleиvalue, то значение и подпись элементов\nсправочника будут выделены автоматически, и в названии параметра достаточно указать только код\nсправочника в формате<dictionary_code>_dictionary\nДля того, чтобы параметр стал опциональным, необходимо добавить для него специальное свойство:\nОткрыть диалог свойств параметра:\nОткрыть диалог свойств параметра:\nОткрыть список свойств параметра (кнопка…в полеProperties):\nОткрыть список свойств параметра (кнопка…в полеProperties):\n3. Нажать на кнопку+и добавить новое свойствоkz.arta.synergy.reports.parameters.optionalс любым значением:\nНажмите на кнопкуFinish, чтобы применить новое свойство.\nЧтобы проверить значение опционального параметра в отчете, используется условие вида:\nТо есть если параметрparamне задан, его значение не учитывается (результат сравненияtrue).\nЕсли параметр задан, то он сравнивается с переменнойt.\nЕсли же параметр - это мультивыбор значения справочника, то условие имеет вид:\nТо есть если список значенийparam_dictionaryне имеет элементов, то условие считается верным,\nиначе - выполняется проверка, содержится ли (ключевое словоIN) значение поляtв значенияхparam_dictionary. Если необходимо проверить, что значение поля не содержится в списке значений\nпараметра, можно использовать ключевое словоNOTIN.\nКогда дизайн шаблона закончен, необходимо добавить его в Synergy, чтобы отчет могли формировать\nконечные пользователи. Для этого нужно:\nЭкспортировать файл шаблона отчетаjrxml:Во вкладкеProject Explorerв контекстном меню элементаusers.jrxmlвыберите пунктExport Files to…. Откроется диалог экспорта шаблона, в котором нужно выделить экспортируемый\nфайл и целевую папку:В диалоге выбран файлusers.jrxmlи указана папка, в которую нужно экспортировать этот файл\nЭкспортировать файл шаблона отчетаjrxml:\nВо вкладкеProject Explorerв контекстном меню элементаusers.jrxmlвыберите пунктExport Files to…. Откроется диалог экспорта шаблона, в котором нужно выделить экспортируемый\nфайл и целевую папку:\nВ диалоге выбран файлusers.jrxmlи указана папка, в которую нужно экспортировать этот файл\nВ приложении Synergy IDE создать новый пользовательский отчет:Выделите папку, в которой должен располагаться новый отчет, и выберите в меню пунктОбъект-Добавить-Пользовательский отчет. Откроется вкладка создания нового отчета:\nВ приложении Synergy IDE создать новый пользовательский отчет:\nВыделите папку, в которой должен располагаться новый отчет, и выберите в меню пунктОбъект-Добавить-Пользовательский отчет. Откроется вкладка создания нового отчета:\nЗаполнить сведения об отчете и приложить экспортированный файл шаблона отчетаjrxml:Итоговый формат отчета регурируется маской имени файла. В данном случае отчет будет формироваться\nв форматеpdf.Поскольку отчет работает на основе SQL-запроса, то в поле «Тип источника данных» выбран вариант\n«SQL соединение».\nЗаполнить сведения об отчете и приложить экспортированный файл шаблона отчетаjrxml:\nИтоговый формат отчета регурируется маской имени файла. В данном случае отчет будет формироваться\nв форматеpdf.\nПоскольку отчет работает на основе SQL-запроса, то в поле «Тип источника данных» выбран вариант\n«SQL соединение».\nПосле сохранения нового пользовательского очета пользователям будет доступна возможность скачивания\nотчета из клиентской части Synergy.",
    "Synergy поддерживает использование большого количестваметодов API, иJasperReportпозволяет\nиспользовать данные JSON, возвращаемые этими методами, в качестве источника данных для отчетов.\nРассмотрим работу с JSON на примере отчета, содержащего список подписей документа.\nВ первую очередь создадим адаптер данных для нового отчета. Для этого в мастере создания нового\nадаптера выберем типJSON File:\nНа следующем шаге нужно указать источник данных:\nУкажем имя адаптераsignlist, в качестве источника укажем запросrest/api/docflow/doc/sign_list.\nЭтот метод поUUIDдокумента возвращает список подписей для него. Описание метода приведено\nвсправочнике API.\nВ полеFile/URLуказан полный URL метода и значение параметраdocumentIDв формате:\nПримечание\nОбратите внимание, что в URL адаптера данных указываются фиксированные значения входных параметров\nметода. Эти значения будут использоваться только для дизайна и предпросмотра шаблона отчета. При\nнастройке пользовательского отчета в Synergy IDE параметры будут настроены дополнительно.\nПодсказка\nПолучить значение UUID документа можно из его URL в Synergy:\nНеобходимо включить опциюUse the report JSON expression when filling the report.\nДалее нужно перейти к дополнительным настройкам соединения (кнопкаOptions):\nЗдесь указываются логин и пароль пользователя, от имени которого выполняется метод. На вкладкеHTTP Headersнужно добавить параметр способа авторизацииAuthorizationсо значениемBasicMTox.\nПосле завершения настройки адаптера нажмитеFinish. Вкладка с созданным адаптером открылась в\nрабочей области, и в ней можно вывполнить проверку соединения кнопкойTest Connection:\nШаблон отчета, использующего данные JSON, создается точно так же, как и для работы с SQL.\nНа панели инструментов нажмите на кнопкуNew JasperReport:\nНа первом шаге мастера создания нового шаблона снова выберем вариантBlank A4.\nВторой шаг мастера позволяет указать расположение и имя файла шаблона отчета.\nНа третьем шаге необходимо выбрать адаптер данных.\nПосле выбора адаптера данных в левой части будут отображены все поля, которые возвращает\nвыбранный метод для входных данных, указанных в URL метода. На основе этих полей можно\nсоставить запрос к данным.\nПримечание\nДанные, возвращаемые методами API, имеют древовидную структуру. Запрос для JSON\nпишется через точку. Например, если нужно получить все ноды<node_name>, то в запросе\nнужно писать просто<node_name>. Если же у<node_name>есть вложенное полеinfo,\nи нужно получить именно его, то в запросе нужно указать<node_name>.info.\nОбратите внимание, что, в отличие от SQL-запроса, здесь нельзя выбрать несколько полей одного\nуровня вложенности. Для доступа ко всем возвращаемым нодам мы рекомедуем оставить поле запроса\nпустым: поля отчета будут настроены отдельно.\nСозданный шаблон отчета откроется во вкладке рабочей области:\nЭтап дизайна отчета не отличается от уже рассмотренного в разделеДизайн шаблона отчета.\nНастроим набор полей отчета. Для этого нужно в контекстном меню корневой ноды шаблона (вкладкаOutline) выбрать пунктDataset and Query:\nМеханика добавления полей в отчет из данных JSON несколько отличается от работы с SQL. Для того,\nчтобы использовать ноды JSON как поля отчета, нужно выделить их правой кнопкой мыши и выбрать пунктAdd node as field:\nВ качестве полей отчета будут использованы имя пользователя, его должность, дата подписания,\nрезультат и комментарий.\nВы можете воспользоваться функцией предпросмотра выбранных данных, переключившись на вкладкуData preview:\nДалее так же, как и в предыдущем случае, выполняется дизайн шаблона отчета: нужные поля из\nвкладкиOutlineнужно мышкой переместить в соответствующие области шаблона. При необходимости\nлейблы для полей можно переименовать, а размер областей - уменьшить:\nРезультат дизайна шаблона. В качестве заголовка отчета используется элементStatic Text,\nкоторый можно выбрать из вкладкиPalette.\nПосмотрим, что получилось, переключившись на вкладкуPreview:\nРезультат дизайна шаблона. Отображены данные, соответствующие документу, чейUUIDуказан\nв адаптере данных\nНа этом дизайн шаблона отчета закончен.\nВ URL метода или в теле запроса можно использовать подстановки вида{parameter_name}.\nПри соединении JasperReports с Synergy предусмотрены некоторые автоматические параметры,\nв частности:\nelementid— идентификатор текущего выбранного объекта. К примеру, если отчет формируется\nдля карточки документа, то значением параметра являетсяUUIDэтого документа, если для\nреестра -UUIDреестра, и так далее.\nuserid— идентификатор текущего пользователя\nactorid— идентификатор текущего пользователя\nВ нашем примере со списком подписей документа будем использовать параметрelementidдля\nполучения идентификатора выбранного документа. Для этого достаточно добавить в отчет параметр\nс таким именем:\nВ диалоге настройки запроса отчетаDataset and Query, вкладкаParameters, добавляется\nновый параметр с именемelementid. Дополнительной настройки параметра не требуется -\nсовпадения имени параметра со специальным параметром Synergy достаточно для корректного\nего использования.\nКак и в предыдущем случае, сначала нужно выполнить экспорт шаблона отчета. Для этого во вкладкеProject Explorerв контекстном меню элемента отчетаdoc_singlist.jrxmlвыберите пунктExport Files to…. В открывшемся диалоге нужно выделить экспортируемый файл и целевую папку:\nДальше в приложении Synergy IDE нужно создать новый пользовательский отчет:\nРассмотрим подробнее заполнение сведедений об отчете:\nв качестве модуля нужно указать значение «Карточка документа». Это означает, что отчет будет\nдоступен для карточки открытого документа\nв качестве модуля нужно указать значение «Карточка документа». Это означает, что отчет будет\nдоступен для карточки открытого документа\nформат, в котором будет формироваться отчет, регулируется с помощью маски отчета; в нашем случае\nиспользуется формат PDF\nформат, в котором будет формироваться отчет, регулируется с помощью маски отчета; в нашем случае\nиспользуется формат PDF\nприложен экспортированный файл отчетаdoc_singlist.jrxml\nприложен экспортированный файл отчетаdoc_singlist.jrxml\nтип источника данных: JSON\nтип источника данных: JSON\nURL источника данных: выбран тип метода GET, а URL метода введен в формате:http://<host>:<port>/Synergy/rest/api/docflow/doc/sign_list?documentID={elementid}ПримечаниеЗдесь специальный параметр{elementid}используется для получения идентификатора\nтого документа, карточка которого открыта в момент вызова отчета.\nURL источника данных: выбран тип метода GET, а URL метода введен в формате:\nhttp://<host>:<port>/Synergy/rest/api/docflow/doc/sign_list?documentID={elementid}\nПримечание\nЗдесь специальный параметр{elementid}используется для получения идентификатора\nтого документа, карточка которого открыта в момент вызова отчета.\nв поле «Авторизация» указаны логин и пароль пользователя, от имени которого будет выполняться\nметод, используемый в отчете.\nв поле «Авторизация» указаны логин и пароль пользователя, от имени которого будет выполняться\nметод, используемый в отчете.\nСохраним пользовательский отчет и проверим, как он работает, из клиентской части Synergy:\nВ Synergy создан документ, который подписывали разные сотрудники\nПереключимся на карточку документа и в списке отчетов выберем созданный отчет «Список подписей»\nОтчет скачивается в виде файла PDF, содержимое этого файла совпадает с настроенным при дизайне отчета\nПримечание\nЕсли в результате скачивается пустой файл, убедитесь, что в шаблоне отчета для лейблов\nиспользуется один из подрреживаемых шрифтов, например, Arial (свойство компонентаnet.sf.jasperreports.style.fontName):\nПоддерживаемые шрифты перечислены в импортированном проектеSynergyReports. Вот их список:\nArial\nTimes New Roman\nCourier New\nDejaVu Sans\nDejaVu Serif\nDejaVu Sans Mono\nSansSerif\nSerif\nMonospaced",
    "Пользовательские отчеты предоставляют разработчику возможность формировать\nи загружать произвольные отчеты на основе данных, содержащихся в БД системы\nили получаемых с помощью API.\nСформированный шаблон отчета можно загрузить в приложение Synergy IDE и\nи предоставить пользователям права на его использование.\nДля разработки шаблона отчета используетсяTIBCO Jaspersoft Studio.\nПримечание\nРабота с Jaspersoft Studio рассматривается на примере версии6.6.0.\nПодсказка\nВ этом разделе будут рассмотрены лишь некоторые возможности Jaspersoft Studio.\nПри работе с отчетами мы рекомендуем обращаться кофициальному руководству TIBCO.",
    "Конфигурация, необходимая для работы JaspersoftStudio:\nне менее 500 МБ пространства на жестком диске\nминимум 1 ГБ оперативной памяти, рекомендуемый размер - 2 ГБ\nподдерживаемые ОС:Windows 7/8: x86 и x64Linux: x86 и x64MacOS X: x64\nWindows 7/8: x86 и x64\nLinux: x86 и x64\nMacOS X: x64",
    "Дистрибутив Jaspersoft можно скачать поссылке.\nДля работы с Synergy необходимо добавить проект, содержащий необходимые\nбиблиотеки и поддерживаемые шрифты:\nСкачайте приложенныйархив с проектом, добавьте его в папкуjasperSoftStudio\n2. Запустите JasperStudio, в меню выберите пунктFile - Open Projects from File System,\nдалее нажмите на кнопкуArchiveи выберите скачанный архив.\nИмпортированный проект отображается во вкладкеProject Explorer:",
    "JasperStudio позволяет получать данные посредством SQL-запроса, из данныхjsonилиxml. Источник данных указывается вадаптере данных, соответствующем\nотчету.\nВ целом для создания пользовательского отчета нужно проделать такие шаги:\nСоздать адаптер данных\nНастроить поля отчета\nНастроить внешний вид отчета\nДобавить новый пользовательский отчет, используя полученный шаблон отчета\nАдаптер данных- это объект, регулирующий источник данных, их структуру и способ получения.\nАдаптер хранится в виде файлаXMLи доступен всем шаблонам отчетов текущего проекта.",
    "Использование SQL в запросе позволяет строить отчет на основнии данных, расположенных\nнепосредственно в БД Synergy. Описание структуры БД приводится вдокументации.\nРассмотрим простой отчет, который будет содержать список пользователей Synergy.\nНа панели инструментов нажмите на кнопкуNew data Adapter. Откроется мастер\nсоздания нового соединения:\nШаг 1: выбор расположения и имени для нового адаптера\nНа первом шаге необходимо указать имя и расположение нового адаптера.\nСледующим шагом создания адаптера является выбор типа соединения:\nШаг 1: выбор типа соединения\nДля работы с SQL необходимо указать тип соединенияDatabaseJDBCConnection.\nДалее необходимо указать настройки соединения:\nDatasource JDBC connection\nВведены следующие параметры соединения:\nЗдесь<hostname>:<mysql_port>- адрес и порт сервера, на котором расположен MySQL,\nили, как в случае с пробросом соединения через SSH (пример ниже), локальный хост\nи порт, куда был выполнен проброс.\nДалее указываются логин и пароль пользователя, имеющего доступ к БД.\nДля проверки соединения можно нажать на кнопкуTest. Если соединение с указанными\nпараметрами удалось установить, то будет отображено сообщение«Successful»\nЕсли же соединение установить не удалось, то будет отображено сообщение с текстом ошибки.\nСохраните новый адаптер, нажав на кнопкуFinish.\nЕсли требуется установить соединение с БД, расположенной на удаленном сервере,\nто предварительно необходимо сделать проброс соединения через SSH, выполнив команду:\nЗдесь3307- локальный порт, с которым будет устанавливать соединение JasperSoft,localhost- локальный хост,3306- удаленный порт (например, портmysql,\nзапущенного на удаленном сервере),user@remote-host.com- пользователь@удаленный хост.\nПримечание\nПримечания:\nЭту команду требуется выполнять после каждого перезапуска сервера.\nВремя отклика возрастает, поскольку добавляются накладные расходы на шифрование/расшифровывание.\nНа локальном сервере появляется уязвимость удаленного сервера, так как есть\nпрямой проброс соединения. Поэтому для порта3307следует заблокировать доступ извне\nчерезiptableили брандмауэр.\nДля создания нового шаблона отчета нужно вызвать контекстное меню элемента дерева (например,\nкорневого элементаSynergyReports) и выбрать пунктNew - Jasper Report. Откроется\nмастер создания нового шаблона.\nШаг 1. Выбор разметки для шаблона отчета\nПервым шагом этого мастера является выбор разметки для шаблона. Выберем здесь простой\nлист формата А4 -Blank A4.\nШаг 2. Место расположения и имя шаблона\nНа втором шаге нужно указать имя шаблона и выбрать место расположения файла шаблона в проекте.\nДалее выполняется настройка запроса для отчета:\nШаг 3. Выбор адаптера данных и настройка запроса для отчета\nНа шаге 3 нужно выбрать ранее созданный адаптер данных и ввести запрос. Здесь мы используем\nадаптерSynergy connectionи вводим текст запроса:\nНа следующем шаге на основе введенного запроса формируется список полей, доступных для\nиспользования в отчете:\nШаг 4. Настройка полей отчета\nДля того, чтобы использовать полученное в запросе поле в качестве поля отчета, перенесите\nэто поле в правую часть диалога. Кнопка>>добавит в правую часть все доступные поля:\nНастройка полей отчета\nДалее при необходимостм можно выбрать поля, по которым должна выполняться группировка данных.\nВ нашем случае группировка не требуется.\nПосле завершения создания нового шаблона вкладка с ним откроется в рабочей области:\nОкно составления отчета\nСлева во вкладкеOutlineрасполагается дерево элементов отчета, где в качестве корня выступает\nсам отчет. В правой части во вкладкеPropertiesбудут отображаться свойства элемента, выбранного\nв дереве элементов. ВкладкаPaletteпозволяет добавить в шаблон отчета новые компоненты.\nПосередине окна располагается рабочая область отчета. По умолчанию открыта вкладкаDesign-\nв ней отображена структура отчета, и именно в ней настраивается внешний вид отчета.\nВкладкаSourceсодержит полученный отчет в формате XML.\nВкладкаPreviewпредназначена для предварительного просмотра итогового отчета.\nРабочая область шаблона отчета состоит из следующих основных секций:\nTitle: заголовок отчета. Секция будет напечатана один раз на первой странице\nотчета.\nPage Header: заголовок страницы. Секция будет напечана в начале каждой страницы отчета.\nОбычно здесь размещается название отчета либо номер текущей страницы.\nColumn Header: название колонок отчета.\nDetail 1: тело отчета. Секция отличается от остальных тем, что она повторяется в отчете\nровно столько раз, сколько строк будет в полученном отчете.\nColumn Footer: нижняя подпись колонок.\nPage Footer: нижний колонтитул страницы. Секция будет напечатана в конце каждой страницы\nотчета. Аналогично с заголовком страницы, здесь могут быть размещены название отчета или номер\nтекущей страницы.\nSummary: нижняя подпись отчета. Секция будет напечатана один раз в конце отчета.\nЕсли какая-либо секция в отчете не нужна, то достаточно просто уменьшить ее размер до 0\nи не помещать в нее компонентов. Если необходимо, чтобы область начиналась на следующей\nстранице, следует вставить в конец предыдущей области компонент разрыва (Break).\nПри необходимости изменить запрос для отчета можно, выбрав в контекстном меню элемента отчета\n(во вкладкеOutline) пунктDataset and Query:\nЗапрос и поля отчета\nВ этом же диалоге можно, например, просмотреть превью данных полей:\nПревью данных отчета\nПоля, настроенные в запросе, отображаются в дереве компонентов отчета, в нодеFields. Для\nтого, чтобы добавить их в рабочую область отчета, перетащим мышкой полеlastnameв область\nданныхDetail 1. В результате в этой области появилось отображение поля с лейблом$F{lastname}, а в области заголовков столбцовColumn Headerавтоматически был добавлен\nзаголовокlastname:\nДобавление поля отчета\nИзменить текст заголовка можно, дважды кликнув по лейблу заголовка. Укажем там значениие «Фамилия»:\nПовторим эти действия, чтобы добавить в шаблон отчета полеfirstname:\nУменьшим высоту неиспользуемых блоковTitleиPage Headerдо минимума, а блоковColumn HeaderиDetail 1- до 30px. Следать это можно как мышкой, так и с помощью вкладкиProperties:\nДля лейблов заголовков полей включим специальное свойствоnet.sf.jasperreports.style.isBold. Для того,\nчтобы найти это свойство, нужно открыть все свойства компонента и отфильтровать их список, используя\nтекстisBold:\nТеперь можно сохранить полученный шаблон и проверить, как будет выглядеть отчет (вкладкаPreview):\nЧасто возникает необходимость формировать отчет с использованием данных, которые должен вводить\nпользователь. Например, пользователь должен указать условие поиска сотрудников. Для того, чтобы\nэто сделать, в отчете необходимо использовать параметры.\nПараметры настраиваются во вкладкеParametersокна редактирования запроса:\nПо умолчанию здесь отображены встроенные параметры JasperReports. Новый параметр добавляется\nкнопкойAdd, редактируется - в диалоге:\nНовый параметрparam1имеет строковый тип. При генерации отчета из Synergy в качестве отображаемого\nимени параметра будет использовано значение поляDescription.\nДобавленный параметр будет отображен вместе со встроенными параметрами, что может быть неудобно. Для того,\nчтобы увидеть только параметры текущего отчета, нужно нажать на кнопку:\nДля использования параметров нужно добавить их в запрос. Обращение к параметру в запросе производится в\nформате$P{<имя_параметра>}:\nВ результате в отчет будут включены пользователи, чья фамилия начинается на значение, введенное\nпользователем.\nСохраним изменения, нажав на кнопкуOK, и проверим работу параметра:\nЗапрос параметра, введено значениеadm\nРезультат - один подходящий пользователь\nЕсли нужно проверить работу отчета для другого значения параметра, нажмите на кнопку.\nПри соединении JasperReports с Synergy предусмотрены некоторые специальные параметры.\nЕсли название параметра (Parametername) содержит комбинацию символов как в коде\nпеременной, то для данной переменной применяется специальный редактор:\nusers_names: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны имена пользователей,\nперечисленные через запятую, в форматеФамилия Имя О.\nusers_names: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны имена пользователей,\nперечисленные через запятую, в форматеФамилия Имя О.\nusers_id: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны ID\nпользователей, перечисленные через запятую, в одинарных кавычках.ПримечаниеЭтот параметр предназначен только для выполнения запросов. Пример:SELECT lastname, firstname FROM users WHERE userid in ($P!{param})Обратите внимание, что параметр в запросе должен быть записан с!\nusers_id: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны ID\nпользователей, перечисленные через запятую, в одинарных кавычках.\nПримечание\nЭтот параметр предназначен только для выполнения запросов. Пример:\nОбратите внимание, что параметр в запросе должен быть записан с!\nuser_name: Имя выбранного пользователя\nuser_name: Имя выбранного пользователя\nuser_id: ID выбранного пользователя\nuser_id: ID выбранного пользователя\ndepartments_names: Названия выбранных подразделений, перечисленные через запятую\ndepartments_names: Названия выбранных подразделений, перечисленные через запятую\ndepartments_id: Идентификаторы выбранных подразделений, перечисленные через запятую\ndepartments_id: Идентификаторы выбранных подразделений, перечисленные через запятую\ndepartment_name: Название выбранного подразделения\ndepartment_name: Название выбранного подразделения\ndepartment_id: Идентификатор выбранного подразделения\ndepartment_id: Идентификатор выбранного подразделения\ncurrentuser_id: Идентификатор пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра быть точно равно коду\ncurrentuser_id: Идентификатор пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра быть точно равно коду\ncurrentuser_name: Полное имя пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра должно быть точно равно коду\ncurrentuser_name: Полное имя пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра должно быть точно равно коду\ncurrentdate: Дата формирования отчета. Данный параметр не отображается при заполнении отчета\ncurrentdate: Дата формирования отчета. Данный параметр не отображается при заполнении отчета\naction: Идентификатор выбранного проекта\naction: Идентификатор выбранного проекта\nactions: Идентификаторы выбранных проектов, перечисленные через запятую\nactions: Идентификаторы выбранных проектов, перечисленные через запятую\n_dictionary: В параметре необходимо указать код справочника и коды полей, которые должны быть\nиспользованы в качестве значения параметра (value) и его подписи, отображаемой в отчете\n(title), в формате:<dictionary_code>.<value_code>.<title_code>_dictionary.  Например:send_items.item_number.item_name_dictionary.Если справочник содержит поля с кодамиtitleиvalue, то значение и подпись элементов\nсправочника будут выделены автоматически, и в названии параметра достаточно указать только код\nсправочника в формате<dictionary_code>_dictionary\n_dictionary: В параметре необходимо указать код справочника и коды полей, которые должны быть\nиспользованы в качестве значения параметра (value) и его подписи, отображаемой в отчете\n(title), в формате:<dictionary_code>.<value_code>.<title_code>_dictionary.  Например:send_items.item_number.item_name_dictionary.\nЕсли справочник содержит поля с кодамиtitleиvalue, то значение и подпись элементов\nсправочника будут выделены автоматически, и в названии параметра достаточно указать только код\nсправочника в формате<dictionary_code>_dictionary\nДля того, чтобы параметр стал опциональным, необходимо добавить для него специальное свойство:\nОткрыть диалог свойств параметра:\nОткрыть диалог свойств параметра:\nОткрыть список свойств параметра (кнопка…в полеProperties):\nОткрыть список свойств параметра (кнопка…в полеProperties):\n3. Нажать на кнопку+и добавить новое свойствоkz.arta.synergy.reports.parameters.optionalс любым значением:\nНажмите на кнопкуFinish, чтобы применить новое свойство.\nЧтобы проверить значение опционального параметра в отчете, используется условие вида:\nТо есть если параметрparamне задан, его значение не учитывается (результат сравненияtrue).\nЕсли параметр задан, то он сравнивается с переменнойt.\nЕсли же параметр - это мультивыбор значения справочника, то условие имеет вид:\nТо есть если список значенийparam_dictionaryне имеет элементов, то условие считается верным,\nиначе - выполняется проверка, содержится ли (ключевое словоIN) значение поляtв значенияхparam_dictionary. Если необходимо проверить, что значение поля не содержится в списке значений\nпараметра, можно использовать ключевое словоNOTIN.\nКогда дизайн шаблона закончен, необходимо добавить его в Synergy, чтобы отчет могли формировать\nконечные пользователи. Для этого нужно:\nЭкспортировать файл шаблона отчетаjrxml:Во вкладкеProject Explorerв контекстном меню элементаusers.jrxmlвыберите пунктExport Files to…. Откроется диалог экспорта шаблона, в котором нужно выделить экспортируемый\nфайл и целевую папку:В диалоге выбран файлusers.jrxmlи указана папка, в которую нужно экспортировать этот файл\nЭкспортировать файл шаблона отчетаjrxml:\nВо вкладкеProject Explorerв контекстном меню элементаusers.jrxmlвыберите пунктExport Files to…. Откроется диалог экспорта шаблона, в котором нужно выделить экспортируемый\nфайл и целевую папку:\nВ диалоге выбран файлusers.jrxmlи указана папка, в которую нужно экспортировать этот файл\nВ приложении Synergy IDE создать новый пользовательский отчет:Выделите папку, в которой должен располагаться новый отчет, и выберите в меню пунктОбъект-Добавить-Пользовательский отчет. Откроется вкладка создания нового отчета:\nВ приложении Synergy IDE создать новый пользовательский отчет:\nВыделите папку, в которой должен располагаться новый отчет, и выберите в меню пунктОбъект-Добавить-Пользовательский отчет. Откроется вкладка создания нового отчета:\nЗаполнить сведения об отчете и приложить экспортированный файл шаблона отчетаjrxml:Итоговый формат отчета регурируется маской имени файла. В данном случае отчет будет формироваться\nв форматеpdf.Поскольку отчет работает на основе SQL-запроса, то в поле «Тип источника данных» выбран вариант\n«SQL соединение».\nЗаполнить сведения об отчете и приложить экспортированный файл шаблона отчетаjrxml:\nИтоговый формат отчета регурируется маской имени файла. В данном случае отчет будет формироваться\nв форматеpdf.\nПоскольку отчет работает на основе SQL-запроса, то в поле «Тип источника данных» выбран вариант\n«SQL соединение».\nПосле сохранения нового пользовательского очета пользователям будет доступна возможность скачивания\nотчета из клиентской части Synergy.",
    "Synergy поддерживает использование большого количестваметодов API, иJasperReportпозволяет\nиспользовать данные JSON, возвращаемые этими методами, в качестве источника данных для отчетов.\nРассмотрим работу с JSON на примере отчета, содержащего список подписей документа.\nВ первую очередь создадим адаптер данных для нового отчета. Для этого в мастере создания нового\nадаптера выберем типJSON File:\nНа следующем шаге нужно указать источник данных:\nУкажем имя адаптераsignlist, в качестве источника укажем запросrest/api/docflow/doc/sign_list.\nЭтот метод поUUIDдокумента возвращает список подписей для него. Описание метода приведено\nвсправочнике API.\nВ полеFile/URLуказан полный URL метода и значение параметраdocumentIDв формате:\nПримечание\nОбратите внимание, что в URL адаптера данных указываются фиксированные значения входных параметров\nметода. Эти значения будут использоваться только для дизайна и предпросмотра шаблона отчета. При\nнастройке пользовательского отчета в Synergy IDE параметры будут настроены дополнительно.\nПодсказка\nПолучить значение UUID документа можно из его URL в Synergy:\nНеобходимо включить опциюUse the report JSON expression when filling the report.\nДалее нужно перейти к дополнительным настройкам соединения (кнопкаOptions):\nЗдесь указываются логин и пароль пользователя, от имени которого выполняется метод. На вкладкеHTTP Headersнужно добавить параметр способа авторизацииAuthorizationсо значениемBasicMTox.\nПосле завершения настройки адаптера нажмитеFinish. Вкладка с созданным адаптером открылась в\nрабочей области, и в ней можно вывполнить проверку соединения кнопкойTest Connection:\nШаблон отчета, использующего данные JSON, создается точно так же, как и для работы с SQL.\nНа панели инструментов нажмите на кнопкуNew JasperReport:\nНа первом шаге мастера создания нового шаблона снова выберем вариантBlank A4.\nВторой шаг мастера позволяет указать расположение и имя файла шаблона отчета.\nНа третьем шаге необходимо выбрать адаптер данных.\nПосле выбора адаптера данных в левой части будут отображены все поля, которые возвращает\nвыбранный метод для входных данных, указанных в URL метода. На основе этих полей можно\nсоставить запрос к данным.\nПримечание\nДанные, возвращаемые методами API, имеют древовидную структуру. Запрос для JSON\nпишется через точку. Например, если нужно получить все ноды<node_name>, то в запросе\nнужно писать просто<node_name>. Если же у<node_name>есть вложенное полеinfo,\nи нужно получить именно его, то в запросе нужно указать<node_name>.info.\nОбратите внимание, что, в отличие от SQL-запроса, здесь нельзя выбрать несколько полей одного\nуровня вложенности. Для доступа ко всем возвращаемым нодам мы рекомедуем оставить поле запроса\nпустым: поля отчета будут настроены отдельно.\nСозданный шаблон отчета откроется во вкладке рабочей области:\nЭтап дизайна отчета не отличается от уже рассмотренного в разделеДизайн шаблона отчета.\nНастроим набор полей отчета. Для этого нужно в контекстном меню корневой ноды шаблона (вкладкаOutline) выбрать пунктDataset and Query:\nМеханика добавления полей в отчет из данных JSON несколько отличается от работы с SQL. Для того,\nчтобы использовать ноды JSON как поля отчета, нужно выделить их правой кнопкой мыши и выбрать пунктAdd node as field:\nВ качестве полей отчета будут использованы имя пользователя, его должность, дата подписания,\nрезультат и комментарий.\nВы можете воспользоваться функцией предпросмотра выбранных данных, переключившись на вкладкуData preview:\nДалее так же, как и в предыдущем случае, выполняется дизайн шаблона отчета: нужные поля из\nвкладкиOutlineнужно мышкой переместить в соответствующие области шаблона. При необходимости\nлейблы для полей можно переименовать, а размер областей - уменьшить:\nРезультат дизайна шаблона. В качестве заголовка отчета используется элементStatic Text,\nкоторый можно выбрать из вкладкиPalette.\nПосмотрим, что получилось, переключившись на вкладкуPreview:\nРезультат дизайна шаблона. Отображены данные, соответствующие документу, чейUUIDуказан\nв адаптере данных\nНа этом дизайн шаблона отчета закончен.\nВ URL метода или в теле запроса можно использовать подстановки вида{parameter_name}.\nПри соединении JasperReports с Synergy предусмотрены некоторые автоматические параметры,\nв частности:\nelementid— идентификатор текущего выбранного объекта. К примеру, если отчет формируется\nдля карточки документа, то значением параметра являетсяUUIDэтого документа, если для\nреестра -UUIDреестра, и так далее.\nuserid— идентификатор текущего пользователя\nactorid— идентификатор текущего пользователя\nВ нашем примере со списком подписей документа будем использовать параметрelementidдля\nполучения идентификатора выбранного документа. Для этого достаточно добавить в отчет параметр\nс таким именем:\nВ диалоге настройки запроса отчетаDataset and Query, вкладкаParameters, добавляется\nновый параметр с именемelementid. Дополнительной настройки параметра не требуется -\nсовпадения имени параметра со специальным параметром Synergy достаточно для корректного\nего использования.\nКак и в предыдущем случае, сначала нужно выполнить экспорт шаблона отчета. Для этого во вкладкеProject Explorerв контекстном меню элемента отчетаdoc_singlist.jrxmlвыберите пунктExport Files to…. В открывшемся диалоге нужно выделить экспортируемый файл и целевую папку:\nДальше в приложении Synergy IDE нужно создать новый пользовательский отчет:\nРассмотрим подробнее заполнение сведедений об отчете:\nв качестве модуля нужно указать значение «Карточка документа». Это означает, что отчет будет\nдоступен для карточки открытого документа\nв качестве модуля нужно указать значение «Карточка документа». Это означает, что отчет будет\nдоступен для карточки открытого документа\nформат, в котором будет формироваться отчет, регулируется с помощью маски отчета; в нашем случае\nиспользуется формат PDF\nформат, в котором будет формироваться отчет, регулируется с помощью маски отчета; в нашем случае\nиспользуется формат PDF\nприложен экспортированный файл отчетаdoc_singlist.jrxml\nприложен экспортированный файл отчетаdoc_singlist.jrxml\nтип источника данных: JSON\nтип источника данных: JSON\nURL источника данных: выбран тип метода GET, а URL метода введен в формате:http://<host>:<port>/Synergy/rest/api/docflow/doc/sign_list?documentID={elementid}ПримечаниеЗдесь специальный параметр{elementid}используется для получения идентификатора\nтого документа, карточка которого открыта в момент вызова отчета.\nURL источника данных: выбран тип метода GET, а URL метода введен в формате:\nhttp://<host>:<port>/Synergy/rest/api/docflow/doc/sign_list?documentID={elementid}\nПримечание\nЗдесь специальный параметр{elementid}используется для получения идентификатора\nтого документа, карточка которого открыта в момент вызова отчета.\nв поле «Авторизация» указаны логин и пароль пользователя, от имени которого будет выполняться\nметод, используемый в отчете.\nв поле «Авторизация» указаны логин и пароль пользователя, от имени которого будет выполняться\nметод, используемый в отчете.\nСохраним пользовательский отчет и проверим, как он работает, из клиентской части Synergy:\nВ Synergy создан документ, который подписывали разные сотрудники\nПереключимся на карточку документа и в списке отчетов выберем созданный отчет «Список подписей»\nОтчет скачивается в виде файла PDF, содержимое этого файла совпадает с настроенным при дизайне отчета\nПримечание\nЕсли в результате скачивается пустой файл, убедитесь, что в шаблоне отчета для лейблов\nиспользуется один из подрреживаемых шрифтов, например, Arial (свойство компонентаnet.sf.jasperreports.style.fontName):\nПоддерживаемые шрифты перечислены в импортированном проектеSynergyReports. Вот их список:\nArial\nTimes New Roman\nCourier New\nDejaVu Sans\nDejaVu Serif\nDejaVu Sans Mono\nSansSerif\nSerif\nMonospaced",
    "Пользовательские отчеты предоставляют разработчику возможность формировать\nи загружать произвольные отчеты на основе данных, содержащихся в БД системы\nили получаемых с помощью API.\nСформированный шаблон отчета можно загрузить в приложение Synergy IDE и\nи предоставить пользователям права на его использование.\nДля разработки шаблона отчета используетсяTIBCO Jaspersoft Studio.\nПримечание\nРабота с Jaspersoft Studio рассматривается на примере версии6.6.0.\nПодсказка\nВ этом разделе будут рассмотрены лишь некоторые возможности Jaspersoft Studio.\nПри работе с отчетами мы рекомендуем обращаться кофициальному руководству TIBCO.",
    "Конфигурация, необходимая для работы JaspersoftStudio:\nне менее 500 МБ пространства на жестком диске\nминимум 1 ГБ оперативной памяти, рекомендуемый размер - 2 ГБ\nподдерживаемые ОС:Windows 7/8: x86 и x64Linux: x86 и x64MacOS X: x64\nWindows 7/8: x86 и x64\nLinux: x86 и x64\nMacOS X: x64",
    "Дистрибутив Jaspersoft можно скачать поссылке.\nДля работы с Synergy необходимо добавить проект, содержащий необходимые\nбиблиотеки и поддерживаемые шрифты:\nСкачайте приложенныйархив с проектом, добавьте его в папкуjasperSoftStudio\n2. Запустите JasperStudio, в меню выберите пунктFile - Open Projects from File System,\nдалее нажмите на кнопкуArchiveи выберите скачанный архив.\nИмпортированный проект отображается во вкладкеProject Explorer:",
    "JasperStudio позволяет получать данные посредством SQL-запроса, из данныхjsonилиxml. Источник данных указывается вадаптере данных, соответствующем\nотчету.\nВ целом для создания пользовательского отчета нужно проделать такие шаги:\nСоздать адаптер данных\nНастроить поля отчета\nНастроить внешний вид отчета\nДобавить новый пользовательский отчет, используя полученный шаблон отчета\nАдаптер данных- это объект, регулирующий источник данных, их структуру и способ получения.\nАдаптер хранится в виде файлаXMLи доступен всем шаблонам отчетов текущего проекта.",
    "Использование SQL в запросе позволяет строить отчет на основнии данных, расположенных\nнепосредственно в БД Synergy. Описание структуры БД приводится вдокументации.\nРассмотрим простой отчет, который будет содержать список пользователей Synergy.\nНа панели инструментов нажмите на кнопкуNew data Adapter. Откроется мастер\nсоздания нового соединения:\nШаг 1: выбор расположения и имени для нового адаптера\nНа первом шаге необходимо указать имя и расположение нового адаптера.\nСледующим шагом создания адаптера является выбор типа соединения:\nШаг 1: выбор типа соединения\nДля работы с SQL необходимо указать тип соединенияDatabaseJDBCConnection.\nДалее необходимо указать настройки соединения:\nDatasource JDBC connection\nВведены следующие параметры соединения:\nЗдесь<hostname>:<mysql_port>- адрес и порт сервера, на котором расположен MySQL,\nили, как в случае с пробросом соединения через SSH (пример ниже), локальный хост\nи порт, куда был выполнен проброс.\nДалее указываются логин и пароль пользователя, имеющего доступ к БД.\nДля проверки соединения можно нажать на кнопкуTest. Если соединение с указанными\nпараметрами удалось установить, то будет отображено сообщение«Successful»\nЕсли же соединение установить не удалось, то будет отображено сообщение с текстом ошибки.\nСохраните новый адаптер, нажав на кнопкуFinish.\nЕсли требуется установить соединение с БД, расположенной на удаленном сервере,\nто предварительно необходимо сделать проброс соединения через SSH, выполнив команду:\nЗдесь3307- локальный порт, с которым будет устанавливать соединение JasperSoft,localhost- локальный хост,3306- удаленный порт (например, портmysql,\nзапущенного на удаленном сервере),user@remote-host.com- пользователь@удаленный хост.\nПримечание\nПримечания:\nЭту команду требуется выполнять после каждого перезапуска сервера.\nВремя отклика возрастает, поскольку добавляются накладные расходы на шифрование/расшифровывание.\nНа локальном сервере появляется уязвимость удаленного сервера, так как есть\nпрямой проброс соединения. Поэтому для порта3307следует заблокировать доступ извне\nчерезiptableили брандмауэр.\nДля создания нового шаблона отчета нужно вызвать контекстное меню элемента дерева (например,\nкорневого элементаSynergyReports) и выбрать пунктNew - Jasper Report. Откроется\nмастер создания нового шаблона.\nШаг 1. Выбор разметки для шаблона отчета\nПервым шагом этого мастера является выбор разметки для шаблона. Выберем здесь простой\nлист формата А4 -Blank A4.\nШаг 2. Место расположения и имя шаблона\nНа втором шаге нужно указать имя шаблона и выбрать место расположения файла шаблона в проекте.\nДалее выполняется настройка запроса для отчета:\nШаг 3. Выбор адаптера данных и настройка запроса для отчета\nНа шаге 3 нужно выбрать ранее созданный адаптер данных и ввести запрос. Здесь мы используем\nадаптерSynergy connectionи вводим текст запроса:\nНа следующем шаге на основе введенного запроса формируется список полей, доступных для\nиспользования в отчете:\nШаг 4. Настройка полей отчета\nДля того, чтобы использовать полученное в запросе поле в качестве поля отчета, перенесите\nэто поле в правую часть диалога. Кнопка>>добавит в правую часть все доступные поля:\nНастройка полей отчета\nДалее при необходимостм можно выбрать поля, по которым должна выполняться группировка данных.\nВ нашем случае группировка не требуется.\nПосле завершения создания нового шаблона вкладка с ним откроется в рабочей области:\nОкно составления отчета\nСлева во вкладкеOutlineрасполагается дерево элементов отчета, где в качестве корня выступает\nсам отчет. В правой части во вкладкеPropertiesбудут отображаться свойства элемента, выбранного\nв дереве элементов. ВкладкаPaletteпозволяет добавить в шаблон отчета новые компоненты.\nПосередине окна располагается рабочая область отчета. По умолчанию открыта вкладкаDesign-\nв ней отображена структура отчета, и именно в ней настраивается внешний вид отчета.\nВкладкаSourceсодержит полученный отчет в формате XML.\nВкладкаPreviewпредназначена для предварительного просмотра итогового отчета.\nРабочая область шаблона отчета состоит из следующих основных секций:\nTitle: заголовок отчета. Секция будет напечатана один раз на первой странице\nотчета.\nPage Header: заголовок страницы. Секция будет напечана в начале каждой страницы отчета.\nОбычно здесь размещается название отчета либо номер текущей страницы.\nColumn Header: название колонок отчета.\nDetail 1: тело отчета. Секция отличается от остальных тем, что она повторяется в отчете\nровно столько раз, сколько строк будет в полученном отчете.\nColumn Footer: нижняя подпись колонок.\nPage Footer: нижний колонтитул страницы. Секция будет напечатана в конце каждой страницы\nотчета. Аналогично с заголовком страницы, здесь могут быть размещены название отчета или номер\nтекущей страницы.\nSummary: нижняя подпись отчета. Секция будет напечатана один раз в конце отчета.\nЕсли какая-либо секция в отчете не нужна, то достаточно просто уменьшить ее размер до 0\nи не помещать в нее компонентов. Если необходимо, чтобы область начиналась на следующей\nстранице, следует вставить в конец предыдущей области компонент разрыва (Break).\nПри необходимости изменить запрос для отчета можно, выбрав в контекстном меню элемента отчета\n(во вкладкеOutline) пунктDataset and Query:\nЗапрос и поля отчета\nВ этом же диалоге можно, например, просмотреть превью данных полей:\nПревью данных отчета\nПоля, настроенные в запросе, отображаются в дереве компонентов отчета, в нодеFields. Для\nтого, чтобы добавить их в рабочую область отчета, перетащим мышкой полеlastnameв область\nданныхDetail 1. В результате в этой области появилось отображение поля с лейблом$F{lastname}, а в области заголовков столбцовColumn Headerавтоматически был добавлен\nзаголовокlastname:\nДобавление поля отчета\nИзменить текст заголовка можно, дважды кликнув по лейблу заголовка. Укажем там значениие «Фамилия»:\nПовторим эти действия, чтобы добавить в шаблон отчета полеfirstname:\nУменьшим высоту неиспользуемых блоковTitleиPage Headerдо минимума, а блоковColumn HeaderиDetail 1- до 30px. Следать это можно как мышкой, так и с помощью вкладкиProperties:\nДля лейблов заголовков полей включим специальное свойствоnet.sf.jasperreports.style.isBold. Для того,\nчтобы найти это свойство, нужно открыть все свойства компонента и отфильтровать их список, используя\nтекстisBold:\nТеперь можно сохранить полученный шаблон и проверить, как будет выглядеть отчет (вкладкаPreview):\nЧасто возникает необходимость формировать отчет с использованием данных, которые должен вводить\nпользователь. Например, пользователь должен указать условие поиска сотрудников. Для того, чтобы\nэто сделать, в отчете необходимо использовать параметры.\nПараметры настраиваются во вкладкеParametersокна редактирования запроса:\nПо умолчанию здесь отображены встроенные параметры JasperReports. Новый параметр добавляется\nкнопкойAdd, редактируется - в диалоге:\nНовый параметрparam1имеет строковый тип. При генерации отчета из Synergy в качестве отображаемого\nимени параметра будет использовано значение поляDescription.\nДобавленный параметр будет отображен вместе со встроенными параметрами, что может быть неудобно. Для того,\nчтобы увидеть только параметры текущего отчета, нужно нажать на кнопку:\nДля использования параметров нужно добавить их в запрос. Обращение к параметру в запросе производится в\nформате$P{<имя_параметра>}:\nВ результате в отчет будут включены пользователи, чья фамилия начинается на значение, введенное\nпользователем.\nСохраним изменения, нажав на кнопкуOK, и проверим работу параметра:\nЗапрос параметра, введено значениеadm\nРезультат - один подходящий пользователь\nЕсли нужно проверить работу отчета для другого значения параметра, нажмите на кнопку.\nПри соединении JasperReports с Synergy предусмотрены некоторые специальные параметры.\nЕсли название параметра (Parametername) содержит комбинацию символов как в коде\nпеременной, то для данной переменной применяется специальный редактор:\nusers_names: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны имена пользователей,\nперечисленные через запятую, в форматеФамилия Имя О.\nusers_names: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны имена пользователей,\nперечисленные через запятую, в форматеФамилия Имя О.\nusers_id: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны ID\nпользователей, перечисленные через запятую, в одинарных кавычках.ПримечаниеЭтот параметр предназначен только для выполнения запросов. Пример:SELECT lastname, firstname FROM users WHERE userid in ($P!{param})Обратите внимание, что параметр в запросе должен быть записан с!\nusers_id: Для параметра с данным кодом в названии будет предоставляться возможность\nвыбора нескольких пользователей. В значение параметра будут записаны ID\nпользователей, перечисленные через запятую, в одинарных кавычках.\nПримечание\nЭтот параметр предназначен только для выполнения запросов. Пример:\nОбратите внимание, что параметр в запросе должен быть записан с!\nuser_name: Имя выбранного пользователя\nuser_name: Имя выбранного пользователя\nuser_id: ID выбранного пользователя\nuser_id: ID выбранного пользователя\ndepartments_names: Названия выбранных подразделений, перечисленные через запятую\ndepartments_names: Названия выбранных подразделений, перечисленные через запятую\ndepartments_id: Идентификаторы выбранных подразделений, перечисленные через запятую\ndepartments_id: Идентификаторы выбранных подразделений, перечисленные через запятую\ndepartment_name: Название выбранного подразделения\ndepartment_name: Название выбранного подразделения\ndepartment_id: Идентификатор выбранного подразделения\ndepartment_id: Идентификатор выбранного подразделения\ncurrentuser_id: Идентификатор пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра быть точно равно коду\ncurrentuser_id: Идентификатор пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра быть точно равно коду\ncurrentuser_name: Полное имя пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра должно быть точно равно коду\ncurrentuser_name: Полное имя пользователя, который формирует отчет. Данный параметр не\nотображается при заполнении отчета. Название используемого параметра должно быть точно равно коду\ncurrentdate: Дата формирования отчета. Данный параметр не отображается при заполнении отчета\ncurrentdate: Дата формирования отчета. Данный параметр не отображается при заполнении отчета\naction: Идентификатор выбранного проекта\naction: Идентификатор выбранного проекта\nactions: Идентификаторы выбранных проектов, перечисленные через запятую\nactions: Идентификаторы выбранных проектов, перечисленные через запятую\n_dictionary: В параметре необходимо указать код справочника и коды полей, которые должны быть\nиспользованы в качестве значения параметра (value) и его подписи, отображаемой в отчете\n(title), в формате:<dictionary_code>.<value_code>.<title_code>_dictionary.  Например:send_items.item_number.item_name_dictionary.Если справочник содержит поля с кодамиtitleиvalue, то значение и подпись элементов\nсправочника будут выделены автоматически, и в названии параметра достаточно указать только код\nсправочника в формате<dictionary_code>_dictionary\n_dictionary: В параметре необходимо указать код справочника и коды полей, которые должны быть\nиспользованы в качестве значения параметра (value) и его подписи, отображаемой в отчете\n(title), в формате:<dictionary_code>.<value_code>.<title_code>_dictionary.  Например:send_items.item_number.item_name_dictionary.\nЕсли справочник содержит поля с кодамиtitleиvalue, то значение и подпись элементов\nсправочника будут выделены автоматически, и в названии параметра достаточно указать только код\nсправочника в формате<dictionary_code>_dictionary\nДля того, чтобы параметр стал опциональным, необходимо добавить для него специальное свойство:\nОткрыть диалог свойств параметра:\nОткрыть диалог свойств параметра:\nОткрыть список свойств параметра (кнопка…в полеProperties):\nОткрыть список свойств параметра (кнопка…в полеProperties):\n3. Нажать на кнопку+и добавить новое свойствоkz.arta.synergy.reports.parameters.optionalс любым значением:\nНажмите на кнопкуFinish, чтобы применить новое свойство.\nЧтобы проверить значение опционального параметра в отчете, используется условие вида:\nТо есть если параметрparamне задан, его значение не учитывается (результат сравненияtrue).\nЕсли параметр задан, то он сравнивается с переменнойt.\nЕсли же параметр - это мультивыбор значения справочника, то условие имеет вид:\nТо есть если список значенийparam_dictionaryне имеет элементов, то условие считается верным,\nиначе - выполняется проверка, содержится ли (ключевое словоIN) значение поляtв значенияхparam_dictionary. Если необходимо проверить, что значение поля не содержится в списке значений\nпараметра, можно использовать ключевое словоNOTIN.\nКогда дизайн шаблона закончен, необходимо добавить его в Synergy, чтобы отчет могли формировать\nконечные пользователи. Для этого нужно:\nЭкспортировать файл шаблона отчетаjrxml:Во вкладкеProject Explorerв контекстном меню элементаusers.jrxmlвыберите пунктExport Files to…. Откроется диалог экспорта шаблона, в котором нужно выделить экспортируемый\nфайл и целевую папку:В диалоге выбран файлusers.jrxmlи указана папка, в которую нужно экспортировать этот файл\nЭкспортировать файл шаблона отчетаjrxml:\nВо вкладкеProject Explorerв контекстном меню элементаusers.jrxmlвыберите пунктExport Files to…. Откроется диалог экспорта шаблона, в котором нужно выделить экспортируемый\nфайл и целевую папку:\nВ диалоге выбран файлusers.jrxmlи указана папка, в которую нужно экспортировать этот файл\nВ приложении Synergy IDE создать новый пользовательский отчет:Выделите папку, в которой должен располагаться новый отчет, и выберите в меню пунктОбъект-Добавить-Пользовательский отчет. Откроется вкладка создания нового отчета:\nВ приложении Synergy IDE создать новый пользовательский отчет:\nВыделите папку, в которой должен располагаться новый отчет, и выберите в меню пунктОбъект-Добавить-Пользовательский отчет. Откроется вкладка создания нового отчета:\nЗаполнить сведения об отчете и приложить экспортированный файл шаблона отчетаjrxml:Итоговый формат отчета регурируется маской имени файла. В данном случае отчет будет формироваться\nв форматеpdf.Поскольку отчет работает на основе SQL-запроса, то в поле «Тип источника данных» выбран вариант\n«SQL соединение».\nЗаполнить сведения об отчете и приложить экспортированный файл шаблона отчетаjrxml:\nИтоговый формат отчета регурируется маской имени файла. В данном случае отчет будет формироваться\nв форматеpdf.\nПоскольку отчет работает на основе SQL-запроса, то в поле «Тип источника данных» выбран вариант\n«SQL соединение».\nПосле сохранения нового пользовательского очета пользователям будет доступна возможность скачивания\nотчета из клиентской части Synergy.",
    "Synergy поддерживает использование большого количестваметодов API, иJasperReportпозволяет\nиспользовать данные JSON, возвращаемые этими методами, в качестве источника данных для отчетов.\nРассмотрим работу с JSON на примере отчета, содержащего список подписей документа.\nВ первую очередь создадим адаптер данных для нового отчета. Для этого в мастере создания нового\nадаптера выберем типJSON File:\nНа следующем шаге нужно указать источник данных:\nУкажем имя адаптераsignlist, в качестве источника укажем запросrest/api/docflow/doc/sign_list.\nЭтот метод поUUIDдокумента возвращает список подписей для него. Описание метода приведено\nвсправочнике API.\nВ полеFile/URLуказан полный URL метода и значение параметраdocumentIDв формате:\nПримечание\nОбратите внимание, что в URL адаптера данных указываются фиксированные значения входных параметров\nметода. Эти значения будут использоваться только для дизайна и предпросмотра шаблона отчета. При\nнастройке пользовательского отчета в Synergy IDE параметры будут настроены дополнительно.\nПодсказка\nПолучить значение UUID документа можно из его URL в Synergy:\nНеобходимо включить опциюUse the report JSON expression when filling the report.\nДалее нужно перейти к дополнительным настройкам соединения (кнопкаOptions):\nЗдесь указываются логин и пароль пользователя, от имени которого выполняется метод. На вкладкеHTTP Headersнужно добавить параметр способа авторизацииAuthorizationсо значениемBasicMTox.\nПосле завершения настройки адаптера нажмитеFinish. Вкладка с созданным адаптером открылась в\nрабочей области, и в ней можно вывполнить проверку соединения кнопкойTest Connection:\nШаблон отчета, использующего данные JSON, создается точно так же, как и для работы с SQL.\nНа панели инструментов нажмите на кнопкуNew JasperReport:\nНа первом шаге мастера создания нового шаблона снова выберем вариантBlank A4.\nВторой шаг мастера позволяет указать расположение и имя файла шаблона отчета.\nНа третьем шаге необходимо выбрать адаптер данных.\nПосле выбора адаптера данных в левой части будут отображены все поля, которые возвращает\nвыбранный метод для входных данных, указанных в URL метода. На основе этих полей можно\nсоставить запрос к данным.\nПримечание\nДанные, возвращаемые методами API, имеют древовидную структуру. Запрос для JSON\nпишется через точку. Например, если нужно получить все ноды<node_name>, то в запросе\nнужно писать просто<node_name>. Если же у<node_name>есть вложенное полеinfo,\nи нужно получить именно его, то в запросе нужно указать<node_name>.info.\nОбратите внимание, что, в отличие от SQL-запроса, здесь нельзя выбрать несколько полей одного\nуровня вложенности. Для доступа ко всем возвращаемым нодам мы рекомедуем оставить поле запроса\nпустым: поля отчета будут настроены отдельно.\nСозданный шаблон отчета откроется во вкладке рабочей области:\nЭтап дизайна отчета не отличается от уже рассмотренного в разделеДизайн шаблона отчета.\nНастроим набор полей отчета. Для этого нужно в контекстном меню корневой ноды шаблона (вкладкаOutline) выбрать пунктDataset and Query:\nМеханика добавления полей в отчет из данных JSON несколько отличается от работы с SQL. Для того,\nчтобы использовать ноды JSON как поля отчета, нужно выделить их правой кнопкой мыши и выбрать пунктAdd node as field:\nВ качестве полей отчета будут использованы имя пользователя, его должность, дата подписания,\nрезультат и комментарий.\nВы можете воспользоваться функцией предпросмотра выбранных данных, переключившись на вкладкуData preview:\nДалее так же, как и в предыдущем случае, выполняется дизайн шаблона отчета: нужные поля из\nвкладкиOutlineнужно мышкой переместить в соответствующие области шаблона. При необходимости\nлейблы для полей можно переименовать, а размер областей - уменьшить:\nРезультат дизайна шаблона. В качестве заголовка отчета используется элементStatic Text,\nкоторый можно выбрать из вкладкиPalette.\nПосмотрим, что получилось, переключившись на вкладкуPreview:\nРезультат дизайна шаблона. Отображены данные, соответствующие документу, чейUUIDуказан\nв адаптере данных\nНа этом дизайн шаблона отчета закончен.\nВ URL метода или в теле запроса можно использовать подстановки вида{parameter_name}.\nПри соединении JasperReports с Synergy предусмотрены некоторые автоматические параметры,\nв частности:\nelementid— идентификатор текущего выбранного объекта. К примеру, если отчет формируется\nдля карточки документа, то значением параметра являетсяUUIDэтого документа, если для\nреестра -UUIDреестра, и так далее.\nuserid— идентификатор текущего пользователя\nactorid— идентификатор текущего пользователя\nВ нашем примере со списком подписей документа будем использовать параметрelementidдля\nполучения идентификатора выбранного документа. Для этого достаточно добавить в отчет параметр\nс таким именем:\nВ диалоге настройки запроса отчетаDataset and Query, вкладкаParameters, добавляется\nновый параметр с именемelementid. Дополнительной настройки параметра не требуется -\nсовпадения имени параметра со специальным параметром Synergy достаточно для корректного\nего использования.\nКак и в предыдущем случае, сначала нужно выполнить экспорт шаблона отчета. Для этого во вкладкеProject Explorerв контекстном меню элемента отчетаdoc_singlist.jrxmlвыберите пунктExport Files to…. В открывшемся диалоге нужно выделить экспортируемый файл и целевую папку:\nДальше в приложении Synergy IDE нужно создать новый пользовательский отчет:\nРассмотрим подробнее заполнение сведедений об отчете:\nв качестве модуля нужно указать значение «Карточка документа». Это означает, что отчет будет\nдоступен для карточки открытого документа\nв качестве модуля нужно указать значение «Карточка документа». Это означает, что отчет будет\nдоступен для карточки открытого документа\nформат, в котором будет формироваться отчет, регулируется с помощью маски отчета; в нашем случае\nиспользуется формат PDF\nформат, в котором будет формироваться отчет, регулируется с помощью маски отчета; в нашем случае\nиспользуется формат PDF\nприложен экспортированный файл отчетаdoc_singlist.jrxml\nприложен экспортированный файл отчетаdoc_singlist.jrxml\nтип источника данных: JSON\nтип источника данных: JSON\nURL источника данных: выбран тип метода GET, а URL метода введен в формате:http://<host>:<port>/Synergy/rest/api/docflow/doc/sign_list?documentID={elementid}ПримечаниеЗдесь специальный параметр{elementid}используется для получения идентификатора\nтого документа, карточка которого открыта в момент вызова отчета.\nURL источника данных: выбран тип метода GET, а URL метода введен в формате:\nhttp://<host>:<port>/Synergy/rest/api/docflow/doc/sign_list?documentID={elementid}\nПримечание\nЗдесь специальный параметр{elementid}используется для получения идентификатора\nтого документа, карточка которого открыта в момент вызова отчета.\nв поле «Авторизация» указаны логин и пароль пользователя, от имени которого будет выполняться\nметод, используемый в отчете.\nв поле «Авторизация» указаны логин и пароль пользователя, от имени которого будет выполняться\nметод, используемый в отчете.\nСохраним пользовательский отчет и проверим, как он работает, из клиентской части Synergy:\nВ Synergy создан документ, который подписывали разные сотрудники\nПереключимся на карточку документа и в списке отчетов выберем созданный отчет «Список подписей»\nОтчет скачивается в виде файла PDF, содержимое этого файла совпадает с настроенным при дизайне отчета\nПримечание\nЕсли в результате скачивается пустой файл, убедитесь, что в шаблоне отчета для лейблов\nиспользуется один из подрреживаемых шрифтов, например, Arial (свойство компонентаnet.sf.jasperreports.style.fontName):\nПоддерживаемые шрифты перечислены в импортированном проектеSynergyReports. Вот их список:\nArial\nTimes New Roman\nCourier New\nDejaVu Sans\nDejaVu Serif\nDejaVu Sans Mono\nSansSerif\nSerif\nMonospaced",
    "Существует два основных подхода для интеграции с Synergy:\nПрямая интеграция — интеграционные модули разрабатываются\nс использованием API Synergy и интегрируемых систем.\nСинхронизация данных между системами и координация обмена между ними\nостаётся за разработчиком интеграционного модуля\nСобытийная интеграция — когда какая-либо из подсистем Synergy\nгенерирует различные события, связанные с какими-либо данными.\nОбработчики этих событий (на стороне Synergy) при необходимости\nпреобразовывают данные событий и передают их интегрируемой системе\nчерез какой-либо транспортный уровень",
    "ARTA Synergy предоставляет API для доступа к своим функциям\nс помощью rest сервисов. Описание методов REST API можно\nнайти вданном разделе.\nАвторизация для всех методов API —BasicHTTP.",
    "Под «событием» мы будем подразумевать сообщение о каком-либо изменении\nв ARTA Synergy, содержащее тип события\nи минимально необходимые для получения связанной с событием информации\nлибо воздействия на Synergy данные. Обработчик события (или событий) —\nпрограммный модуль, читающий сообщения о событиях изJMSQueueилиJMSTopicи осуществляющий, при необходимости, доступ к экземпляру Synergy,\nсгенерировавшему сообщение, с помощью API Synergy.\nОбработчик событий является отдельным от ARTA Synergy приложением,\nкоторое может работать как на том же сервере приложений,\nчто и ARTA Synergy, так и на удалённом.\nКроме этого, обработчик события может иметь собственные конфигурационные файлы,\nнеобходимые для реализации целевого назначения.\nОбработчик событий может обрабатывать как конкретное событие\n(например,event.registers.formdata.add),\nтак и класс событий (например,event.registers.*).\nОбработка события может происходить в 3 этапа:\nПолучение события\nПолучение и преобразование необходимых обработчику данных\nПередача сформированного пакета данных далее (опционально)\nARTA Synergy генерирует событие в случае,\nесли для этого события настроены обработчики.\nОбработчики событий настраиваются в конфигурационном файле${jboss.home}/standalone/configuration/arta/api-observation-configuration.xml.\nПримечание\nПри установке Synergy файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xmlпо умолчанию не создается.\nСоздаете файлapi-observation-configuration.xmlв директории{$jboss.home}/standalone/configuration/arta/с содержимым:\nУказываете владельца файла:\nЗатем можете добавлять листенеры в файл.\nСообщение, помещаемое в очередьJMS,\nпредставляет собой экземплярjavax.jms.TextMessage.\nТело сообщения зависит от типа события,\nего описание можно посмотреть ниже среди описаний типов событий.\nКаждое событие содержит свойствоapi_event, указывающее на тип события,\nвызвавшего его (содержимое тега<event>event.registers.formdata.add</event>в конфигурационном файле).\nНапример:\nВ этом примере настроены обработчики:\njava:jboss/queues/Synergy/UsersQueueдля всех событий классаevent.users.*, т.е. всех событий, связанных с пользователями:event.users.account.change,event.users.formdata.change,event.users.account.addи т.д.\njava:jboss/queues/Synergy/RegisterCreateDocQueueдля события добавления записи реестраevent.registers.formdata.add.\nРассмотрим, например, код обработчика очередиUsersQueue:\nВ проектеblocking-process-templateреализован пример обработчика очереди.\nНиже описаны типы событий, которые могут быть сгенерированы ARTA Synergy.\nДля события[event.orgstructure.department.formdata.change]-\nидентификатор подразделения, для события[event.orgstructure.position.formdata.change]- идентификатор\nдолжности, для события[event.users.formdata.change]- идентификатор\nпользователя будет передаваться как основной параметр, остальные как\nсвойства. Получить их можно следующим образом:\n6.2.1. События пользователей\n6.2.2. События должностей\n6.2.3. События подразделений\n6.2.4. События реестров\n6.2.5. События адресной книги\n6.2.6. События работ\n6.2.7. События по документам\n6.2.8. События по формам\n6.2.9. События комментариев\n6.2.10. События администрирования\n6.2.11. Генерация произвольных событий\n6.2.12. Клиентские события Synergy\n6.2.13. Дополнительные атрибуты html-элементов",
    "Блокирующий процесс предназначен для того,\nчтобы предоставить возможность\nв маршрут активации/изменения/удаления реестра\nвставить асинхронный вызов внешнего модуля.\nОсновное отличие блокирующего процесса от событий реестра\nзаключается в том, что:\nпри использовании блокирующего процесса маршрут реестра\nдожидается ответа о результате выполнения операции внешним модулем\nблокирующий процесс может завершиться положительно или отрицательно,\nчто повлияет на дальнейшую работу маршрута\n(Если блокирующий процесс завершится отрицательно —\nпроцесс остановится, если положительно — то продолжит работу дальше)\nМодуль, реализующий блокирующий процесс, должен представлять собой отдельное приложение,\nзадеплоенное на jboss в соответствии с правилами,\nописанными в разделеКак задеплоить интеграционное приложение.\nЗапускается код модуля блокирующего процесса через очередь.\nПри старте этапа маршрута, содержащего блокирующий процесс,\nв очередь добавляется сообщение, которое должен обработать модуль.",
    "Для того, чтобы добавить блокирующий процесс,\nнеобходимо выполнить следующие действия:\nДобавить процесс с в маршрут реестра в конфигураторе:Название процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nДобавить процесс с в маршрут реестра в конфигураторе:\nНазвание процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:<jms-queuename=\"ExampleQueue\"><entryname=\"java:jboss/queues/Integration/ExampleQueue\"/><durable>true</durable></jms-queue>\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:<listener><queue>java:jboss/queues/Integration/ExampleQueue</queue><event>event.blocking.example</event></listener>\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:\nОбратите внимание, что название блокирующего процесса,\nуказанное в маршруте в конфигураторе должно быть\nравно значению тега в конфигурационном файлеapi-observation-configuration.xml(в данном примере:event.blocking.example)\nи название очереди должно совпадать со значением тегаqueueконфигурационного файлаapi-observation-configuration.xml(в данном примере:java:jboss/queues/Integration/ExampleQueue)\nСообщение, передаваемое в очередь, является экземпляромTextMessage.\nСодержимым сообщения является объект JSON с полями:\ndataUUID — идентификатор данных по форме записи реестра\nexecutionID — идентификатор блокирующего процесса\ndocumentID — идентификатор документа реестра\nПосле того, как модуль обратится к внешней системе\nи выполнит необходимые действия, он должен вызвать метод API Synergy\nдля того, чтобы возвратить результат выполнения процесса и продолжить работу маршрута.\nДля того, чтобы это сделать, необходимо вызвать метод APIrest/api/processes/signal.\nПримечание\nСигнал блокирующему процессу для его разблокировки/блокировки\nнужно отправлять после того, как этот процесс был запущен, то есть после того как\nтранзакция с запуском процесса была завершена. Для этого, перед отправкой сигнала,\nпроверяйте на наличие такого процесса в БД. В противном случае, блокирующий процесс\nможет завершиться в транзакции, но в маршруте нет.\nВ примере кода ниже разблокировка маршрута осуществляется в методеonMessage.\nЕсли время выполнения действия значительно или зависит от внешних факторов\n(например, доступность интегрируемой системы,\nили необходимость ввода пользователем данных в интегрируемой системе),\nто разблокировка маршрута может произойти позже,\nв любой другой момент времени из другого метода,\nа сам метод onMessage должен завершиться без ошибок, «запомнив» переданные параметры.",
    "Цель данного вида интеграции — дать возможность повлиять на\nзапуск стандартного процесса и, при необходимости, прервать его.\nСтандартная функциональность платформы ARTA Synergy дает возможность запретить\nотправку документов на согласование, утверждение, если количество уровней\nоргструктуры между отправителем и получателем превышает некоторое\nнастроенное значение. Но в некоторых компаниях существуют более сложные\nправила, ограничивающие возможность отправки документов/работ. В этих\nслучаях необходима разработка данного обработчика.\nОбработчик может быть применён к процессам:\n«работа» (assignment-single)\n«согласование» (agreement-single)\n«утверждение» (approval-single)\n«ознакомление» (acquaintance-single)\n«отправка документа» (send-document)\n«общий процесс при запуске по формам» (common-process-by-form)\n«отправка документа по форме» (send-document-by-form)\nОбработчик представляет собой Java-класс, реализующий интерфейс\nkz.arta.synergy.integration.api.bp.StartHandlerIF\nДанный интерфейс находится в библиотекеintegration-api.jar,\nкоторую можно найти в установленном экземпляре ARTA Synergy в директории/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nИнтерфейс содержит два метода:\nmakeDecision()— проверяет возможно ли выполнение процесса\ngetResolution()— возвращает текст, который должен быть записан в ход\nисполнения\nБолее подробную информацию о полях методов можно посмотреть в javadoc\nк этим методам, которые доступны вintegration-api.jar(библиотека\nсодержит и скомпилированные классы, и исходный код).\nУстановка обработчика для процесса осуществляется с помощью\nконфигурационного файла${jboss.server.config.dir}/arta/process-handlers-configuration.xml,\nимеющего следующий формат:\nОбработчики выполняются последовательно до тех пор, пока методmakeDecision()одного из них не вернетfalse, после этого процесс\nпрерывается.\nБиблиотеку, содержащую обработчик необходимо скопировать в папку/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nПосле копирования библиотеки обработчика и изменения файлаprocess-handlers-configuration.xmlнеобходимо перезапустить JBoss.\nВнимание\nПроцессcommon-process-by-formзапускает процессыagreement-single,approval-single,acquaintance-single,assignment-single(подпроцессы). Поэтому, если обработчик будет\nзапрещать выполнение подпроцесса и при этом разрешать выполнение процессаcommon-process-by-form, то подпроцессы все равно будут прерваны.\nАналогично, если выполнениеcommon-process-by-formразрешено, а\nвыполнение подпроцесса запрещено, подпроцессы будут прерваны.",
    "С использованием этого способа интеграции был реализован внешний модуль,\nограничивающий перепоручение и отправку каких-либо работ на согласование\nпользователям определенных групп.\nДля установки внешнего модуля из репозитория необходимо установить пакетarta-synergy-ext-sendcontrol.\nДалее на остановленном JBoss в конфигурационном файле${jboss.server.config.dir}/arta/process-handlers-configuration.xmlнеобходимо прописать следующие обработчики процесса:\nУстановка групп (каким группам пользователей Synergy) разрешать либо\nблокировать процессы осуществляется с помощью конфигурационного файла${jboss.server.config.dir}/arta/ext/send-control.xml. Пример настройки:",
    "REST API ARTA Synergy доступно только авторизованным пользователям.\nТип авторизации —BASICHTTP.\nМетоды API выполняются от имени того пользователя,\nкоторый авторизован. Имеются следующие типы авторизации:",
    "Авторизация пользователя по его логину и паролю приемлема в тех случаях,\nкогда приложение может знать текущий логин и пароль пользователя, например:\nПриложение предоставляет альтернативный интерфейс\nк некоторым модулям Synergy\n(мобильное приложение, десктопный клиент для хранилища)\nПриложение представляет собойserver-sideутилиту для синхронизации,\nдля которого создан выделенный пользователь,\nи его логин и пароль хранятся в конфигурационном файле на сервере.\nДля реализации данного типа авторизации надо передать в запросе заголовокAuthorizationсо значением:\nНапример:\nПример кода на JAVA:\nПример кода на JavaScript (jQuery):\nПример кода на PHP:",
    "Сессионная авторизации используется для встроенных WEB-модулей.\nПри cессионной авторизации также используется тип —BASICHTTP,\nно в качестве логина пользователя необходимо использовать\nзначение$sessionи в качестве пароля —\nполученное значениеsso_hash.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:\nПолучить значениеsso_hashавторизованного пользователя можно\nследующими способами:\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.Пример кода на JavaScript (jQuery):functiongetURLParameter(name){returndecodeURIComponent((newRegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[null,''])[1].replace(/\\+/g,'%20'))||null;}varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+getURLParameter('sso_hash')))}}$.ajax(settings).done(function(response){console.log(response);});\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.\nПример кода на JavaScript (jQuery):\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:{\"id\":\"Идентификатор текущего пользователя\",\"sso_hash\":\"hash-сумма для идентификации пользователя\",\"surname\":\"Фамилия текущего пользователя\",\"name\":\"Имя текущего пользователя\",\"patronymic\":\"Отчество текущего пользователя\"}Пример кода на JavaScript (jQuery):varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+$CURRENT_USER.sso_hash))}}$.ajax(settings).done(function(response){console.log(response);});ПримечаниеДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:\nПример кода на JavaScript (jQuery):\nПримечание\nДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.",
    "Модуль, который хочет авторизоваться от имени какого-либо пользователя таким способом,\nдолжен сгенерировать для него ключевую пару,\nобеспечив сохранность закрытого ключа.\nЗатем модуль сохраняет получивший открытый ключ для пользователя в Synergy,\nиспользуя следующий вызов API:\nЭтот вызов назначает ключ тому пользователю, от имени которого выполняется.\nПараметрuser_token_expire_intervalрегулирует интервал устаревания ключей авторизации.\nПример настройки интервала:\nПримечание\nИнтервал устаревания ключа указывается в минутах. Значение по умолчанию0, то есть если ранее для\nданного пользователя был сгенерирован другой ключ, то предыдущий автоматически становится недействительным.\nСоздать ключ можно только для существующего WEB-модуля,\nтак как для этого требуется идентификатор приложения.\nСовет\nЕсли у вас нет необходимости разрабатывать WEB модуль,\nно есть необходимость в использовании авторизации по ключам,\nможно добавить внешний модуль и отключить его использование\nв административном приложении SynergyAdmin для всех элементов оргструктуры.\nИспользование этого ключа для авторизации аналогично использованию сессионного ключа.\nТип авторизацииBasicHTTP,\nв качестве логина пользователя надо использовать строку$key,\nв качестве пароля — полученный с помощью API ключ.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:",
    "Web-приложение внешнего модуля открывается\nвiframeв окне основного приложения.\nПри этом рабочая область внешнего модуля\nзанимает всю область страницы, кроме панели меню и панели задач:\nВнешний WEB-модуль\nДля добавления нового модуля нужно перейти в\nКонфигуратор ‣ Настройки системы ‣ Управление модулями ‣ Внешние модули\nи нажать на кнопку «Добавить».\nВнешние модули\nВ открывшемся окне нужно заполнить следующие поля:\n«Название»- название модуля в соответствующем интерфейсе.\n«Название»- название модуля в соответствующем интерфейсе.\n«Код»- поле должно содержать уникальное значение.\n«Код»- поле должно содержать уникальное значение.\n«Адрес приложения»- поле для ввода URL.\n«Адрес приложения»- поле для ввода URL.\n«Описание модуля»- поле для описания данного модуля.\n«Описание модуля»- поле для описания данного модуля.\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.Добавление нового внешнего модуля\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.\nДобавление нового внешнего модуля\nПодсказка\nДобавить внешний web-модуль можно с помощью SQL-запроса\nв БДsynergy.outer_modules, вставив запись со следующими полями:\nid— идентификатор модуля, должен совпадать с идентификаторомвашего проекта в репозитории проектов\nnameru,namekz,nameen— название модуля на русском,\nказахском и английском языках соответственно\nurl— адрес приложения\ndescription— описание модуля\nactive— активен ли модуль, 1/0.\nДля реализации механизмаSSOприложений,\nARTA Synergy при загрузке внешнего web-модуля будет в строку URL\nдобавлять три параметра:\nlocale— локаль авторизованного пользователя\nsso_hash— hash-сумма для идентификации пользователя.\nhost— адрес, с которого загружено приложение Synergy\nНапример, если URL приложения\nто при обращении к модулю будет вызываться\nИнтегрированный модуль должен будет будет получить из URL\nпараметрsso_hashи запросить по REST API у ARTA Synergy\nинформацию об авторизованном пользователе (идентификатор, имя).\nЕсли метод REST API возвращает информацию о пользователе,\nэто подтверждает, что данный пользователь\nдействительно авторизован с данного хоста, в данном браузере.\nДалее строкаsso_hashможет быть использована дляСессионная авторизацияи вызова REST API Arta Synergy.\nВ ARTA Synergy реализована возможность обращения к ее модулям по относительной ссылке.\nТакая же возможность существует для внешних web-модулей. Переход по ссылке вида:\n#submodule=outer&outerModuleID='код_модуля'&прочие_параметры_по_желанию_модуля\nактивирует в Synergy заданный модуль и передаст ему заданные в url-e параметры\n(параметрыlocale,sso_hash,hostтакже будут переданы,\nнесмотря на то, что они отсутствуют в ссылке).\nЧасто возникает необходимость в этой ссылке передать ссылку на текущий документ.\nДля этого можно добавить в ссылку параметр,\nзначение которого будет равно${docID}—\nэта строка в web-интерфейсе проигрывателя форм Synergy\nбудет заменена на идентификатор данного документа.",
    "В бизнес-приложениях на базе Synergy может возникнуть необходимость работы из\nвнешних систем с формами Synergy. В этом случае можно использовать внешний проигрыватель форм.\nПроигрыватель форм - это инструмент, который даёт возможность работать с формами,\nсозданными и используемыми в Synergy, а также выполняет скрипты. При использовании\nво внешней системе проигрыватель позволяет:\nотображать и редактировать формы Synergy;\nнастраивать произвольный вид формы и ее компонентов, создавать новые компоненты;\nавтоматически заполнять поля формы данными из внешней системы;\nобеспечивать обратную связь от проигрывателя к серверу, используя механизм событий;\nобрабатывать наступившие события.\nПримечание\nПроигрыватель форм запускается на стороне клиента, поэтому все события\nи скрипты срабатывают только при открытом проигрывателе.",
    "Для подключения проигрывателя на страницу необходимо добавить код в разделhead:<script>FORM_PLAYER_URL_PREFIX = \"http://127.0.0.1:8080/Synergy/\";<!--служебная переменная для корректной работы компонента \"HTD-редактор\"--></script><linkrel=\"stylesheet\"href=\"http://127.0.0.1:8080/Synergy/js/form.player.css\"/><!--стандартный стиль компонентов формы--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/vendor.js\"type=\"text/javascript\"></script><!--ссылка на сторонние библиотеки--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/form.player.js\"type=\"text/javascript\"></script><!--ссылка на проигрыватель форм-->и вставить элемент для размещения проигрывателя в тело страницы:<divid=\"form_player_container\"><divid=\"form_player_div\"></div></div>\nДля подключения проигрывателя на страницу необходимо добавить код в разделhead:\nи вставить элемент для размещения проигрывателя в тело страницы:\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";//ссылка на экземпляр SynergyСоздание объекта проигрывателя выглядит следующим образом:'use strict';AS.OPTIONS.locale=\"ru\";AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";varportal={player:null,/*** очистить текущий проигрыватель форм*/clearPlayer:function(){if(portal.player){portal.player.destroy();}},/*** добавить новый проигрыватель форм*/createPlayer:function(formCode){portal.clearPlayer();portal.player=AS.FORMS.createPlayer();portal.player.showFormByCode(formCode);portal.player.view.appendTo($('#form_player_div'));}};$(document).ready(function(){AS.OPTIONS.login=\"login\";AS.OPTIONS.password=\"password\";portal.createPlayer(\"formCode\");});\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:\nСоздание объекта проигрывателя выглядит следующим образом:\nСм. также документацию поСкриптинг в формах.",
    "В данном разделе описываются основные примеры использования внешнего\nпроигрывателя форм. Каждый пример отражает одно из базовых требований\nк внешнему проигрывателю и содержит:\nописание примера;\nреализованный пример внешнего проигрывателя форм, встроенного во внешний портал (в данном случае - в портал документации);\nа также исходные коды JavaScript и CSS этих примеров.\nПримеры использования внешнего проигрывателя форм:\n6.7.2.1. Вариант 1. Отображение проигрывателя, встроенного во внешний портал\n6.7.2.2. Вариант 2. Изменение вида отображения формы согласно стилю портала (CSS)\n6.7.2.3. Вариант 3. Автозаполнение данных формы из внешнего портала\n6.7.2.4. Вариант 4. Дополнительная валидация формы\n6.7.2.5. Вариант 5. Создание нового компонента\n6.7.2.6. Вариант 6. Предварительное заполнение данных формы внешним порталом\n6.7.2.7. Вариант 7. Изменение компонента формы\n6.7.2.8. Вариант 8. Авторизация во внешнем проигрывателе",
    "Ссылки на модули и различные объекты Synergy\nможно использовать как внутри основного web-приложения\n(в этом случае предпочтительно использовать относительные\nссылки, чтобы не перезагружать страницу), так и во внешних\nсистемах.\nОбщий вид ссылок:\nгде\nhost- доменное имя или ip-адрес сервера Synergy\nport- порт\nApplication:Synergy- основное приложениеConfigurator- КонфигураторSynergyAdmin- административное приложение\nSynergy- основное приложение\nConfigurator- Конфигуратор\nSynergyAdmin- административное приложение\nparam1,param2- параметры абсолютной ссылки\nparam3,param4- параметры относительной ссылки\nПараметры абсолютной ссылки - это, как правило:\nlocale- локаль загружаемой системы\nnocache- специальный параметр, предотвращающий случайное кэширование\nостальные параметры можно передавать как параметры относительной ссылки.\nНиже для краткости будем приводить образец относительной ссылки",
    "#submodule=module_id\nгдеmodule_id:\nworkflow- Потоки работ\ncalendar- Ежедневник\nrepository- Хранилище\nplans- Проекты\npointers- Цели и показатели\nemployees- Сотрудники\nПри переходе по ссылке откроется указанный модуль.",
    "#submodule=common&file_identifier=some_file_id&action=open_document&document_identifier=some_doc_id\nПри переходе по такой ссылке откроется указанный документ с основным файлом,\nа если указанfile_identifier- то откроется документ с этим файлом.",
    "#submodule=plans&action=open_action&action_identifier=some_action_id&project_identifier=some_project_id\nПри переходе по такой ссылке откроется указанный проект,\nа если указанaction_identifier- то в проекте будет выделено\nэто мероприятие.",
    "#submodule=employees&innermodule=structure&action=open_user&user_identifier=some_user_id\nПри переходе по такой ссылке будет открыт модуль «Сотрудники»,\nа в нем - профиль указанного пользователя",
    "Если в абсолютной ссылке указать параметрnoCustomScripting,\nто все пользовательские ВМК, скрипты в формах и пользовательских\nкомпонентах будут отключены. Это можно использовать для отладки\nпользовательских компонентов, ВМК и скриптов на форме.",
    "ARTA Synergy работает на сервере приложений JBoss AS7.\nИнтеграционное приложение может представлять собойjar-файл либоwar-файл либо их комбинацию.\nЕсли приложение является одиночным файлом, его можно задеплоить,\nскопировав в директорию${jboss.home}/standalone/deployments.\nЕсли приложение состоит из нескольких файлов,\nнеобходимо создать*.earприложение.\nЕсли приложение имеет зависимости на внешние библиотеки\nи они находятся в модулях JBoss-а (${jboss.home}/modules),\nнеобходимо использовать их, прочие зависимости — помещать внутрь приложения.\nОпасно\nВ целях безопасности работы приложения Synergy и сервера приложений\nкатегорически запрещается помещать артефакты интеграционного модуля\nв приложениеSynergy.earи изменять состав модулей (${jboss.home}/modules).",
    "Существует два основных подхода для интеграции с Synergy:\nПрямая интеграция — интеграционные модули разрабатываются\nс использованием API Synergy и интегрируемых систем.\nСинхронизация данных между системами и координация обмена между ними\nостаётся за разработчиком интеграционного модуля\nСобытийная интеграция — когда какая-либо из подсистем Synergy\nгенерирует различные события, связанные с какими-либо данными.\nОбработчики этих событий (на стороне Synergy) при необходимости\nпреобразовывают данные событий и передают их интегрируемой системе\nчерез какой-либо транспортный уровень",
    "ARTA Synergy предоставляет API для доступа к своим функциям\nс помощью rest сервисов. Описание методов REST API можно\nнайти вданном разделе.\nАвторизация для всех методов API —BasicHTTP.",
    "Под «событием» мы будем подразумевать сообщение о каком-либо изменении\nв ARTA Synergy, содержащее тип события\nи минимально необходимые для получения связанной с событием информации\nлибо воздействия на Synergy данные. Обработчик события (или событий) —\nпрограммный модуль, читающий сообщения о событиях изJMSQueueилиJMSTopicи осуществляющий, при необходимости, доступ к экземпляру Synergy,\nсгенерировавшему сообщение, с помощью API Synergy.\nОбработчик событий является отдельным от ARTA Synergy приложением,\nкоторое может работать как на том же сервере приложений,\nчто и ARTA Synergy, так и на удалённом.\nКроме этого, обработчик события может иметь собственные конфигурационные файлы,\nнеобходимые для реализации целевого назначения.\nОбработчик событий может обрабатывать как конкретное событие\n(например,event.registers.formdata.add),\nтак и класс событий (например,event.registers.*).\nОбработка события может происходить в 3 этапа:\nПолучение события\nПолучение и преобразование необходимых обработчику данных\nПередача сформированного пакета данных далее (опционально)\nARTA Synergy генерирует событие в случае,\nесли для этого события настроены обработчики.\nОбработчики событий настраиваются в конфигурационном файле${jboss.home}/standalone/configuration/arta/api-observation-configuration.xml.\nПримечание\nПри установке Synergy файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xmlпо умолчанию не создается.\nСоздаете файлapi-observation-configuration.xmlв директории{$jboss.home}/standalone/configuration/arta/с содержимым:\nУказываете владельца файла:\nЗатем можете добавлять листенеры в файл.\nСообщение, помещаемое в очередьJMS,\nпредставляет собой экземплярjavax.jms.TextMessage.\nТело сообщения зависит от типа события,\nего описание можно посмотреть ниже среди описаний типов событий.\nКаждое событие содержит свойствоapi_event, указывающее на тип события,\nвызвавшего его (содержимое тега<event>event.registers.formdata.add</event>в конфигурационном файле).\nНапример:\nВ этом примере настроены обработчики:\njava:jboss/queues/Synergy/UsersQueueдля всех событий классаevent.users.*, т.е. всех событий, связанных с пользователями:event.users.account.change,event.users.formdata.change,event.users.account.addи т.д.\njava:jboss/queues/Synergy/RegisterCreateDocQueueдля события добавления записи реестраevent.registers.formdata.add.\nРассмотрим, например, код обработчика очередиUsersQueue:\nВ проектеblocking-process-templateреализован пример обработчика очереди.\nНиже описаны типы событий, которые могут быть сгенерированы ARTA Synergy.\nДля события[event.orgstructure.department.formdata.change]-\nидентификатор подразделения, для события[event.orgstructure.position.formdata.change]- идентификатор\nдолжности, для события[event.users.formdata.change]- идентификатор\nпользователя будет передаваться как основной параметр, остальные как\nсвойства. Получить их можно следующим образом:\n6.2.1. События пользователей\n6.2.2. События должностей\n6.2.3. События подразделений\n6.2.4. События реестров\n6.2.5. События адресной книги\n6.2.6. События работ\n6.2.7. События по документам\n6.2.8. События по формам\n6.2.9. События комментариев\n6.2.10. События администрирования\n6.2.11. Генерация произвольных событий\n6.2.12. Клиентские события Synergy\n6.2.13. Дополнительные атрибуты html-элементов",
    "Блокирующий процесс предназначен для того,\nчтобы предоставить возможность\nв маршрут активации/изменения/удаления реестра\nвставить асинхронный вызов внешнего модуля.\nОсновное отличие блокирующего процесса от событий реестра\nзаключается в том, что:\nпри использовании блокирующего процесса маршрут реестра\nдожидается ответа о результате выполнения операции внешним модулем\nблокирующий процесс может завершиться положительно или отрицательно,\nчто повлияет на дальнейшую работу маршрута\n(Если блокирующий процесс завершится отрицательно —\nпроцесс остановится, если положительно — то продолжит работу дальше)\nМодуль, реализующий блокирующий процесс, должен представлять собой отдельное приложение,\nзадеплоенное на jboss в соответствии с правилами,\nописанными в разделеКак задеплоить интеграционное приложение.\nЗапускается код модуля блокирующего процесса через очередь.\nПри старте этапа маршрута, содержащего блокирующий процесс,\nв очередь добавляется сообщение, которое должен обработать модуль.",
    "Для того, чтобы добавить блокирующий процесс,\nнеобходимо выполнить следующие действия:\nДобавить процесс с в маршрут реестра в конфигураторе:Название процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nДобавить процесс с в маршрут реестра в конфигураторе:\nНазвание процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:<jms-queuename=\"ExampleQueue\"><entryname=\"java:jboss/queues/Integration/ExampleQueue\"/><durable>true</durable></jms-queue>\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:<listener><queue>java:jboss/queues/Integration/ExampleQueue</queue><event>event.blocking.example</event></listener>\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:\nОбратите внимание, что название блокирующего процесса,\nуказанное в маршруте в конфигураторе должно быть\nравно значению тега в конфигурационном файлеapi-observation-configuration.xml(в данном примере:event.blocking.example)\nи название очереди должно совпадать со значением тегаqueueконфигурационного файлаapi-observation-configuration.xml(в данном примере:java:jboss/queues/Integration/ExampleQueue)\nСообщение, передаваемое в очередь, является экземпляромTextMessage.\nСодержимым сообщения является объект JSON с полями:\ndataUUID — идентификатор данных по форме записи реестра\nexecutionID — идентификатор блокирующего процесса\ndocumentID — идентификатор документа реестра\nПосле того, как модуль обратится к внешней системе\nи выполнит необходимые действия, он должен вызвать метод API Synergy\nдля того, чтобы возвратить результат выполнения процесса и продолжить работу маршрута.\nДля того, чтобы это сделать, необходимо вызвать метод APIrest/api/processes/signal.\nПримечание\nСигнал блокирующему процессу для его разблокировки/блокировки\nнужно отправлять после того, как этот процесс был запущен, то есть после того как\nтранзакция с запуском процесса была завершена. Для этого, перед отправкой сигнала,\nпроверяйте на наличие такого процесса в БД. В противном случае, блокирующий процесс\nможет завершиться в транзакции, но в маршруте нет.\nВ примере кода ниже разблокировка маршрута осуществляется в методеonMessage.\nЕсли время выполнения действия значительно или зависит от внешних факторов\n(например, доступность интегрируемой системы,\nили необходимость ввода пользователем данных в интегрируемой системе),\nто разблокировка маршрута может произойти позже,\nв любой другой момент времени из другого метода,\nа сам метод onMessage должен завершиться без ошибок, «запомнив» переданные параметры.",
    "Цель данного вида интеграции — дать возможность повлиять на\nзапуск стандартного процесса и, при необходимости, прервать его.\nСтандартная функциональность платформы ARTA Synergy дает возможность запретить\nотправку документов на согласование, утверждение, если количество уровней\nоргструктуры между отправителем и получателем превышает некоторое\nнастроенное значение. Но в некоторых компаниях существуют более сложные\nправила, ограничивающие возможность отправки документов/работ. В этих\nслучаях необходима разработка данного обработчика.\nОбработчик может быть применён к процессам:\n«работа» (assignment-single)\n«согласование» (agreement-single)\n«утверждение» (approval-single)\n«ознакомление» (acquaintance-single)\n«отправка документа» (send-document)\n«общий процесс при запуске по формам» (common-process-by-form)\n«отправка документа по форме» (send-document-by-form)\nОбработчик представляет собой Java-класс, реализующий интерфейс\nkz.arta.synergy.integration.api.bp.StartHandlerIF\nДанный интерфейс находится в библиотекеintegration-api.jar,\nкоторую можно найти в установленном экземпляре ARTA Synergy в директории/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nИнтерфейс содержит два метода:\nmakeDecision()— проверяет возможно ли выполнение процесса\ngetResolution()— возвращает текст, который должен быть записан в ход\nисполнения\nБолее подробную информацию о полях методов можно посмотреть в javadoc\nк этим методам, которые доступны вintegration-api.jar(библиотека\nсодержит и скомпилированные классы, и исходный код).\nУстановка обработчика для процесса осуществляется с помощью\nконфигурационного файла${jboss.server.config.dir}/arta/process-handlers-configuration.xml,\nимеющего следующий формат:\nОбработчики выполняются последовательно до тех пор, пока методmakeDecision()одного из них не вернетfalse, после этого процесс\nпрерывается.\nБиблиотеку, содержащую обработчик необходимо скопировать в папку/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nПосле копирования библиотеки обработчика и изменения файлаprocess-handlers-configuration.xmlнеобходимо перезапустить JBoss.\nВнимание\nПроцессcommon-process-by-formзапускает процессыagreement-single,approval-single,acquaintance-single,assignment-single(подпроцессы). Поэтому, если обработчик будет\nзапрещать выполнение подпроцесса и при этом разрешать выполнение процессаcommon-process-by-form, то подпроцессы все равно будут прерваны.\nАналогично, если выполнениеcommon-process-by-formразрешено, а\nвыполнение подпроцесса запрещено, подпроцессы будут прерваны.",
    "С использованием этого способа интеграции был реализован внешний модуль,\nограничивающий перепоручение и отправку каких-либо работ на согласование\nпользователям определенных групп.\nДля установки внешнего модуля из репозитория необходимо установить пакетarta-synergy-ext-sendcontrol.\nДалее на остановленном JBoss в конфигурационном файле${jboss.server.config.dir}/arta/process-handlers-configuration.xmlнеобходимо прописать следующие обработчики процесса:\nУстановка групп (каким группам пользователей Synergy) разрешать либо\nблокировать процессы осуществляется с помощью конфигурационного файла${jboss.server.config.dir}/arta/ext/send-control.xml. Пример настройки:",
    "REST API ARTA Synergy доступно только авторизованным пользователям.\nТип авторизации —BASICHTTP.\nМетоды API выполняются от имени того пользователя,\nкоторый авторизован. Имеются следующие типы авторизации:",
    "Авторизация пользователя по его логину и паролю приемлема в тех случаях,\nкогда приложение может знать текущий логин и пароль пользователя, например:\nПриложение предоставляет альтернативный интерфейс\nк некоторым модулям Synergy\n(мобильное приложение, десктопный клиент для хранилища)\nПриложение представляет собойserver-sideутилиту для синхронизации,\nдля которого создан выделенный пользователь,\nи его логин и пароль хранятся в конфигурационном файле на сервере.\nДля реализации данного типа авторизации надо передать в запросе заголовокAuthorizationсо значением:\nНапример:\nПример кода на JAVA:\nПример кода на JavaScript (jQuery):\nПример кода на PHP:",
    "Сессионная авторизации используется для встроенных WEB-модулей.\nПри cессионной авторизации также используется тип —BASICHTTP,\nно в качестве логина пользователя необходимо использовать\nзначение$sessionи в качестве пароля —\nполученное значениеsso_hash.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:\nПолучить значениеsso_hashавторизованного пользователя можно\nследующими способами:\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.Пример кода на JavaScript (jQuery):functiongetURLParameter(name){returndecodeURIComponent((newRegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[null,''])[1].replace(/\\+/g,'%20'))||null;}varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+getURLParameter('sso_hash')))}}$.ajax(settings).done(function(response){console.log(response);});\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.\nПример кода на JavaScript (jQuery):\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:{\"id\":\"Идентификатор текущего пользователя\",\"sso_hash\":\"hash-сумма для идентификации пользователя\",\"surname\":\"Фамилия текущего пользователя\",\"name\":\"Имя текущего пользователя\",\"patronymic\":\"Отчество текущего пользователя\"}Пример кода на JavaScript (jQuery):varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+$CURRENT_USER.sso_hash))}}$.ajax(settings).done(function(response){console.log(response);});ПримечаниеДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:\nПример кода на JavaScript (jQuery):\nПримечание\nДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.",
    "Модуль, который хочет авторизоваться от имени какого-либо пользователя таким способом,\nдолжен сгенерировать для него ключевую пару,\nобеспечив сохранность закрытого ключа.\nЗатем модуль сохраняет получивший открытый ключ для пользователя в Synergy,\nиспользуя следующий вызов API:\nЭтот вызов назначает ключ тому пользователю, от имени которого выполняется.\nПараметрuser_token_expire_intervalрегулирует интервал устаревания ключей авторизации.\nПример настройки интервала:\nПримечание\nИнтервал устаревания ключа указывается в минутах. Значение по умолчанию0, то есть если ранее для\nданного пользователя был сгенерирован другой ключ, то предыдущий автоматически становится недействительным.\nСоздать ключ можно только для существующего WEB-модуля,\nтак как для этого требуется идентификатор приложения.\nСовет\nЕсли у вас нет необходимости разрабатывать WEB модуль,\nно есть необходимость в использовании авторизации по ключам,\nможно добавить внешний модуль и отключить его использование\nв административном приложении SynergyAdmin для всех элементов оргструктуры.\nИспользование этого ключа для авторизации аналогично использованию сессионного ключа.\nТип авторизацииBasicHTTP,\nв качестве логина пользователя надо использовать строку$key,\nв качестве пароля — полученный с помощью API ключ.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:",
    "Web-приложение внешнего модуля открывается\nвiframeв окне основного приложения.\nПри этом рабочая область внешнего модуля\nзанимает всю область страницы, кроме панели меню и панели задач:\nВнешний WEB-модуль\nДля добавления нового модуля нужно перейти в\nКонфигуратор ‣ Настройки системы ‣ Управление модулями ‣ Внешние модули\nи нажать на кнопку «Добавить».\nВнешние модули\nВ открывшемся окне нужно заполнить следующие поля:\n«Название»- название модуля в соответствующем интерфейсе.\n«Название»- название модуля в соответствующем интерфейсе.\n«Код»- поле должно содержать уникальное значение.\n«Код»- поле должно содержать уникальное значение.\n«Адрес приложения»- поле для ввода URL.\n«Адрес приложения»- поле для ввода URL.\n«Описание модуля»- поле для описания данного модуля.\n«Описание модуля»- поле для описания данного модуля.\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.Добавление нового внешнего модуля\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.\nДобавление нового внешнего модуля\nПодсказка\nДобавить внешний web-модуль можно с помощью SQL-запроса\nв БДsynergy.outer_modules, вставив запись со следующими полями:\nid— идентификатор модуля, должен совпадать с идентификаторомвашего проекта в репозитории проектов\nnameru,namekz,nameen— название модуля на русском,\nказахском и английском языках соответственно\nurl— адрес приложения\ndescription— описание модуля\nactive— активен ли модуль, 1/0.\nДля реализации механизмаSSOприложений,\nARTA Synergy при загрузке внешнего web-модуля будет в строку URL\nдобавлять три параметра:\nlocale— локаль авторизованного пользователя\nsso_hash— hash-сумма для идентификации пользователя.\nhost— адрес, с которого загружено приложение Synergy\nНапример, если URL приложения\nто при обращении к модулю будет вызываться\nИнтегрированный модуль должен будет будет получить из URL\nпараметрsso_hashи запросить по REST API у ARTA Synergy\nинформацию об авторизованном пользователе (идентификатор, имя).\nЕсли метод REST API возвращает информацию о пользователе,\nэто подтверждает, что данный пользователь\nдействительно авторизован с данного хоста, в данном браузере.\nДалее строкаsso_hashможет быть использована дляСессионная авторизацияи вызова REST API Arta Synergy.\nВ ARTA Synergy реализована возможность обращения к ее модулям по относительной ссылке.\nТакая же возможность существует для внешних web-модулей. Переход по ссылке вида:\n#submodule=outer&outerModuleID='код_модуля'&прочие_параметры_по_желанию_модуля\nактивирует в Synergy заданный модуль и передаст ему заданные в url-e параметры\n(параметрыlocale,sso_hash,hostтакже будут переданы,\nнесмотря на то, что они отсутствуют в ссылке).\nЧасто возникает необходимость в этой ссылке передать ссылку на текущий документ.\nДля этого можно добавить в ссылку параметр,\nзначение которого будет равно${docID}—\nэта строка в web-интерфейсе проигрывателя форм Synergy\nбудет заменена на идентификатор данного документа.",
    "В бизнес-приложениях на базе Synergy может возникнуть необходимость работы из\nвнешних систем с формами Synergy. В этом случае можно использовать внешний проигрыватель форм.\nПроигрыватель форм - это инструмент, который даёт возможность работать с формами,\nсозданными и используемыми в Synergy, а также выполняет скрипты. При использовании\nво внешней системе проигрыватель позволяет:\nотображать и редактировать формы Synergy;\nнастраивать произвольный вид формы и ее компонентов, создавать новые компоненты;\nавтоматически заполнять поля формы данными из внешней системы;\nобеспечивать обратную связь от проигрывателя к серверу, используя механизм событий;\nобрабатывать наступившие события.\nПримечание\nПроигрыватель форм запускается на стороне клиента, поэтому все события\nи скрипты срабатывают только при открытом проигрывателе.",
    "Для подключения проигрывателя на страницу необходимо добавить код в разделhead:<script>FORM_PLAYER_URL_PREFIX = \"http://127.0.0.1:8080/Synergy/\";<!--служебная переменная для корректной работы компонента \"HTD-редактор\"--></script><linkrel=\"stylesheet\"href=\"http://127.0.0.1:8080/Synergy/js/form.player.css\"/><!--стандартный стиль компонентов формы--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/vendor.js\"type=\"text/javascript\"></script><!--ссылка на сторонние библиотеки--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/form.player.js\"type=\"text/javascript\"></script><!--ссылка на проигрыватель форм-->и вставить элемент для размещения проигрывателя в тело страницы:<divid=\"form_player_container\"><divid=\"form_player_div\"></div></div>\nДля подключения проигрывателя на страницу необходимо добавить код в разделhead:\nи вставить элемент для размещения проигрывателя в тело страницы:\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";//ссылка на экземпляр SynergyСоздание объекта проигрывателя выглядит следующим образом:'use strict';AS.OPTIONS.locale=\"ru\";AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";varportal={player:null,/*** очистить текущий проигрыватель форм*/clearPlayer:function(){if(portal.player){portal.player.destroy();}},/*** добавить новый проигрыватель форм*/createPlayer:function(formCode){portal.clearPlayer();portal.player=AS.FORMS.createPlayer();portal.player.showFormByCode(formCode);portal.player.view.appendTo($('#form_player_div'));}};$(document).ready(function(){AS.OPTIONS.login=\"login\";AS.OPTIONS.password=\"password\";portal.createPlayer(\"formCode\");});\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:\nСоздание объекта проигрывателя выглядит следующим образом:\nСм. также документацию поСкриптинг в формах.",
    "В данном разделе описываются основные примеры использования внешнего\nпроигрывателя форм. Каждый пример отражает одно из базовых требований\nк внешнему проигрывателю и содержит:\nописание примера;\nреализованный пример внешнего проигрывателя форм, встроенного во внешний портал (в данном случае - в портал документации);\nа также исходные коды JavaScript и CSS этих примеров.\nПримеры использования внешнего проигрывателя форм:\n6.7.2.1. Вариант 1. Отображение проигрывателя, встроенного во внешний портал\n6.7.2.2. Вариант 2. Изменение вида отображения формы согласно стилю портала (CSS)\n6.7.2.3. Вариант 3. Автозаполнение данных формы из внешнего портала\n6.7.2.4. Вариант 4. Дополнительная валидация формы\n6.7.2.5. Вариант 5. Создание нового компонента\n6.7.2.6. Вариант 6. Предварительное заполнение данных формы внешним порталом\n6.7.2.7. Вариант 7. Изменение компонента формы\n6.7.2.8. Вариант 8. Авторизация во внешнем проигрывателе",
    "Ссылки на модули и различные объекты Synergy\nможно использовать как внутри основного web-приложения\n(в этом случае предпочтительно использовать относительные\nссылки, чтобы не перезагружать страницу), так и во внешних\nсистемах.\nОбщий вид ссылок:\nгде\nhost- доменное имя или ip-адрес сервера Synergy\nport- порт\nApplication:Synergy- основное приложениеConfigurator- КонфигураторSynergyAdmin- административное приложение\nSynergy- основное приложение\nConfigurator- Конфигуратор\nSynergyAdmin- административное приложение\nparam1,param2- параметры абсолютной ссылки\nparam3,param4- параметры относительной ссылки\nПараметры абсолютной ссылки - это, как правило:\nlocale- локаль загружаемой системы\nnocache- специальный параметр, предотвращающий случайное кэширование\nостальные параметры можно передавать как параметры относительной ссылки.\nНиже для краткости будем приводить образец относительной ссылки",
    "#submodule=module_id\nгдеmodule_id:\nworkflow- Потоки работ\ncalendar- Ежедневник\nrepository- Хранилище\nplans- Проекты\npointers- Цели и показатели\nemployees- Сотрудники\nПри переходе по ссылке откроется указанный модуль.",
    "#submodule=common&file_identifier=some_file_id&action=open_document&document_identifier=some_doc_id\nПри переходе по такой ссылке откроется указанный документ с основным файлом,\nа если указанfile_identifier- то откроется документ с этим файлом.",
    "#submodule=plans&action=open_action&action_identifier=some_action_id&project_identifier=some_project_id\nПри переходе по такой ссылке откроется указанный проект,\nа если указанaction_identifier- то в проекте будет выделено\nэто мероприятие.",
    "#submodule=employees&innermodule=structure&action=open_user&user_identifier=some_user_id\nПри переходе по такой ссылке будет открыт модуль «Сотрудники»,\nа в нем - профиль указанного пользователя",
    "Если в абсолютной ссылке указать параметрnoCustomScripting,\nто все пользовательские ВМК, скрипты в формах и пользовательских\nкомпонентах будут отключены. Это можно использовать для отладки\nпользовательских компонентов, ВМК и скриптов на форме.",
    "ARTA Synergy работает на сервере приложений JBoss AS7.\nИнтеграционное приложение может представлять собойjar-файл либоwar-файл либо их комбинацию.\nЕсли приложение является одиночным файлом, его можно задеплоить,\nскопировав в директорию${jboss.home}/standalone/deployments.\nЕсли приложение состоит из нескольких файлов,\nнеобходимо создать*.earприложение.\nЕсли приложение имеет зависимости на внешние библиотеки\nи они находятся в модулях JBoss-а (${jboss.home}/modules),\nнеобходимо использовать их, прочие зависимости — помещать внутрь приложения.\nОпасно\nВ целях безопасности работы приложения Synergy и сервера приложений\nкатегорически запрещается помещать артефакты интеграционного модуля\nв приложениеSynergy.earи изменять состав модулей (${jboss.home}/modules).",
    "Существует два основных подхода для интеграции с Synergy:\nПрямая интеграция — интеграционные модули разрабатываются\nс использованием API Synergy и интегрируемых систем.\nСинхронизация данных между системами и координация обмена между ними\nостаётся за разработчиком интеграционного модуля\nСобытийная интеграция — когда какая-либо из подсистем Synergy\nгенерирует различные события, связанные с какими-либо данными.\nОбработчики этих событий (на стороне Synergy) при необходимости\nпреобразовывают данные событий и передают их интегрируемой системе\nчерез какой-либо транспортный уровень",
    "ARTA Synergy предоставляет API для доступа к своим функциям\nс помощью rest сервисов. Описание методов REST API можно\nнайти вданном разделе.\nАвторизация для всех методов API —BasicHTTP.",
    "Под «событием» мы будем подразумевать сообщение о каком-либо изменении\nв ARTA Synergy, содержащее тип события\nи минимально необходимые для получения связанной с событием информации\nлибо воздействия на Synergy данные. Обработчик события (или событий) —\nпрограммный модуль, читающий сообщения о событиях изJMSQueueилиJMSTopicи осуществляющий, при необходимости, доступ к экземпляру Synergy,\nсгенерировавшему сообщение, с помощью API Synergy.\nОбработчик событий является отдельным от ARTA Synergy приложением,\nкоторое может работать как на том же сервере приложений,\nчто и ARTA Synergy, так и на удалённом.\nКроме этого, обработчик события может иметь собственные конфигурационные файлы,\nнеобходимые для реализации целевого назначения.\nОбработчик событий может обрабатывать как конкретное событие\n(например,event.registers.formdata.add),\nтак и класс событий (например,event.registers.*).\nОбработка события может происходить в 3 этапа:\nПолучение события\nПолучение и преобразование необходимых обработчику данных\nПередача сформированного пакета данных далее (опционально)\nARTA Synergy генерирует событие в случае,\nесли для этого события настроены обработчики.\nОбработчики событий настраиваются в конфигурационном файле${jboss.home}/standalone/configuration/arta/api-observation-configuration.xml.\nПримечание\nПри установке Synergy файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xmlпо умолчанию не создается.\nСоздаете файлapi-observation-configuration.xmlв директории{$jboss.home}/standalone/configuration/arta/с содержимым:\nУказываете владельца файла:\nЗатем можете добавлять листенеры в файл.\nСообщение, помещаемое в очередьJMS,\nпредставляет собой экземплярjavax.jms.TextMessage.\nТело сообщения зависит от типа события,\nего описание можно посмотреть ниже среди описаний типов событий.\nКаждое событие содержит свойствоapi_event, указывающее на тип события,\nвызвавшего его (содержимое тега<event>event.registers.formdata.add</event>в конфигурационном файле).\nНапример:\nВ этом примере настроены обработчики:\njava:jboss/queues/Synergy/UsersQueueдля всех событий классаevent.users.*, т.е. всех событий, связанных с пользователями:event.users.account.change,event.users.formdata.change,event.users.account.addи т.д.\njava:jboss/queues/Synergy/RegisterCreateDocQueueдля события добавления записи реестраevent.registers.formdata.add.\nРассмотрим, например, код обработчика очередиUsersQueue:\nВ проектеblocking-process-templateреализован пример обработчика очереди.\nНиже описаны типы событий, которые могут быть сгенерированы ARTA Synergy.\nДля события[event.orgstructure.department.formdata.change]-\nидентификатор подразделения, для события[event.orgstructure.position.formdata.change]- идентификатор\nдолжности, для события[event.users.formdata.change]- идентификатор\nпользователя будет передаваться как основной параметр, остальные как\nсвойства. Получить их можно следующим образом:\n6.2.1. События пользователей\n6.2.2. События должностей\n6.2.3. События подразделений\n6.2.4. События реестров\n6.2.5. События адресной книги\n6.2.6. События работ\n6.2.7. События по документам\n6.2.8. События по формам\n6.2.9. События комментариев\n6.2.10. События администрирования\n6.2.11. Генерация произвольных событий\n6.2.12. Клиентские события Synergy\n6.2.13. Дополнительные атрибуты html-элементов",
    "Блокирующий процесс предназначен для того,\nчтобы предоставить возможность\nв маршрут активации/изменения/удаления реестра\nвставить асинхронный вызов внешнего модуля.\nОсновное отличие блокирующего процесса от событий реестра\nзаключается в том, что:\nпри использовании блокирующего процесса маршрут реестра\nдожидается ответа о результате выполнения операции внешним модулем\nблокирующий процесс может завершиться положительно или отрицательно,\nчто повлияет на дальнейшую работу маршрута\n(Если блокирующий процесс завершится отрицательно —\nпроцесс остановится, если положительно — то продолжит работу дальше)\nМодуль, реализующий блокирующий процесс, должен представлять собой отдельное приложение,\nзадеплоенное на jboss в соответствии с правилами,\nописанными в разделеКак задеплоить интеграционное приложение.\nЗапускается код модуля блокирующего процесса через очередь.\nПри старте этапа маршрута, содержащего блокирующий процесс,\nв очередь добавляется сообщение, которое должен обработать модуль.",
    "Для того, чтобы добавить блокирующий процесс,\nнеобходимо выполнить следующие действия:\nДобавить процесс с в маршрут реестра в конфигураторе:Название процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nДобавить процесс с в маршрут реестра в конфигураторе:\nНазвание процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:<jms-queuename=\"ExampleQueue\"><entryname=\"java:jboss/queues/Integration/ExampleQueue\"/><durable>true</durable></jms-queue>\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:<listener><queue>java:jboss/queues/Integration/ExampleQueue</queue><event>event.blocking.example</event></listener>\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:\nОбратите внимание, что название блокирующего процесса,\nуказанное в маршруте в конфигураторе должно быть\nравно значению тега в конфигурационном файлеapi-observation-configuration.xml(в данном примере:event.blocking.example)\nи название очереди должно совпадать со значением тегаqueueконфигурационного файлаapi-observation-configuration.xml(в данном примере:java:jboss/queues/Integration/ExampleQueue)\nСообщение, передаваемое в очередь, является экземпляромTextMessage.\nСодержимым сообщения является объект JSON с полями:\ndataUUID — идентификатор данных по форме записи реестра\nexecutionID — идентификатор блокирующего процесса\ndocumentID — идентификатор документа реестра\nПосле того, как модуль обратится к внешней системе\nи выполнит необходимые действия, он должен вызвать метод API Synergy\nдля того, чтобы возвратить результат выполнения процесса и продолжить работу маршрута.\nДля того, чтобы это сделать, необходимо вызвать метод APIrest/api/processes/signal.\nПримечание\nСигнал блокирующему процессу для его разблокировки/блокировки\nнужно отправлять после того, как этот процесс был запущен, то есть после того как\nтранзакция с запуском процесса была завершена. Для этого, перед отправкой сигнала,\nпроверяйте на наличие такого процесса в БД. В противном случае, блокирующий процесс\nможет завершиться в транзакции, но в маршруте нет.\nВ примере кода ниже разблокировка маршрута осуществляется в методеonMessage.\nЕсли время выполнения действия значительно или зависит от внешних факторов\n(например, доступность интегрируемой системы,\nили необходимость ввода пользователем данных в интегрируемой системе),\nто разблокировка маршрута может произойти позже,\nв любой другой момент времени из другого метода,\nа сам метод onMessage должен завершиться без ошибок, «запомнив» переданные параметры.",
    "Цель данного вида интеграции — дать возможность повлиять на\nзапуск стандартного процесса и, при необходимости, прервать его.\nСтандартная функциональность платформы ARTA Synergy дает возможность запретить\nотправку документов на согласование, утверждение, если количество уровней\nоргструктуры между отправителем и получателем превышает некоторое\nнастроенное значение. Но в некоторых компаниях существуют более сложные\nправила, ограничивающие возможность отправки документов/работ. В этих\nслучаях необходима разработка данного обработчика.\nОбработчик может быть применён к процессам:\n«работа» (assignment-single)\n«согласование» (agreement-single)\n«утверждение» (approval-single)\n«ознакомление» (acquaintance-single)\n«отправка документа» (send-document)\n«общий процесс при запуске по формам» (common-process-by-form)\n«отправка документа по форме» (send-document-by-form)\nОбработчик представляет собой Java-класс, реализующий интерфейс\nkz.arta.synergy.integration.api.bp.StartHandlerIF\nДанный интерфейс находится в библиотекеintegration-api.jar,\nкоторую можно найти в установленном экземпляре ARTA Synergy в директории/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nИнтерфейс содержит два метода:\nmakeDecision()— проверяет возможно ли выполнение процесса\ngetResolution()— возвращает текст, который должен быть записан в ход\nисполнения\nБолее подробную информацию о полях методов можно посмотреть в javadoc\nк этим методам, которые доступны вintegration-api.jar(библиотека\nсодержит и скомпилированные классы, и исходный код).\nУстановка обработчика для процесса осуществляется с помощью\nконфигурационного файла${jboss.server.config.dir}/arta/process-handlers-configuration.xml,\nимеющего следующий формат:\nОбработчики выполняются последовательно до тех пор, пока методmakeDecision()одного из них не вернетfalse, после этого процесс\nпрерывается.\nБиблиотеку, содержащую обработчик необходимо скопировать в папку/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nПосле копирования библиотеки обработчика и изменения файлаprocess-handlers-configuration.xmlнеобходимо перезапустить JBoss.\nВнимание\nПроцессcommon-process-by-formзапускает процессыagreement-single,approval-single,acquaintance-single,assignment-single(подпроцессы). Поэтому, если обработчик будет\nзапрещать выполнение подпроцесса и при этом разрешать выполнение процессаcommon-process-by-form, то подпроцессы все равно будут прерваны.\nАналогично, если выполнениеcommon-process-by-formразрешено, а\nвыполнение подпроцесса запрещено, подпроцессы будут прерваны.",
    "С использованием этого способа интеграции был реализован внешний модуль,\nограничивающий перепоручение и отправку каких-либо работ на согласование\nпользователям определенных групп.\nДля установки внешнего модуля из репозитория необходимо установить пакетarta-synergy-ext-sendcontrol.\nДалее на остановленном JBoss в конфигурационном файле${jboss.server.config.dir}/arta/process-handlers-configuration.xmlнеобходимо прописать следующие обработчики процесса:\nУстановка групп (каким группам пользователей Synergy) разрешать либо\nблокировать процессы осуществляется с помощью конфигурационного файла${jboss.server.config.dir}/arta/ext/send-control.xml. Пример настройки:",
    "REST API ARTA Synergy доступно только авторизованным пользователям.\nТип авторизации —BASICHTTP.\nМетоды API выполняются от имени того пользователя,\nкоторый авторизован. Имеются следующие типы авторизации:",
    "Авторизация пользователя по его логину и паролю приемлема в тех случаях,\nкогда приложение может знать текущий логин и пароль пользователя, например:\nПриложение предоставляет альтернативный интерфейс\nк некоторым модулям Synergy\n(мобильное приложение, десктопный клиент для хранилища)\nПриложение представляет собойserver-sideутилиту для синхронизации,\nдля которого создан выделенный пользователь,\nи его логин и пароль хранятся в конфигурационном файле на сервере.\nДля реализации данного типа авторизации надо передать в запросе заголовокAuthorizationсо значением:\nНапример:\nПример кода на JAVA:\nПример кода на JavaScript (jQuery):\nПример кода на PHP:",
    "Сессионная авторизации используется для встроенных WEB-модулей.\nПри cессионной авторизации также используется тип —BASICHTTP,\nно в качестве логина пользователя необходимо использовать\nзначение$sessionи в качестве пароля —\nполученное значениеsso_hash.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:\nПолучить значениеsso_hashавторизованного пользователя можно\nследующими способами:\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.Пример кода на JavaScript (jQuery):functiongetURLParameter(name){returndecodeURIComponent((newRegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[null,''])[1].replace(/\\+/g,'%20'))||null;}varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+getURLParameter('sso_hash')))}}$.ajax(settings).done(function(response){console.log(response);});\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.\nПример кода на JavaScript (jQuery):\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:{\"id\":\"Идентификатор текущего пользователя\",\"sso_hash\":\"hash-сумма для идентификации пользователя\",\"surname\":\"Фамилия текущего пользователя\",\"name\":\"Имя текущего пользователя\",\"patronymic\":\"Отчество текущего пользователя\"}Пример кода на JavaScript (jQuery):varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+$CURRENT_USER.sso_hash))}}$.ajax(settings).done(function(response){console.log(response);});ПримечаниеДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:\nПример кода на JavaScript (jQuery):\nПримечание\nДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.",
    "Модуль, который хочет авторизоваться от имени какого-либо пользователя таким способом,\nдолжен сгенерировать для него ключевую пару,\nобеспечив сохранность закрытого ключа.\nЗатем модуль сохраняет получивший открытый ключ для пользователя в Synergy,\nиспользуя следующий вызов API:\nЭтот вызов назначает ключ тому пользователю, от имени которого выполняется.\nПараметрuser_token_expire_intervalрегулирует интервал устаревания ключей авторизации.\nПример настройки интервала:\nПримечание\nИнтервал устаревания ключа указывается в минутах. Значение по умолчанию0, то есть если ранее для\nданного пользователя был сгенерирован другой ключ, то предыдущий автоматически становится недействительным.\nСоздать ключ можно только для существующего WEB-модуля,\nтак как для этого требуется идентификатор приложения.\nСовет\nЕсли у вас нет необходимости разрабатывать WEB модуль,\nно есть необходимость в использовании авторизации по ключам,\nможно добавить внешний модуль и отключить его использование\nв административном приложении SynergyAdmin для всех элементов оргструктуры.\nИспользование этого ключа для авторизации аналогично использованию сессионного ключа.\nТип авторизацииBasicHTTP,\nв качестве логина пользователя надо использовать строку$key,\nв качестве пароля — полученный с помощью API ключ.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:",
    "Web-приложение внешнего модуля открывается\nвiframeв окне основного приложения.\nПри этом рабочая область внешнего модуля\nзанимает всю область страницы, кроме панели меню и панели задач:\nВнешний WEB-модуль\nДля добавления нового модуля нужно перейти в\nКонфигуратор ‣ Настройки системы ‣ Управление модулями ‣ Внешние модули\nи нажать на кнопку «Добавить».\nВнешние модули\nВ открывшемся окне нужно заполнить следующие поля:\n«Название»- название модуля в соответствующем интерфейсе.\n«Название»- название модуля в соответствующем интерфейсе.\n«Код»- поле должно содержать уникальное значение.\n«Код»- поле должно содержать уникальное значение.\n«Адрес приложения»- поле для ввода URL.\n«Адрес приложения»- поле для ввода URL.\n«Описание модуля»- поле для описания данного модуля.\n«Описание модуля»- поле для описания данного модуля.\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.Добавление нового внешнего модуля\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.\nДобавление нового внешнего модуля\nПодсказка\nДобавить внешний web-модуль можно с помощью SQL-запроса\nв БДsynergy.outer_modules, вставив запись со следующими полями:\nid— идентификатор модуля, должен совпадать с идентификаторомвашего проекта в репозитории проектов\nnameru,namekz,nameen— название модуля на русском,\nказахском и английском языках соответственно\nurl— адрес приложения\ndescription— описание модуля\nactive— активен ли модуль, 1/0.\nДля реализации механизмаSSOприложений,\nARTA Synergy при загрузке внешнего web-модуля будет в строку URL\nдобавлять три параметра:\nlocale— локаль авторизованного пользователя\nsso_hash— hash-сумма для идентификации пользователя.\nhost— адрес, с которого загружено приложение Synergy\nНапример, если URL приложения\nто при обращении к модулю будет вызываться\nИнтегрированный модуль должен будет будет получить из URL\nпараметрsso_hashи запросить по REST API у ARTA Synergy\nинформацию об авторизованном пользователе (идентификатор, имя).\nЕсли метод REST API возвращает информацию о пользователе,\nэто подтверждает, что данный пользователь\nдействительно авторизован с данного хоста, в данном браузере.\nДалее строкаsso_hashможет быть использована дляСессионная авторизацияи вызова REST API Arta Synergy.\nВ ARTA Synergy реализована возможность обращения к ее модулям по относительной ссылке.\nТакая же возможность существует для внешних web-модулей. Переход по ссылке вида:\n#submodule=outer&outerModuleID='код_модуля'&прочие_параметры_по_желанию_модуля\nактивирует в Synergy заданный модуль и передаст ему заданные в url-e параметры\n(параметрыlocale,sso_hash,hostтакже будут переданы,\nнесмотря на то, что они отсутствуют в ссылке).\nЧасто возникает необходимость в этой ссылке передать ссылку на текущий документ.\nДля этого можно добавить в ссылку параметр,\nзначение которого будет равно${docID}—\nэта строка в web-интерфейсе проигрывателя форм Synergy\nбудет заменена на идентификатор данного документа.",
    "В бизнес-приложениях на базе Synergy может возникнуть необходимость работы из\nвнешних систем с формами Synergy. В этом случае можно использовать внешний проигрыватель форм.\nПроигрыватель форм - это инструмент, который даёт возможность работать с формами,\nсозданными и используемыми в Synergy, а также выполняет скрипты. При использовании\nво внешней системе проигрыватель позволяет:\nотображать и редактировать формы Synergy;\nнастраивать произвольный вид формы и ее компонентов, создавать новые компоненты;\nавтоматически заполнять поля формы данными из внешней системы;\nобеспечивать обратную связь от проигрывателя к серверу, используя механизм событий;\nобрабатывать наступившие события.\nПримечание\nПроигрыватель форм запускается на стороне клиента, поэтому все события\nи скрипты срабатывают только при открытом проигрывателе.",
    "Для подключения проигрывателя на страницу необходимо добавить код в разделhead:<script>FORM_PLAYER_URL_PREFIX = \"http://127.0.0.1:8080/Synergy/\";<!--служебная переменная для корректной работы компонента \"HTD-редактор\"--></script><linkrel=\"stylesheet\"href=\"http://127.0.0.1:8080/Synergy/js/form.player.css\"/><!--стандартный стиль компонентов формы--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/vendor.js\"type=\"text/javascript\"></script><!--ссылка на сторонние библиотеки--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/form.player.js\"type=\"text/javascript\"></script><!--ссылка на проигрыватель форм-->и вставить элемент для размещения проигрывателя в тело страницы:<divid=\"form_player_container\"><divid=\"form_player_div\"></div></div>\nДля подключения проигрывателя на страницу необходимо добавить код в разделhead:\nи вставить элемент для размещения проигрывателя в тело страницы:\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";//ссылка на экземпляр SynergyСоздание объекта проигрывателя выглядит следующим образом:'use strict';AS.OPTIONS.locale=\"ru\";AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";varportal={player:null,/*** очистить текущий проигрыватель форм*/clearPlayer:function(){if(portal.player){portal.player.destroy();}},/*** добавить новый проигрыватель форм*/createPlayer:function(formCode){portal.clearPlayer();portal.player=AS.FORMS.createPlayer();portal.player.showFormByCode(formCode);portal.player.view.appendTo($('#form_player_div'));}};$(document).ready(function(){AS.OPTIONS.login=\"login\";AS.OPTIONS.password=\"password\";portal.createPlayer(\"formCode\");});\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:\nСоздание объекта проигрывателя выглядит следующим образом:\nСм. также документацию поСкриптинг в формах.",
    "В данном разделе описываются основные примеры использования внешнего\nпроигрывателя форм. Каждый пример отражает одно из базовых требований\nк внешнему проигрывателю и содержит:\nописание примера;\nреализованный пример внешнего проигрывателя форм, встроенного во внешний портал (в данном случае - в портал документации);\nа также исходные коды JavaScript и CSS этих примеров.\nПримеры использования внешнего проигрывателя форм:\n6.7.2.1. Вариант 1. Отображение проигрывателя, встроенного во внешний портал\n6.7.2.2. Вариант 2. Изменение вида отображения формы согласно стилю портала (CSS)\n6.7.2.3. Вариант 3. Автозаполнение данных формы из внешнего портала\n6.7.2.4. Вариант 4. Дополнительная валидация формы\n6.7.2.5. Вариант 5. Создание нового компонента\n6.7.2.6. Вариант 6. Предварительное заполнение данных формы внешним порталом\n6.7.2.7. Вариант 7. Изменение компонента формы\n6.7.2.8. Вариант 8. Авторизация во внешнем проигрывателе",
    "Ссылки на модули и различные объекты Synergy\nможно использовать как внутри основного web-приложения\n(в этом случае предпочтительно использовать относительные\nссылки, чтобы не перезагружать страницу), так и во внешних\nсистемах.\nОбщий вид ссылок:\nгде\nhost- доменное имя или ip-адрес сервера Synergy\nport- порт\nApplication:Synergy- основное приложениеConfigurator- КонфигураторSynergyAdmin- административное приложение\nSynergy- основное приложение\nConfigurator- Конфигуратор\nSynergyAdmin- административное приложение\nparam1,param2- параметры абсолютной ссылки\nparam3,param4- параметры относительной ссылки\nПараметры абсолютной ссылки - это, как правило:\nlocale- локаль загружаемой системы\nnocache- специальный параметр, предотвращающий случайное кэширование\nостальные параметры можно передавать как параметры относительной ссылки.\nНиже для краткости будем приводить образец относительной ссылки",
    "#submodule=module_id\nгдеmodule_id:\nworkflow- Потоки работ\ncalendar- Ежедневник\nrepository- Хранилище\nplans- Проекты\npointers- Цели и показатели\nemployees- Сотрудники\nПри переходе по ссылке откроется указанный модуль.",
    "#submodule=common&file_identifier=some_file_id&action=open_document&document_identifier=some_doc_id\nПри переходе по такой ссылке откроется указанный документ с основным файлом,\nа если указанfile_identifier- то откроется документ с этим файлом.",
    "#submodule=plans&action=open_action&action_identifier=some_action_id&project_identifier=some_project_id\nПри переходе по такой ссылке откроется указанный проект,\nа если указанaction_identifier- то в проекте будет выделено\nэто мероприятие.",
    "#submodule=employees&innermodule=structure&action=open_user&user_identifier=some_user_id\nПри переходе по такой ссылке будет открыт модуль «Сотрудники»,\nа в нем - профиль указанного пользователя",
    "Если в абсолютной ссылке указать параметрnoCustomScripting,\nто все пользовательские ВМК, скрипты в формах и пользовательских\nкомпонентах будут отключены. Это можно использовать для отладки\nпользовательских компонентов, ВМК и скриптов на форме.",
    "ARTA Synergy работает на сервере приложений JBoss AS7.\nИнтеграционное приложение может представлять собойjar-файл либоwar-файл либо их комбинацию.\nЕсли приложение является одиночным файлом, его можно задеплоить,\nскопировав в директорию${jboss.home}/standalone/deployments.\nЕсли приложение состоит из нескольких файлов,\nнеобходимо создать*.earприложение.\nЕсли приложение имеет зависимости на внешние библиотеки\nи они находятся в модулях JBoss-а (${jboss.home}/modules),\nнеобходимо использовать их, прочие зависимости — помещать внутрь приложения.\nОпасно\nВ целях безопасности работы приложения Synergy и сервера приложений\nкатегорически запрещается помещать артефакты интеграционного модуля\nв приложениеSynergy.earи изменять состав модулей (${jboss.home}/modules).",
    "Существует два основных подхода для интеграции с Synergy:\nПрямая интеграция — интеграционные модули разрабатываются\nс использованием API Synergy и интегрируемых систем.\nСинхронизация данных между системами и координация обмена между ними\nостаётся за разработчиком интеграционного модуля\nСобытийная интеграция — когда какая-либо из подсистем Synergy\nгенерирует различные события, связанные с какими-либо данными.\nОбработчики этих событий (на стороне Synergy) при необходимости\nпреобразовывают данные событий и передают их интегрируемой системе\nчерез какой-либо транспортный уровень",
    "ARTA Synergy предоставляет API для доступа к своим функциям\nс помощью rest сервисов. Описание методов REST API можно\nнайти вданном разделе.\nАвторизация для всех методов API —BasicHTTP.",
    "Под «событием» мы будем подразумевать сообщение о каком-либо изменении\nв ARTA Synergy, содержащее тип события\nи минимально необходимые для получения связанной с событием информации\nлибо воздействия на Synergy данные. Обработчик события (или событий) —\nпрограммный модуль, читающий сообщения о событиях изJMSQueueилиJMSTopicи осуществляющий, при необходимости, доступ к экземпляру Synergy,\nсгенерировавшему сообщение, с помощью API Synergy.\nОбработчик событий является отдельным от ARTA Synergy приложением,\nкоторое может работать как на том же сервере приложений,\nчто и ARTA Synergy, так и на удалённом.\nКроме этого, обработчик события может иметь собственные конфигурационные файлы,\nнеобходимые для реализации целевого назначения.\nОбработчик событий может обрабатывать как конкретное событие\n(например,event.registers.formdata.add),\nтак и класс событий (например,event.registers.*).\nОбработка события может происходить в 3 этапа:\nПолучение события\nПолучение и преобразование необходимых обработчику данных\nПередача сформированного пакета данных далее (опционально)\nARTA Synergy генерирует событие в случае,\nесли для этого события настроены обработчики.\nОбработчики событий настраиваются в конфигурационном файле${jboss.home}/standalone/configuration/arta/api-observation-configuration.xml.\nПримечание\nПри установке Synergy файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xmlпо умолчанию не создается.\nСоздаете файлapi-observation-configuration.xmlв директории{$jboss.home}/standalone/configuration/arta/с содержимым:\nУказываете владельца файла:\nЗатем можете добавлять листенеры в файл.\nСообщение, помещаемое в очередьJMS,\nпредставляет собой экземплярjavax.jms.TextMessage.\nТело сообщения зависит от типа события,\nего описание можно посмотреть ниже среди описаний типов событий.\nКаждое событие содержит свойствоapi_event, указывающее на тип события,\nвызвавшего его (содержимое тега<event>event.registers.formdata.add</event>в конфигурационном файле).\nНапример:\nВ этом примере настроены обработчики:\njava:jboss/queues/Synergy/UsersQueueдля всех событий классаevent.users.*, т.е. всех событий, связанных с пользователями:event.users.account.change,event.users.formdata.change,event.users.account.addи т.д.\njava:jboss/queues/Synergy/RegisterCreateDocQueueдля события добавления записи реестраevent.registers.formdata.add.\nРассмотрим, например, код обработчика очередиUsersQueue:\nВ проектеblocking-process-templateреализован пример обработчика очереди.\nНиже описаны типы событий, которые могут быть сгенерированы ARTA Synergy.\nДля события[event.orgstructure.department.formdata.change]-\nидентификатор подразделения, для события[event.orgstructure.position.formdata.change]- идентификатор\nдолжности, для события[event.users.formdata.change]- идентификатор\nпользователя будет передаваться как основной параметр, остальные как\nсвойства. Получить их можно следующим образом:\n6.2.1. События пользователей\n6.2.2. События должностей\n6.2.3. События подразделений\n6.2.4. События реестров\n6.2.5. События адресной книги\n6.2.6. События работ\n6.2.7. События по документам\n6.2.8. События по формам\n6.2.9. События комментариев\n6.2.10. События администрирования\n6.2.11. Генерация произвольных событий\n6.2.12. Клиентские события Synergy\n6.2.13. Дополнительные атрибуты html-элементов",
    "Блокирующий процесс предназначен для того,\nчтобы предоставить возможность\nв маршрут активации/изменения/удаления реестра\nвставить асинхронный вызов внешнего модуля.\nОсновное отличие блокирующего процесса от событий реестра\nзаключается в том, что:\nпри использовании блокирующего процесса маршрут реестра\nдожидается ответа о результате выполнения операции внешним модулем\nблокирующий процесс может завершиться положительно или отрицательно,\nчто повлияет на дальнейшую работу маршрута\n(Если блокирующий процесс завершится отрицательно —\nпроцесс остановится, если положительно — то продолжит работу дальше)\nМодуль, реализующий блокирующий процесс, должен представлять собой отдельное приложение,\nзадеплоенное на jboss в соответствии с правилами,\nописанными в разделеКак задеплоить интеграционное приложение.\nЗапускается код модуля блокирующего процесса через очередь.\nПри старте этапа маршрута, содержащего блокирующий процесс,\nв очередь добавляется сообщение, которое должен обработать модуль.",
    "Для того, чтобы добавить блокирующий процесс,\nнеобходимо выполнить следующие действия:\nДобавить процесс с в маршрут реестра в конфигураторе:Название процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nДобавить процесс с в маршрут реестра в конфигураторе:\nНазвание процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:<jms-queuename=\"ExampleQueue\"><entryname=\"java:jboss/queues/Integration/ExampleQueue\"/><durable>true</durable></jms-queue>\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:<listener><queue>java:jboss/queues/Integration/ExampleQueue</queue><event>event.blocking.example</event></listener>\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:\nОбратите внимание, что название блокирующего процесса,\nуказанное в маршруте в конфигураторе должно быть\nравно значению тега в конфигурационном файлеapi-observation-configuration.xml(в данном примере:event.blocking.example)\nи название очереди должно совпадать со значением тегаqueueконфигурационного файлаapi-observation-configuration.xml(в данном примере:java:jboss/queues/Integration/ExampleQueue)\nСообщение, передаваемое в очередь, является экземпляромTextMessage.\nСодержимым сообщения является объект JSON с полями:\ndataUUID — идентификатор данных по форме записи реестра\nexecutionID — идентификатор блокирующего процесса\ndocumentID — идентификатор документа реестра\nПосле того, как модуль обратится к внешней системе\nи выполнит необходимые действия, он должен вызвать метод API Synergy\nдля того, чтобы возвратить результат выполнения процесса и продолжить работу маршрута.\nДля того, чтобы это сделать, необходимо вызвать метод APIrest/api/processes/signal.\nПримечание\nСигнал блокирующему процессу для его разблокировки/блокировки\nнужно отправлять после того, как этот процесс был запущен, то есть после того как\nтранзакция с запуском процесса была завершена. Для этого, перед отправкой сигнала,\nпроверяйте на наличие такого процесса в БД. В противном случае, блокирующий процесс\nможет завершиться в транзакции, но в маршруте нет.\nВ примере кода ниже разблокировка маршрута осуществляется в методеonMessage.\nЕсли время выполнения действия значительно или зависит от внешних факторов\n(например, доступность интегрируемой системы,\nили необходимость ввода пользователем данных в интегрируемой системе),\nто разблокировка маршрута может произойти позже,\nв любой другой момент времени из другого метода,\nа сам метод onMessage должен завершиться без ошибок, «запомнив» переданные параметры.",
    "Цель данного вида интеграции — дать возможность повлиять на\nзапуск стандартного процесса и, при необходимости, прервать его.\nСтандартная функциональность платформы ARTA Synergy дает возможность запретить\nотправку документов на согласование, утверждение, если количество уровней\nоргструктуры между отправителем и получателем превышает некоторое\nнастроенное значение. Но в некоторых компаниях существуют более сложные\nправила, ограничивающие возможность отправки документов/работ. В этих\nслучаях необходима разработка данного обработчика.\nОбработчик может быть применён к процессам:\n«работа» (assignment-single)\n«согласование» (agreement-single)\n«утверждение» (approval-single)\n«ознакомление» (acquaintance-single)\n«отправка документа» (send-document)\n«общий процесс при запуске по формам» (common-process-by-form)\n«отправка документа по форме» (send-document-by-form)\nОбработчик представляет собой Java-класс, реализующий интерфейс\nkz.arta.synergy.integration.api.bp.StartHandlerIF\nДанный интерфейс находится в библиотекеintegration-api.jar,\nкоторую можно найти в установленном экземпляре ARTA Synergy в директории/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nИнтерфейс содержит два метода:\nmakeDecision()— проверяет возможно ли выполнение процесса\ngetResolution()— возвращает текст, который должен быть записан в ход\nисполнения\nБолее подробную информацию о полях методов можно посмотреть в javadoc\nк этим методам, которые доступны вintegration-api.jar(библиотека\nсодержит и скомпилированные классы, и исходный код).\nУстановка обработчика для процесса осуществляется с помощью\nконфигурационного файла${jboss.server.config.dir}/arta/process-handlers-configuration.xml,\nимеющего следующий формат:\nОбработчики выполняются последовательно до тех пор, пока методmakeDecision()одного из них не вернетfalse, после этого процесс\nпрерывается.\nБиблиотеку, содержащую обработчик необходимо скопировать в папку/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nПосле копирования библиотеки обработчика и изменения файлаprocess-handlers-configuration.xmlнеобходимо перезапустить JBoss.\nВнимание\nПроцессcommon-process-by-formзапускает процессыagreement-single,approval-single,acquaintance-single,assignment-single(подпроцессы). Поэтому, если обработчик будет\nзапрещать выполнение подпроцесса и при этом разрешать выполнение процессаcommon-process-by-form, то подпроцессы все равно будут прерваны.\nАналогично, если выполнениеcommon-process-by-formразрешено, а\nвыполнение подпроцесса запрещено, подпроцессы будут прерваны.",
    "С использованием этого способа интеграции был реализован внешний модуль,\nограничивающий перепоручение и отправку каких-либо работ на согласование\nпользователям определенных групп.\nДля установки внешнего модуля из репозитория необходимо установить пакетarta-synergy-ext-sendcontrol.\nДалее на остановленном JBoss в конфигурационном файле${jboss.server.config.dir}/arta/process-handlers-configuration.xmlнеобходимо прописать следующие обработчики процесса:\nУстановка групп (каким группам пользователей Synergy) разрешать либо\nблокировать процессы осуществляется с помощью конфигурационного файла${jboss.server.config.dir}/arta/ext/send-control.xml. Пример настройки:",
    "REST API ARTA Synergy доступно только авторизованным пользователям.\nТип авторизации —BASICHTTP.\nМетоды API выполняются от имени того пользователя,\nкоторый авторизован. Имеются следующие типы авторизации:",
    "Авторизация пользователя по его логину и паролю приемлема в тех случаях,\nкогда приложение может знать текущий логин и пароль пользователя, например:\nПриложение предоставляет альтернативный интерфейс\nк некоторым модулям Synergy\n(мобильное приложение, десктопный клиент для хранилища)\nПриложение представляет собойserver-sideутилиту для синхронизации,\nдля которого создан выделенный пользователь,\nи его логин и пароль хранятся в конфигурационном файле на сервере.\nДля реализации данного типа авторизации надо передать в запросе заголовокAuthorizationсо значением:\nНапример:\nПример кода на JAVA:\nПример кода на JavaScript (jQuery):\nПример кода на PHP:",
    "Сессионная авторизации используется для встроенных WEB-модулей.\nПри cессионной авторизации также используется тип —BASICHTTP,\nно в качестве логина пользователя необходимо использовать\nзначение$sessionи в качестве пароля —\nполученное значениеsso_hash.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:\nПолучить значениеsso_hashавторизованного пользователя можно\nследующими способами:\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.Пример кода на JavaScript (jQuery):functiongetURLParameter(name){returndecodeURIComponent((newRegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[null,''])[1].replace(/\\+/g,'%20'))||null;}varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+getURLParameter('sso_hash')))}}$.ajax(settings).done(function(response){console.log(response);});\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.\nПример кода на JavaScript (jQuery):\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:{\"id\":\"Идентификатор текущего пользователя\",\"sso_hash\":\"hash-сумма для идентификации пользователя\",\"surname\":\"Фамилия текущего пользователя\",\"name\":\"Имя текущего пользователя\",\"patronymic\":\"Отчество текущего пользователя\"}Пример кода на JavaScript (jQuery):varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+$CURRENT_USER.sso_hash))}}$.ajax(settings).done(function(response){console.log(response);});ПримечаниеДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:\nПример кода на JavaScript (jQuery):\nПримечание\nДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.",
    "Модуль, который хочет авторизоваться от имени какого-либо пользователя таким способом,\nдолжен сгенерировать для него ключевую пару,\nобеспечив сохранность закрытого ключа.\nЗатем модуль сохраняет получивший открытый ключ для пользователя в Synergy,\nиспользуя следующий вызов API:\nЭтот вызов назначает ключ тому пользователю, от имени которого выполняется.\nПараметрuser_token_expire_intervalрегулирует интервал устаревания ключей авторизации.\nПример настройки интервала:\nПримечание\nИнтервал устаревания ключа указывается в минутах. Значение по умолчанию0, то есть если ранее для\nданного пользователя был сгенерирован другой ключ, то предыдущий автоматически становится недействительным.\nСоздать ключ можно только для существующего WEB-модуля,\nтак как для этого требуется идентификатор приложения.\nСовет\nЕсли у вас нет необходимости разрабатывать WEB модуль,\nно есть необходимость в использовании авторизации по ключам,\nможно добавить внешний модуль и отключить его использование\nв административном приложении SynergyAdmin для всех элементов оргструктуры.\nИспользование этого ключа для авторизации аналогично использованию сессионного ключа.\nТип авторизацииBasicHTTP,\nв качестве логина пользователя надо использовать строку$key,\nв качестве пароля — полученный с помощью API ключ.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:",
    "Web-приложение внешнего модуля открывается\nвiframeв окне основного приложения.\nПри этом рабочая область внешнего модуля\nзанимает всю область страницы, кроме панели меню и панели задач:\nВнешний WEB-модуль\nДля добавления нового модуля нужно перейти в\nКонфигуратор ‣ Настройки системы ‣ Управление модулями ‣ Внешние модули\nи нажать на кнопку «Добавить».\nВнешние модули\nВ открывшемся окне нужно заполнить следующие поля:\n«Название»- название модуля в соответствующем интерфейсе.\n«Название»- название модуля в соответствующем интерфейсе.\n«Код»- поле должно содержать уникальное значение.\n«Код»- поле должно содержать уникальное значение.\n«Адрес приложения»- поле для ввода URL.\n«Адрес приложения»- поле для ввода URL.\n«Описание модуля»- поле для описания данного модуля.\n«Описание модуля»- поле для описания данного модуля.\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.Добавление нового внешнего модуля\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.\nДобавление нового внешнего модуля\nПодсказка\nДобавить внешний web-модуль можно с помощью SQL-запроса\nв БДsynergy.outer_modules, вставив запись со следующими полями:\nid— идентификатор модуля, должен совпадать с идентификаторомвашего проекта в репозитории проектов\nnameru,namekz,nameen— название модуля на русском,\nказахском и английском языках соответственно\nurl— адрес приложения\ndescription— описание модуля\nactive— активен ли модуль, 1/0.\nДля реализации механизмаSSOприложений,\nARTA Synergy при загрузке внешнего web-модуля будет в строку URL\nдобавлять три параметра:\nlocale— локаль авторизованного пользователя\nsso_hash— hash-сумма для идентификации пользователя.\nhost— адрес, с которого загружено приложение Synergy\nНапример, если URL приложения\nто при обращении к модулю будет вызываться\nИнтегрированный модуль должен будет будет получить из URL\nпараметрsso_hashи запросить по REST API у ARTA Synergy\nинформацию об авторизованном пользователе (идентификатор, имя).\nЕсли метод REST API возвращает информацию о пользователе,\nэто подтверждает, что данный пользователь\nдействительно авторизован с данного хоста, в данном браузере.\nДалее строкаsso_hashможет быть использована дляСессионная авторизацияи вызова REST API Arta Synergy.\nВ ARTA Synergy реализована возможность обращения к ее модулям по относительной ссылке.\nТакая же возможность существует для внешних web-модулей. Переход по ссылке вида:\n#submodule=outer&outerModuleID='код_модуля'&прочие_параметры_по_желанию_модуля\nактивирует в Synergy заданный модуль и передаст ему заданные в url-e параметры\n(параметрыlocale,sso_hash,hostтакже будут переданы,\nнесмотря на то, что они отсутствуют в ссылке).\nЧасто возникает необходимость в этой ссылке передать ссылку на текущий документ.\nДля этого можно добавить в ссылку параметр,\nзначение которого будет равно${docID}—\nэта строка в web-интерфейсе проигрывателя форм Synergy\nбудет заменена на идентификатор данного документа.",
    "В бизнес-приложениях на базе Synergy может возникнуть необходимость работы из\nвнешних систем с формами Synergy. В этом случае можно использовать внешний проигрыватель форм.\nПроигрыватель форм - это инструмент, который даёт возможность работать с формами,\nсозданными и используемыми в Synergy, а также выполняет скрипты. При использовании\nво внешней системе проигрыватель позволяет:\nотображать и редактировать формы Synergy;\nнастраивать произвольный вид формы и ее компонентов, создавать новые компоненты;\nавтоматически заполнять поля формы данными из внешней системы;\nобеспечивать обратную связь от проигрывателя к серверу, используя механизм событий;\nобрабатывать наступившие события.\nПримечание\nПроигрыватель форм запускается на стороне клиента, поэтому все события\nи скрипты срабатывают только при открытом проигрывателе.",
    "Для подключения проигрывателя на страницу необходимо добавить код в разделhead:<script>FORM_PLAYER_URL_PREFIX = \"http://127.0.0.1:8080/Synergy/\";<!--служебная переменная для корректной работы компонента \"HTD-редактор\"--></script><linkrel=\"stylesheet\"href=\"http://127.0.0.1:8080/Synergy/js/form.player.css\"/><!--стандартный стиль компонентов формы--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/vendor.js\"type=\"text/javascript\"></script><!--ссылка на сторонние библиотеки--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/form.player.js\"type=\"text/javascript\"></script><!--ссылка на проигрыватель форм-->и вставить элемент для размещения проигрывателя в тело страницы:<divid=\"form_player_container\"><divid=\"form_player_div\"></div></div>\nДля подключения проигрывателя на страницу необходимо добавить код в разделhead:\nи вставить элемент для размещения проигрывателя в тело страницы:\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";//ссылка на экземпляр SynergyСоздание объекта проигрывателя выглядит следующим образом:'use strict';AS.OPTIONS.locale=\"ru\";AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";varportal={player:null,/*** очистить текущий проигрыватель форм*/clearPlayer:function(){if(portal.player){portal.player.destroy();}},/*** добавить новый проигрыватель форм*/createPlayer:function(formCode){portal.clearPlayer();portal.player=AS.FORMS.createPlayer();portal.player.showFormByCode(formCode);portal.player.view.appendTo($('#form_player_div'));}};$(document).ready(function(){AS.OPTIONS.login=\"login\";AS.OPTIONS.password=\"password\";portal.createPlayer(\"formCode\");});\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:\nСоздание объекта проигрывателя выглядит следующим образом:\nСм. также документацию поСкриптинг в формах.",
    "В данном разделе описываются основные примеры использования внешнего\nпроигрывателя форм. Каждый пример отражает одно из базовых требований\nк внешнему проигрывателю и содержит:\nописание примера;\nреализованный пример внешнего проигрывателя форм, встроенного во внешний портал (в данном случае - в портал документации);\nа также исходные коды JavaScript и CSS этих примеров.\nПримеры использования внешнего проигрывателя форм:\n6.7.2.1. Вариант 1. Отображение проигрывателя, встроенного во внешний портал\n6.7.2.2. Вариант 2. Изменение вида отображения формы согласно стилю портала (CSS)\n6.7.2.3. Вариант 3. Автозаполнение данных формы из внешнего портала\n6.7.2.4. Вариант 4. Дополнительная валидация формы\n6.7.2.5. Вариант 5. Создание нового компонента\n6.7.2.6. Вариант 6. Предварительное заполнение данных формы внешним порталом\n6.7.2.7. Вариант 7. Изменение компонента формы\n6.7.2.8. Вариант 8. Авторизация во внешнем проигрывателе",
    "Ссылки на модули и различные объекты Synergy\nможно использовать как внутри основного web-приложения\n(в этом случае предпочтительно использовать относительные\nссылки, чтобы не перезагружать страницу), так и во внешних\nсистемах.\nОбщий вид ссылок:\nгде\nhost- доменное имя или ip-адрес сервера Synergy\nport- порт\nApplication:Synergy- основное приложениеConfigurator- КонфигураторSynergyAdmin- административное приложение\nSynergy- основное приложение\nConfigurator- Конфигуратор\nSynergyAdmin- административное приложение\nparam1,param2- параметры абсолютной ссылки\nparam3,param4- параметры относительной ссылки\nПараметры абсолютной ссылки - это, как правило:\nlocale- локаль загружаемой системы\nnocache- специальный параметр, предотвращающий случайное кэширование\nостальные параметры можно передавать как параметры относительной ссылки.\nНиже для краткости будем приводить образец относительной ссылки",
    "#submodule=module_id\nгдеmodule_id:\nworkflow- Потоки работ\ncalendar- Ежедневник\nrepository- Хранилище\nplans- Проекты\npointers- Цели и показатели\nemployees- Сотрудники\nПри переходе по ссылке откроется указанный модуль.",
    "#submodule=common&file_identifier=some_file_id&action=open_document&document_identifier=some_doc_id\nПри переходе по такой ссылке откроется указанный документ с основным файлом,\nа если указанfile_identifier- то откроется документ с этим файлом.",
    "#submodule=plans&action=open_action&action_identifier=some_action_id&project_identifier=some_project_id\nПри переходе по такой ссылке откроется указанный проект,\nа если указанaction_identifier- то в проекте будет выделено\nэто мероприятие.",
    "#submodule=employees&innermodule=structure&action=open_user&user_identifier=some_user_id\nПри переходе по такой ссылке будет открыт модуль «Сотрудники»,\nа в нем - профиль указанного пользователя",
    "Если в абсолютной ссылке указать параметрnoCustomScripting,\nто все пользовательские ВМК, скрипты в формах и пользовательских\nкомпонентах будут отключены. Это можно использовать для отладки\nпользовательских компонентов, ВМК и скриптов на форме.",
    "ARTA Synergy работает на сервере приложений JBoss AS7.\nИнтеграционное приложение может представлять собойjar-файл либоwar-файл либо их комбинацию.\nЕсли приложение является одиночным файлом, его можно задеплоить,\nскопировав в директорию${jboss.home}/standalone/deployments.\nЕсли приложение состоит из нескольких файлов,\nнеобходимо создать*.earприложение.\nЕсли приложение имеет зависимости на внешние библиотеки\nи они находятся в модулях JBoss-а (${jboss.home}/modules),\nнеобходимо использовать их, прочие зависимости — помещать внутрь приложения.\nОпасно\nВ целях безопасности работы приложения Synergy и сервера приложений\nкатегорически запрещается помещать артефакты интеграционного модуля\nв приложениеSynergy.earи изменять состав модулей (${jboss.home}/modules).",
    "Существует два основных подхода для интеграции с Synergy:\nПрямая интеграция — интеграционные модули разрабатываются\nс использованием API Synergy и интегрируемых систем.\nСинхронизация данных между системами и координация обмена между ними\nостаётся за разработчиком интеграционного модуля\nСобытийная интеграция — когда какая-либо из подсистем Synergy\nгенерирует различные события, связанные с какими-либо данными.\nОбработчики этих событий (на стороне Synergy) при необходимости\nпреобразовывают данные событий и передают их интегрируемой системе\nчерез какой-либо транспортный уровень",
    "ARTA Synergy предоставляет API для доступа к своим функциям\nс помощью rest сервисов. Описание методов REST API можно\nнайти вданном разделе.\nАвторизация для всех методов API —BasicHTTP.",
    "Под «событием» мы будем подразумевать сообщение о каком-либо изменении\nв ARTA Synergy, содержащее тип события\nи минимально необходимые для получения связанной с событием информации\nлибо воздействия на Synergy данные. Обработчик события (или событий) —\nпрограммный модуль, читающий сообщения о событиях изJMSQueueилиJMSTopicи осуществляющий, при необходимости, доступ к экземпляру Synergy,\nсгенерировавшему сообщение, с помощью API Synergy.\nОбработчик событий является отдельным от ARTA Synergy приложением,\nкоторое может работать как на том же сервере приложений,\nчто и ARTA Synergy, так и на удалённом.\nКроме этого, обработчик события может иметь собственные конфигурационные файлы,\nнеобходимые для реализации целевого назначения.\nОбработчик событий может обрабатывать как конкретное событие\n(например,event.registers.formdata.add),\nтак и класс событий (например,event.registers.*).\nОбработка события может происходить в 3 этапа:\nПолучение события\nПолучение и преобразование необходимых обработчику данных\nПередача сформированного пакета данных далее (опционально)\nARTA Synergy генерирует событие в случае,\nесли для этого события настроены обработчики.\nОбработчики событий настраиваются в конфигурационном файле${jboss.home}/standalone/configuration/arta/api-observation-configuration.xml.\nПримечание\nПри установке Synergy файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xmlпо умолчанию не создается.\nСоздаете файлapi-observation-configuration.xmlв директории{$jboss.home}/standalone/configuration/arta/с содержимым:\nУказываете владельца файла:\nЗатем можете добавлять листенеры в файл.\nСообщение, помещаемое в очередьJMS,\nпредставляет собой экземплярjavax.jms.TextMessage.\nТело сообщения зависит от типа события,\nего описание можно посмотреть ниже среди описаний типов событий.\nКаждое событие содержит свойствоapi_event, указывающее на тип события,\nвызвавшего его (содержимое тега<event>event.registers.formdata.add</event>в конфигурационном файле).\nНапример:\nВ этом примере настроены обработчики:\njava:jboss/queues/Synergy/UsersQueueдля всех событий классаevent.users.*, т.е. всех событий, связанных с пользователями:event.users.account.change,event.users.formdata.change,event.users.account.addи т.д.\njava:jboss/queues/Synergy/RegisterCreateDocQueueдля события добавления записи реестраevent.registers.formdata.add.\nРассмотрим, например, код обработчика очередиUsersQueue:\nВ проектеblocking-process-templateреализован пример обработчика очереди.\nНиже описаны типы событий, которые могут быть сгенерированы ARTA Synergy.\nДля события[event.orgstructure.department.formdata.change]-\nидентификатор подразделения, для события[event.orgstructure.position.formdata.change]- идентификатор\nдолжности, для события[event.users.formdata.change]- идентификатор\nпользователя будет передаваться как основной параметр, остальные как\nсвойства. Получить их можно следующим образом:\n6.2.1. События пользователей\n6.2.2. События должностей\n6.2.3. События подразделений\n6.2.4. События реестров\n6.2.5. События адресной книги\n6.2.6. События работ\n6.2.7. События по документам\n6.2.8. События по формам\n6.2.9. События комментариев\n6.2.10. События администрирования\n6.2.11. Генерация произвольных событий\n6.2.12. Клиентские события Synergy\n6.2.13. Дополнительные атрибуты html-элементов",
    "Блокирующий процесс предназначен для того,\nчтобы предоставить возможность\nв маршрут активации/изменения/удаления реестра\nвставить асинхронный вызов внешнего модуля.\nОсновное отличие блокирующего процесса от событий реестра\nзаключается в том, что:\nпри использовании блокирующего процесса маршрут реестра\nдожидается ответа о результате выполнения операции внешним модулем\nблокирующий процесс может завершиться положительно или отрицательно,\nчто повлияет на дальнейшую работу маршрута\n(Если блокирующий процесс завершится отрицательно —\nпроцесс остановится, если положительно — то продолжит работу дальше)\nМодуль, реализующий блокирующий процесс, должен представлять собой отдельное приложение,\nзадеплоенное на jboss в соответствии с правилами,\nописанными в разделеКак задеплоить интеграционное приложение.\nЗапускается код модуля блокирующего процесса через очередь.\nПри старте этапа маршрута, содержащего блокирующий процесс,\nв очередь добавляется сообщение, которое должен обработать модуль.",
    "Для того, чтобы добавить блокирующий процесс,\nнеобходимо выполнить следующие действия:\nДобавить процесс с в маршрут реестра в конфигураторе:Название процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nДобавить процесс с в маршрут реестра в конфигураторе:\nНазвание процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:<jms-queuename=\"ExampleQueue\"><entryname=\"java:jboss/queues/Integration/ExampleQueue\"/><durable>true</durable></jms-queue>\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:<listener><queue>java:jboss/queues/Integration/ExampleQueue</queue><event>event.blocking.example</event></listener>\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:\nОбратите внимание, что название блокирующего процесса,\nуказанное в маршруте в конфигураторе должно быть\nравно значению тега в конфигурационном файлеapi-observation-configuration.xml(в данном примере:event.blocking.example)\nи название очереди должно совпадать со значением тегаqueueконфигурационного файлаapi-observation-configuration.xml(в данном примере:java:jboss/queues/Integration/ExampleQueue)\nСообщение, передаваемое в очередь, является экземпляромTextMessage.\nСодержимым сообщения является объект JSON с полями:\ndataUUID — идентификатор данных по форме записи реестра\nexecutionID — идентификатор блокирующего процесса\ndocumentID — идентификатор документа реестра\nПосле того, как модуль обратится к внешней системе\nи выполнит необходимые действия, он должен вызвать метод API Synergy\nдля того, чтобы возвратить результат выполнения процесса и продолжить работу маршрута.\nДля того, чтобы это сделать, необходимо вызвать метод APIrest/api/processes/signal.\nПримечание\nСигнал блокирующему процессу для его разблокировки/блокировки\nнужно отправлять после того, как этот процесс был запущен, то есть после того как\nтранзакция с запуском процесса была завершена. Для этого, перед отправкой сигнала,\nпроверяйте на наличие такого процесса в БД. В противном случае, блокирующий процесс\nможет завершиться в транзакции, но в маршруте нет.\nВ примере кода ниже разблокировка маршрута осуществляется в методеonMessage.\nЕсли время выполнения действия значительно или зависит от внешних факторов\n(например, доступность интегрируемой системы,\nили необходимость ввода пользователем данных в интегрируемой системе),\nто разблокировка маршрута может произойти позже,\nв любой другой момент времени из другого метода,\nа сам метод onMessage должен завершиться без ошибок, «запомнив» переданные параметры.",
    "Цель данного вида интеграции — дать возможность повлиять на\nзапуск стандартного процесса и, при необходимости, прервать его.\nСтандартная функциональность платформы ARTA Synergy дает возможность запретить\nотправку документов на согласование, утверждение, если количество уровней\nоргструктуры между отправителем и получателем превышает некоторое\nнастроенное значение. Но в некоторых компаниях существуют более сложные\nправила, ограничивающие возможность отправки документов/работ. В этих\nслучаях необходима разработка данного обработчика.\nОбработчик может быть применён к процессам:\n«работа» (assignment-single)\n«согласование» (agreement-single)\n«утверждение» (approval-single)\n«ознакомление» (acquaintance-single)\n«отправка документа» (send-document)\n«общий процесс при запуске по формам» (common-process-by-form)\n«отправка документа по форме» (send-document-by-form)\nОбработчик представляет собой Java-класс, реализующий интерфейс\nkz.arta.synergy.integration.api.bp.StartHandlerIF\nДанный интерфейс находится в библиотекеintegration-api.jar,\nкоторую можно найти в установленном экземпляре ARTA Synergy в директории/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nИнтерфейс содержит два метода:\nmakeDecision()— проверяет возможно ли выполнение процесса\ngetResolution()— возвращает текст, который должен быть записан в ход\nисполнения\nБолее подробную информацию о полях методов можно посмотреть в javadoc\nк этим методам, которые доступны вintegration-api.jar(библиотека\nсодержит и скомпилированные классы, и исходный код).\nУстановка обработчика для процесса осуществляется с помощью\nконфигурационного файла${jboss.server.config.dir}/arta/process-handlers-configuration.xml,\nимеющего следующий формат:\nОбработчики выполняются последовательно до тех пор, пока методmakeDecision()одного из них не вернетfalse, после этого процесс\nпрерывается.\nБиблиотеку, содержащую обработчик необходимо скопировать в папку/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nПосле копирования библиотеки обработчика и изменения файлаprocess-handlers-configuration.xmlнеобходимо перезапустить JBoss.\nВнимание\nПроцессcommon-process-by-formзапускает процессыagreement-single,approval-single,acquaintance-single,assignment-single(подпроцессы). Поэтому, если обработчик будет\nзапрещать выполнение подпроцесса и при этом разрешать выполнение процессаcommon-process-by-form, то подпроцессы все равно будут прерваны.\nАналогично, если выполнениеcommon-process-by-formразрешено, а\nвыполнение подпроцесса запрещено, подпроцессы будут прерваны.",
    "С использованием этого способа интеграции был реализован внешний модуль,\nограничивающий перепоручение и отправку каких-либо работ на согласование\nпользователям определенных групп.\nДля установки внешнего модуля из репозитория необходимо установить пакетarta-synergy-ext-sendcontrol.\nДалее на остановленном JBoss в конфигурационном файле${jboss.server.config.dir}/arta/process-handlers-configuration.xmlнеобходимо прописать следующие обработчики процесса:\nУстановка групп (каким группам пользователей Synergy) разрешать либо\nблокировать процессы осуществляется с помощью конфигурационного файла${jboss.server.config.dir}/arta/ext/send-control.xml. Пример настройки:",
    "REST API ARTA Synergy доступно только авторизованным пользователям.\nТип авторизации —BASICHTTP.\nМетоды API выполняются от имени того пользователя,\nкоторый авторизован. Имеются следующие типы авторизации:",
    "Авторизация пользователя по его логину и паролю приемлема в тех случаях,\nкогда приложение может знать текущий логин и пароль пользователя, например:\nПриложение предоставляет альтернативный интерфейс\nк некоторым модулям Synergy\n(мобильное приложение, десктопный клиент для хранилища)\nПриложение представляет собойserver-sideутилиту для синхронизации,\nдля которого создан выделенный пользователь,\nи его логин и пароль хранятся в конфигурационном файле на сервере.\nДля реализации данного типа авторизации надо передать в запросе заголовокAuthorizationсо значением:\nНапример:\nПример кода на JAVA:\nПример кода на JavaScript (jQuery):\nПример кода на PHP:",
    "Сессионная авторизации используется для встроенных WEB-модулей.\nПри cессионной авторизации также используется тип —BASICHTTP,\nно в качестве логина пользователя необходимо использовать\nзначение$sessionи в качестве пароля —\nполученное значениеsso_hash.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:\nПолучить значениеsso_hashавторизованного пользователя можно\nследующими способами:\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.Пример кода на JavaScript (jQuery):functiongetURLParameter(name){returndecodeURIComponent((newRegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[null,''])[1].replace(/\\+/g,'%20'))||null;}varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+getURLParameter('sso_hash')))}}$.ajax(settings).done(function(response){console.log(response);});\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.\nПример кода на JavaScript (jQuery):\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:{\"id\":\"Идентификатор текущего пользователя\",\"sso_hash\":\"hash-сумма для идентификации пользователя\",\"surname\":\"Фамилия текущего пользователя\",\"name\":\"Имя текущего пользователя\",\"patronymic\":\"Отчество текущего пользователя\"}Пример кода на JavaScript (jQuery):varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+$CURRENT_USER.sso_hash))}}$.ajax(settings).done(function(response){console.log(response);});ПримечаниеДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:\nПример кода на JavaScript (jQuery):\nПримечание\nДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.",
    "Модуль, который хочет авторизоваться от имени какого-либо пользователя таким способом,\nдолжен сгенерировать для него ключевую пару,\nобеспечив сохранность закрытого ключа.\nЗатем модуль сохраняет получивший открытый ключ для пользователя в Synergy,\nиспользуя следующий вызов API:\nЭтот вызов назначает ключ тому пользователю, от имени которого выполняется.\nПараметрuser_token_expire_intervalрегулирует интервал устаревания ключей авторизации.\nПример настройки интервала:\nПримечание\nИнтервал устаревания ключа указывается в минутах. Значение по умолчанию0, то есть если ранее для\nданного пользователя был сгенерирован другой ключ, то предыдущий автоматически становится недействительным.\nСоздать ключ можно только для существующего WEB-модуля,\nтак как для этого требуется идентификатор приложения.\nСовет\nЕсли у вас нет необходимости разрабатывать WEB модуль,\nно есть необходимость в использовании авторизации по ключам,\nможно добавить внешний модуль и отключить его использование\nв административном приложении SynergyAdmin для всех элементов оргструктуры.\nИспользование этого ключа для авторизации аналогично использованию сессионного ключа.\nТип авторизацииBasicHTTP,\nв качестве логина пользователя надо использовать строку$key,\nв качестве пароля — полученный с помощью API ключ.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:",
    "Web-приложение внешнего модуля открывается\nвiframeв окне основного приложения.\nПри этом рабочая область внешнего модуля\nзанимает всю область страницы, кроме панели меню и панели задач:\nВнешний WEB-модуль\nДля добавления нового модуля нужно перейти в\nКонфигуратор ‣ Настройки системы ‣ Управление модулями ‣ Внешние модули\nи нажать на кнопку «Добавить».\nВнешние модули\nВ открывшемся окне нужно заполнить следующие поля:\n«Название»- название модуля в соответствующем интерфейсе.\n«Название»- название модуля в соответствующем интерфейсе.\n«Код»- поле должно содержать уникальное значение.\n«Код»- поле должно содержать уникальное значение.\n«Адрес приложения»- поле для ввода URL.\n«Адрес приложения»- поле для ввода URL.\n«Описание модуля»- поле для описания данного модуля.\n«Описание модуля»- поле для описания данного модуля.\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.Добавление нового внешнего модуля\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.\nДобавление нового внешнего модуля\nПодсказка\nДобавить внешний web-модуль можно с помощью SQL-запроса\nв БДsynergy.outer_modules, вставив запись со следующими полями:\nid— идентификатор модуля, должен совпадать с идентификаторомвашего проекта в репозитории проектов\nnameru,namekz,nameen— название модуля на русском,\nказахском и английском языках соответственно\nurl— адрес приложения\ndescription— описание модуля\nactive— активен ли модуль, 1/0.\nДля реализации механизмаSSOприложений,\nARTA Synergy при загрузке внешнего web-модуля будет в строку URL\nдобавлять три параметра:\nlocale— локаль авторизованного пользователя\nsso_hash— hash-сумма для идентификации пользователя.\nhost— адрес, с которого загружено приложение Synergy\nНапример, если URL приложения\nто при обращении к модулю будет вызываться\nИнтегрированный модуль должен будет будет получить из URL\nпараметрsso_hashи запросить по REST API у ARTA Synergy\nинформацию об авторизованном пользователе (идентификатор, имя).\nЕсли метод REST API возвращает информацию о пользователе,\nэто подтверждает, что данный пользователь\nдействительно авторизован с данного хоста, в данном браузере.\nДалее строкаsso_hashможет быть использована дляСессионная авторизацияи вызова REST API Arta Synergy.\nВ ARTA Synergy реализована возможность обращения к ее модулям по относительной ссылке.\nТакая же возможность существует для внешних web-модулей. Переход по ссылке вида:\n#submodule=outer&outerModuleID='код_модуля'&прочие_параметры_по_желанию_модуля\nактивирует в Synergy заданный модуль и передаст ему заданные в url-e параметры\n(параметрыlocale,sso_hash,hostтакже будут переданы,\nнесмотря на то, что они отсутствуют в ссылке).\nЧасто возникает необходимость в этой ссылке передать ссылку на текущий документ.\nДля этого можно добавить в ссылку параметр,\nзначение которого будет равно${docID}—\nэта строка в web-интерфейсе проигрывателя форм Synergy\nбудет заменена на идентификатор данного документа.",
    "В бизнес-приложениях на базе Synergy может возникнуть необходимость работы из\nвнешних систем с формами Synergy. В этом случае можно использовать внешний проигрыватель форм.\nПроигрыватель форм - это инструмент, который даёт возможность работать с формами,\nсозданными и используемыми в Synergy, а также выполняет скрипты. При использовании\nво внешней системе проигрыватель позволяет:\nотображать и редактировать формы Synergy;\nнастраивать произвольный вид формы и ее компонентов, создавать новые компоненты;\nавтоматически заполнять поля формы данными из внешней системы;\nобеспечивать обратную связь от проигрывателя к серверу, используя механизм событий;\nобрабатывать наступившие события.\nПримечание\nПроигрыватель форм запускается на стороне клиента, поэтому все события\nи скрипты срабатывают только при открытом проигрывателе.",
    "Для подключения проигрывателя на страницу необходимо добавить код в разделhead:<script>FORM_PLAYER_URL_PREFIX = \"http://127.0.0.1:8080/Synergy/\";<!--служебная переменная для корректной работы компонента \"HTD-редактор\"--></script><linkrel=\"stylesheet\"href=\"http://127.0.0.1:8080/Synergy/js/form.player.css\"/><!--стандартный стиль компонентов формы--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/vendor.js\"type=\"text/javascript\"></script><!--ссылка на сторонние библиотеки--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/form.player.js\"type=\"text/javascript\"></script><!--ссылка на проигрыватель форм-->и вставить элемент для размещения проигрывателя в тело страницы:<divid=\"form_player_container\"><divid=\"form_player_div\"></div></div>\nДля подключения проигрывателя на страницу необходимо добавить код в разделhead:\nи вставить элемент для размещения проигрывателя в тело страницы:\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";//ссылка на экземпляр SynergyСоздание объекта проигрывателя выглядит следующим образом:'use strict';AS.OPTIONS.locale=\"ru\";AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";varportal={player:null,/*** очистить текущий проигрыватель форм*/clearPlayer:function(){if(portal.player){portal.player.destroy();}},/*** добавить новый проигрыватель форм*/createPlayer:function(formCode){portal.clearPlayer();portal.player=AS.FORMS.createPlayer();portal.player.showFormByCode(formCode);portal.player.view.appendTo($('#form_player_div'));}};$(document).ready(function(){AS.OPTIONS.login=\"login\";AS.OPTIONS.password=\"password\";portal.createPlayer(\"formCode\");});\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:\nСоздание объекта проигрывателя выглядит следующим образом:\nСм. также документацию поСкриптинг в формах.",
    "В данном разделе описываются основные примеры использования внешнего\nпроигрывателя форм. Каждый пример отражает одно из базовых требований\nк внешнему проигрывателю и содержит:\nописание примера;\nреализованный пример внешнего проигрывателя форм, встроенного во внешний портал (в данном случае - в портал документации);\nа также исходные коды JavaScript и CSS этих примеров.\nПримеры использования внешнего проигрывателя форм:\n6.7.2.1. Вариант 1. Отображение проигрывателя, встроенного во внешний портал\n6.7.2.2. Вариант 2. Изменение вида отображения формы согласно стилю портала (CSS)\n6.7.2.3. Вариант 3. Автозаполнение данных формы из внешнего портала\n6.7.2.4. Вариант 4. Дополнительная валидация формы\n6.7.2.5. Вариант 5. Создание нового компонента\n6.7.2.6. Вариант 6. Предварительное заполнение данных формы внешним порталом\n6.7.2.7. Вариант 7. Изменение компонента формы\n6.7.2.8. Вариант 8. Авторизация во внешнем проигрывателе",
    "Ссылки на модули и различные объекты Synergy\nможно использовать как внутри основного web-приложения\n(в этом случае предпочтительно использовать относительные\nссылки, чтобы не перезагружать страницу), так и во внешних\nсистемах.\nОбщий вид ссылок:\nгде\nhost- доменное имя или ip-адрес сервера Synergy\nport- порт\nApplication:Synergy- основное приложениеConfigurator- КонфигураторSynergyAdmin- административное приложение\nSynergy- основное приложение\nConfigurator- Конфигуратор\nSynergyAdmin- административное приложение\nparam1,param2- параметры абсолютной ссылки\nparam3,param4- параметры относительной ссылки\nПараметры абсолютной ссылки - это, как правило:\nlocale- локаль загружаемой системы\nnocache- специальный параметр, предотвращающий случайное кэширование\nостальные параметры можно передавать как параметры относительной ссылки.\nНиже для краткости будем приводить образец относительной ссылки",
    "#submodule=module_id\nгдеmodule_id:\nworkflow- Потоки работ\ncalendar- Ежедневник\nrepository- Хранилище\nplans- Проекты\npointers- Цели и показатели\nemployees- Сотрудники\nПри переходе по ссылке откроется указанный модуль.",
    "#submodule=common&file_identifier=some_file_id&action=open_document&document_identifier=some_doc_id\nПри переходе по такой ссылке откроется указанный документ с основным файлом,\nа если указанfile_identifier- то откроется документ с этим файлом.",
    "#submodule=plans&action=open_action&action_identifier=some_action_id&project_identifier=some_project_id\nПри переходе по такой ссылке откроется указанный проект,\nа если указанaction_identifier- то в проекте будет выделено\nэто мероприятие.",
    "#submodule=employees&innermodule=structure&action=open_user&user_identifier=some_user_id\nПри переходе по такой ссылке будет открыт модуль «Сотрудники»,\nа в нем - профиль указанного пользователя",
    "Если в абсолютной ссылке указать параметрnoCustomScripting,\nто все пользовательские ВМК, скрипты в формах и пользовательских\nкомпонентах будут отключены. Это можно использовать для отладки\nпользовательских компонентов, ВМК и скриптов на форме.",
    "ARTA Synergy работает на сервере приложений JBoss AS7.\nИнтеграционное приложение может представлять собойjar-файл либоwar-файл либо их комбинацию.\nЕсли приложение является одиночным файлом, его можно задеплоить,\nскопировав в директорию${jboss.home}/standalone/deployments.\nЕсли приложение состоит из нескольких файлов,\nнеобходимо создать*.earприложение.\nЕсли приложение имеет зависимости на внешние библиотеки\nи они находятся в модулях JBoss-а (${jboss.home}/modules),\nнеобходимо использовать их, прочие зависимости — помещать внутрь приложения.\nОпасно\nВ целях безопасности работы приложения Synergy и сервера приложений\nкатегорически запрещается помещать артефакты интеграционного модуля\nв приложениеSynergy.earи изменять состав модулей (${jboss.home}/modules).",
    "Существует два основных подхода для интеграции с Synergy:\nПрямая интеграция — интеграционные модули разрабатываются\nс использованием API Synergy и интегрируемых систем.\nСинхронизация данных между системами и координация обмена между ними\nостаётся за разработчиком интеграционного модуля\nСобытийная интеграция — когда какая-либо из подсистем Synergy\nгенерирует различные события, связанные с какими-либо данными.\nОбработчики этих событий (на стороне Synergy) при необходимости\nпреобразовывают данные событий и передают их интегрируемой системе\nчерез какой-либо транспортный уровень",
    "ARTA Synergy предоставляет API для доступа к своим функциям\nс помощью rest сервисов. Описание методов REST API можно\nнайти вданном разделе.\nАвторизация для всех методов API —BasicHTTP.",
    "Под «событием» мы будем подразумевать сообщение о каком-либо изменении\nв ARTA Synergy, содержащее тип события\nи минимально необходимые для получения связанной с событием информации\nлибо воздействия на Synergy данные. Обработчик события (или событий) —\nпрограммный модуль, читающий сообщения о событиях изJMSQueueилиJMSTopicи осуществляющий, при необходимости, доступ к экземпляру Synergy,\nсгенерировавшему сообщение, с помощью API Synergy.\nОбработчик событий является отдельным от ARTA Synergy приложением,\nкоторое может работать как на том же сервере приложений,\nчто и ARTA Synergy, так и на удалённом.\nКроме этого, обработчик события может иметь собственные конфигурационные файлы,\nнеобходимые для реализации целевого назначения.\nОбработчик событий может обрабатывать как конкретное событие\n(например,event.registers.formdata.add),\nтак и класс событий (например,event.registers.*).\nОбработка события может происходить в 3 этапа:\nПолучение события\nПолучение и преобразование необходимых обработчику данных\nПередача сформированного пакета данных далее (опционально)\nARTA Synergy генерирует событие в случае,\nесли для этого события настроены обработчики.\nОбработчики событий настраиваются в конфигурационном файле${jboss.home}/standalone/configuration/arta/api-observation-configuration.xml.\nПримечание\nПри установке Synergy файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xmlпо умолчанию не создается.\nСоздаете файлapi-observation-configuration.xmlв директории{$jboss.home}/standalone/configuration/arta/с содержимым:\nУказываете владельца файла:\nЗатем можете добавлять листенеры в файл.\nСообщение, помещаемое в очередьJMS,\nпредставляет собой экземплярjavax.jms.TextMessage.\nТело сообщения зависит от типа события,\nего описание можно посмотреть ниже среди описаний типов событий.\nКаждое событие содержит свойствоapi_event, указывающее на тип события,\nвызвавшего его (содержимое тега<event>event.registers.formdata.add</event>в конфигурационном файле).\nНапример:\nВ этом примере настроены обработчики:\njava:jboss/queues/Synergy/UsersQueueдля всех событий классаevent.users.*, т.е. всех событий, связанных с пользователями:event.users.account.change,event.users.formdata.change,event.users.account.addи т.д.\njava:jboss/queues/Synergy/RegisterCreateDocQueueдля события добавления записи реестраevent.registers.formdata.add.\nРассмотрим, например, код обработчика очередиUsersQueue:\nВ проектеblocking-process-templateреализован пример обработчика очереди.\nНиже описаны типы событий, которые могут быть сгенерированы ARTA Synergy.\nДля события[event.orgstructure.department.formdata.change]-\nидентификатор подразделения, для события[event.orgstructure.position.formdata.change]- идентификатор\nдолжности, для события[event.users.formdata.change]- идентификатор\nпользователя будет передаваться как основной параметр, остальные как\nсвойства. Получить их можно следующим образом:\n6.2.1. События пользователей\n6.2.2. События должностей\n6.2.3. События подразделений\n6.2.4. События реестров\n6.2.5. События адресной книги\n6.2.6. События работ\n6.2.7. События по документам\n6.2.8. События по формам\n6.2.9. События комментариев\n6.2.10. События администрирования\n6.2.11. Генерация произвольных событий\n6.2.12. Клиентские события Synergy\n6.2.13. Дополнительные атрибуты html-элементов",
    "Блокирующий процесс предназначен для того,\nчтобы предоставить возможность\nв маршрут активации/изменения/удаления реестра\nвставить асинхронный вызов внешнего модуля.\nОсновное отличие блокирующего процесса от событий реестра\nзаключается в том, что:\nпри использовании блокирующего процесса маршрут реестра\nдожидается ответа о результате выполнения операции внешним модулем\nблокирующий процесс может завершиться положительно или отрицательно,\nчто повлияет на дальнейшую работу маршрута\n(Если блокирующий процесс завершится отрицательно —\nпроцесс остановится, если положительно — то продолжит работу дальше)\nМодуль, реализующий блокирующий процесс, должен представлять собой отдельное приложение,\nзадеплоенное на jboss в соответствии с правилами,\nописанными в разделеКак задеплоить интеграционное приложение.\nЗапускается код модуля блокирующего процесса через очередь.\nПри старте этапа маршрута, содержащего блокирующий процесс,\nв очередь добавляется сообщение, которое должен обработать модуль.",
    "Для того, чтобы добавить блокирующий процесс,\nнеобходимо выполнить следующие действия:\nДобавить процесс с в маршрут реестра в конфигураторе:Название процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nДобавить процесс с в маршрут реестра в конфигураторе:\nНазвание процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:<jms-queuename=\"ExampleQueue\"><entryname=\"java:jboss/queues/Integration/ExampleQueue\"/><durable>true</durable></jms-queue>\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:<listener><queue>java:jboss/queues/Integration/ExampleQueue</queue><event>event.blocking.example</event></listener>\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:\nОбратите внимание, что название блокирующего процесса,\nуказанное в маршруте в конфигураторе должно быть\nравно значению тега в конфигурационном файлеapi-observation-configuration.xml(в данном примере:event.blocking.example)\nи название очереди должно совпадать со значением тегаqueueконфигурационного файлаapi-observation-configuration.xml(в данном примере:java:jboss/queues/Integration/ExampleQueue)\nСообщение, передаваемое в очередь, является экземпляромTextMessage.\nСодержимым сообщения является объект JSON с полями:\ndataUUID — идентификатор данных по форме записи реестра\nexecutionID — идентификатор блокирующего процесса\ndocumentID — идентификатор документа реестра\nПосле того, как модуль обратится к внешней системе\nи выполнит необходимые действия, он должен вызвать метод API Synergy\nдля того, чтобы возвратить результат выполнения процесса и продолжить работу маршрута.\nДля того, чтобы это сделать, необходимо вызвать метод APIrest/api/processes/signal.\nПримечание\nСигнал блокирующему процессу для его разблокировки/блокировки\nнужно отправлять после того, как этот процесс был запущен, то есть после того как\nтранзакция с запуском процесса была завершена. Для этого, перед отправкой сигнала,\nпроверяйте на наличие такого процесса в БД. В противном случае, блокирующий процесс\nможет завершиться в транзакции, но в маршруте нет.\nВ примере кода ниже разблокировка маршрута осуществляется в методеonMessage.\nЕсли время выполнения действия значительно или зависит от внешних факторов\n(например, доступность интегрируемой системы,\nили необходимость ввода пользователем данных в интегрируемой системе),\nто разблокировка маршрута может произойти позже,\nв любой другой момент времени из другого метода,\nа сам метод onMessage должен завершиться без ошибок, «запомнив» переданные параметры.",
    "Цель данного вида интеграции — дать возможность повлиять на\nзапуск стандартного процесса и, при необходимости, прервать его.\nСтандартная функциональность платформы ARTA Synergy дает возможность запретить\nотправку документов на согласование, утверждение, если количество уровней\nоргструктуры между отправителем и получателем превышает некоторое\nнастроенное значение. Но в некоторых компаниях существуют более сложные\nправила, ограничивающие возможность отправки документов/работ. В этих\nслучаях необходима разработка данного обработчика.\nОбработчик может быть применён к процессам:\n«работа» (assignment-single)\n«согласование» (agreement-single)\n«утверждение» (approval-single)\n«ознакомление» (acquaintance-single)\n«отправка документа» (send-document)\n«общий процесс при запуске по формам» (common-process-by-form)\n«отправка документа по форме» (send-document-by-form)\nОбработчик представляет собой Java-класс, реализующий интерфейс\nkz.arta.synergy.integration.api.bp.StartHandlerIF\nДанный интерфейс находится в библиотекеintegration-api.jar,\nкоторую можно найти в установленном экземпляре ARTA Synergy в директории/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nИнтерфейс содержит два метода:\nmakeDecision()— проверяет возможно ли выполнение процесса\ngetResolution()— возвращает текст, который должен быть записан в ход\nисполнения\nБолее подробную информацию о полях методов можно посмотреть в javadoc\nк этим методам, которые доступны вintegration-api.jar(библиотека\nсодержит и скомпилированные классы, и исходный код).\nУстановка обработчика для процесса осуществляется с помощью\nконфигурационного файла${jboss.server.config.dir}/arta/process-handlers-configuration.xml,\nимеющего следующий формат:\nОбработчики выполняются последовательно до тех пор, пока методmakeDecision()одного из них не вернетfalse, после этого процесс\nпрерывается.\nБиблиотеку, содержащую обработчик необходимо скопировать в папку/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nПосле копирования библиотеки обработчика и изменения файлаprocess-handlers-configuration.xmlнеобходимо перезапустить JBoss.\nВнимание\nПроцессcommon-process-by-formзапускает процессыagreement-single,approval-single,acquaintance-single,assignment-single(подпроцессы). Поэтому, если обработчик будет\nзапрещать выполнение подпроцесса и при этом разрешать выполнение процессаcommon-process-by-form, то подпроцессы все равно будут прерваны.\nАналогично, если выполнениеcommon-process-by-formразрешено, а\nвыполнение подпроцесса запрещено, подпроцессы будут прерваны.",
    "С использованием этого способа интеграции был реализован внешний модуль,\nограничивающий перепоручение и отправку каких-либо работ на согласование\nпользователям определенных групп.\nДля установки внешнего модуля из репозитория необходимо установить пакетarta-synergy-ext-sendcontrol.\nДалее на остановленном JBoss в конфигурационном файле${jboss.server.config.dir}/arta/process-handlers-configuration.xmlнеобходимо прописать следующие обработчики процесса:\nУстановка групп (каким группам пользователей Synergy) разрешать либо\nблокировать процессы осуществляется с помощью конфигурационного файла${jboss.server.config.dir}/arta/ext/send-control.xml. Пример настройки:",
    "REST API ARTA Synergy доступно только авторизованным пользователям.\nТип авторизации —BASICHTTP.\nМетоды API выполняются от имени того пользователя,\nкоторый авторизован. Имеются следующие типы авторизации:",
    "Авторизация пользователя по его логину и паролю приемлема в тех случаях,\nкогда приложение может знать текущий логин и пароль пользователя, например:\nПриложение предоставляет альтернативный интерфейс\nк некоторым модулям Synergy\n(мобильное приложение, десктопный клиент для хранилища)\nПриложение представляет собойserver-sideутилиту для синхронизации,\nдля которого создан выделенный пользователь,\nи его логин и пароль хранятся в конфигурационном файле на сервере.\nДля реализации данного типа авторизации надо передать в запросе заголовокAuthorizationсо значением:\nНапример:\nПример кода на JAVA:\nПример кода на JavaScript (jQuery):\nПример кода на PHP:",
    "Сессионная авторизации используется для встроенных WEB-модулей.\nПри cессионной авторизации также используется тип —BASICHTTP,\nно в качестве логина пользователя необходимо использовать\nзначение$sessionи в качестве пароля —\nполученное значениеsso_hash.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:\nПолучить значениеsso_hashавторизованного пользователя можно\nследующими способами:\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.Пример кода на JavaScript (jQuery):functiongetURLParameter(name){returndecodeURIComponent((newRegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[null,''])[1].replace(/\\+/g,'%20'))||null;}varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+getURLParameter('sso_hash')))}}$.ajax(settings).done(function(response){console.log(response);});\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.\nПример кода на JavaScript (jQuery):\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:{\"id\":\"Идентификатор текущего пользователя\",\"sso_hash\":\"hash-сумма для идентификации пользователя\",\"surname\":\"Фамилия текущего пользователя\",\"name\":\"Имя текущего пользователя\",\"patronymic\":\"Отчество текущего пользователя\"}Пример кода на JavaScript (jQuery):varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+$CURRENT_USER.sso_hash))}}$.ajax(settings).done(function(response){console.log(response);});ПримечаниеДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:\nПример кода на JavaScript (jQuery):\nПримечание\nДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.",
    "Модуль, который хочет авторизоваться от имени какого-либо пользователя таким способом,\nдолжен сгенерировать для него ключевую пару,\nобеспечив сохранность закрытого ключа.\nЗатем модуль сохраняет получивший открытый ключ для пользователя в Synergy,\nиспользуя следующий вызов API:\nЭтот вызов назначает ключ тому пользователю, от имени которого выполняется.\nПараметрuser_token_expire_intervalрегулирует интервал устаревания ключей авторизации.\nПример настройки интервала:\nПримечание\nИнтервал устаревания ключа указывается в минутах. Значение по умолчанию0, то есть если ранее для\nданного пользователя был сгенерирован другой ключ, то предыдущий автоматически становится недействительным.\nСоздать ключ можно только для существующего WEB-модуля,\nтак как для этого требуется идентификатор приложения.\nСовет\nЕсли у вас нет необходимости разрабатывать WEB модуль,\nно есть необходимость в использовании авторизации по ключам,\nможно добавить внешний модуль и отключить его использование\nв административном приложении SynergyAdmin для всех элементов оргструктуры.\nИспользование этого ключа для авторизации аналогично использованию сессионного ключа.\nТип авторизацииBasicHTTP,\nв качестве логина пользователя надо использовать строку$key,\nв качестве пароля — полученный с помощью API ключ.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:",
    "Web-приложение внешнего модуля открывается\nвiframeв окне основного приложения.\nПри этом рабочая область внешнего модуля\nзанимает всю область страницы, кроме панели меню и панели задач:\nВнешний WEB-модуль\nДля добавления нового модуля нужно перейти в\nКонфигуратор ‣ Настройки системы ‣ Управление модулями ‣ Внешние модули\nи нажать на кнопку «Добавить».\nВнешние модули\nВ открывшемся окне нужно заполнить следующие поля:\n«Название»- название модуля в соответствующем интерфейсе.\n«Название»- название модуля в соответствующем интерфейсе.\n«Код»- поле должно содержать уникальное значение.\n«Код»- поле должно содержать уникальное значение.\n«Адрес приложения»- поле для ввода URL.\n«Адрес приложения»- поле для ввода URL.\n«Описание модуля»- поле для описания данного модуля.\n«Описание модуля»- поле для описания данного модуля.\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.Добавление нового внешнего модуля\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.\nДобавление нового внешнего модуля\nПодсказка\nДобавить внешний web-модуль можно с помощью SQL-запроса\nв БДsynergy.outer_modules, вставив запись со следующими полями:\nid— идентификатор модуля, должен совпадать с идентификаторомвашего проекта в репозитории проектов\nnameru,namekz,nameen— название модуля на русском,\nказахском и английском языках соответственно\nurl— адрес приложения\ndescription— описание модуля\nactive— активен ли модуль, 1/0.\nДля реализации механизмаSSOприложений,\nARTA Synergy при загрузке внешнего web-модуля будет в строку URL\nдобавлять три параметра:\nlocale— локаль авторизованного пользователя\nsso_hash— hash-сумма для идентификации пользователя.\nhost— адрес, с которого загружено приложение Synergy\nНапример, если URL приложения\nто при обращении к модулю будет вызываться\nИнтегрированный модуль должен будет будет получить из URL\nпараметрsso_hashи запросить по REST API у ARTA Synergy\nинформацию об авторизованном пользователе (идентификатор, имя).\nЕсли метод REST API возвращает информацию о пользователе,\nэто подтверждает, что данный пользователь\nдействительно авторизован с данного хоста, в данном браузере.\nДалее строкаsso_hashможет быть использована дляСессионная авторизацияи вызова REST API Arta Synergy.\nВ ARTA Synergy реализована возможность обращения к ее модулям по относительной ссылке.\nТакая же возможность существует для внешних web-модулей. Переход по ссылке вида:\n#submodule=outer&outerModuleID='код_модуля'&прочие_параметры_по_желанию_модуля\nактивирует в Synergy заданный модуль и передаст ему заданные в url-e параметры\n(параметрыlocale,sso_hash,hostтакже будут переданы,\nнесмотря на то, что они отсутствуют в ссылке).\nЧасто возникает необходимость в этой ссылке передать ссылку на текущий документ.\nДля этого можно добавить в ссылку параметр,\nзначение которого будет равно${docID}—\nэта строка в web-интерфейсе проигрывателя форм Synergy\nбудет заменена на идентификатор данного документа.",
    "В бизнес-приложениях на базе Synergy может возникнуть необходимость работы из\nвнешних систем с формами Synergy. В этом случае можно использовать внешний проигрыватель форм.\nПроигрыватель форм - это инструмент, который даёт возможность работать с формами,\nсозданными и используемыми в Synergy, а также выполняет скрипты. При использовании\nво внешней системе проигрыватель позволяет:\nотображать и редактировать формы Synergy;\nнастраивать произвольный вид формы и ее компонентов, создавать новые компоненты;\nавтоматически заполнять поля формы данными из внешней системы;\nобеспечивать обратную связь от проигрывателя к серверу, используя механизм событий;\nобрабатывать наступившие события.\nПримечание\nПроигрыватель форм запускается на стороне клиента, поэтому все события\nи скрипты срабатывают только при открытом проигрывателе.",
    "Для подключения проигрывателя на страницу необходимо добавить код в разделhead:<script>FORM_PLAYER_URL_PREFIX = \"http://127.0.0.1:8080/Synergy/\";<!--служебная переменная для корректной работы компонента \"HTD-редактор\"--></script><linkrel=\"stylesheet\"href=\"http://127.0.0.1:8080/Synergy/js/form.player.css\"/><!--стандартный стиль компонентов формы--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/vendor.js\"type=\"text/javascript\"></script><!--ссылка на сторонние библиотеки--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/form.player.js\"type=\"text/javascript\"></script><!--ссылка на проигрыватель форм-->и вставить элемент для размещения проигрывателя в тело страницы:<divid=\"form_player_container\"><divid=\"form_player_div\"></div></div>\nДля подключения проигрывателя на страницу необходимо добавить код в разделhead:\nи вставить элемент для размещения проигрывателя в тело страницы:\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";//ссылка на экземпляр SynergyСоздание объекта проигрывателя выглядит следующим образом:'use strict';AS.OPTIONS.locale=\"ru\";AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";varportal={player:null,/*** очистить текущий проигрыватель форм*/clearPlayer:function(){if(portal.player){portal.player.destroy();}},/*** добавить новый проигрыватель форм*/createPlayer:function(formCode){portal.clearPlayer();portal.player=AS.FORMS.createPlayer();portal.player.showFormByCode(formCode);portal.player.view.appendTo($('#form_player_div'));}};$(document).ready(function(){AS.OPTIONS.login=\"login\";AS.OPTIONS.password=\"password\";portal.createPlayer(\"formCode\");});\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:\nСоздание объекта проигрывателя выглядит следующим образом:\nСм. также документацию поСкриптинг в формах.",
    "В данном разделе описываются основные примеры использования внешнего\nпроигрывателя форм. Каждый пример отражает одно из базовых требований\nк внешнему проигрывателю и содержит:\nописание примера;\nреализованный пример внешнего проигрывателя форм, встроенного во внешний портал (в данном случае - в портал документации);\nа также исходные коды JavaScript и CSS этих примеров.\nПримеры использования внешнего проигрывателя форм:\n6.7.2.1. Вариант 1. Отображение проигрывателя, встроенного во внешний портал\n6.7.2.2. Вариант 2. Изменение вида отображения формы согласно стилю портала (CSS)\n6.7.2.3. Вариант 3. Автозаполнение данных формы из внешнего портала\n6.7.2.4. Вариант 4. Дополнительная валидация формы\n6.7.2.5. Вариант 5. Создание нового компонента\n6.7.2.6. Вариант 6. Предварительное заполнение данных формы внешним порталом\n6.7.2.7. Вариант 7. Изменение компонента формы\n6.7.2.8. Вариант 8. Авторизация во внешнем проигрывателе",
    "Ссылки на модули и различные объекты Synergy\nможно использовать как внутри основного web-приложения\n(в этом случае предпочтительно использовать относительные\nссылки, чтобы не перезагружать страницу), так и во внешних\nсистемах.\nОбщий вид ссылок:\nгде\nhost- доменное имя или ip-адрес сервера Synergy\nport- порт\nApplication:Synergy- основное приложениеConfigurator- КонфигураторSynergyAdmin- административное приложение\nSynergy- основное приложение\nConfigurator- Конфигуратор\nSynergyAdmin- административное приложение\nparam1,param2- параметры абсолютной ссылки\nparam3,param4- параметры относительной ссылки\nПараметры абсолютной ссылки - это, как правило:\nlocale- локаль загружаемой системы\nnocache- специальный параметр, предотвращающий случайное кэширование\nостальные параметры можно передавать как параметры относительной ссылки.\nНиже для краткости будем приводить образец относительной ссылки",
    "#submodule=module_id\nгдеmodule_id:\nworkflow- Потоки работ\ncalendar- Ежедневник\nrepository- Хранилище\nplans- Проекты\npointers- Цели и показатели\nemployees- Сотрудники\nПри переходе по ссылке откроется указанный модуль.",
    "#submodule=common&file_identifier=some_file_id&action=open_document&document_identifier=some_doc_id\nПри переходе по такой ссылке откроется указанный документ с основным файлом,\nа если указанfile_identifier- то откроется документ с этим файлом.",
    "#submodule=plans&action=open_action&action_identifier=some_action_id&project_identifier=some_project_id\nПри переходе по такой ссылке откроется указанный проект,\nа если указанaction_identifier- то в проекте будет выделено\nэто мероприятие.",
    "#submodule=employees&innermodule=structure&action=open_user&user_identifier=some_user_id\nПри переходе по такой ссылке будет открыт модуль «Сотрудники»,\nа в нем - профиль указанного пользователя",
    "Если в абсолютной ссылке указать параметрnoCustomScripting,\nто все пользовательские ВМК, скрипты в формах и пользовательских\nкомпонентах будут отключены. Это можно использовать для отладки\nпользовательских компонентов, ВМК и скриптов на форме.",
    "ARTA Synergy работает на сервере приложений JBoss AS7.\nИнтеграционное приложение может представлять собойjar-файл либоwar-файл либо их комбинацию.\nЕсли приложение является одиночным файлом, его можно задеплоить,\nскопировав в директорию${jboss.home}/standalone/deployments.\nЕсли приложение состоит из нескольких файлов,\nнеобходимо создать*.earприложение.\nЕсли приложение имеет зависимости на внешние библиотеки\nи они находятся в модулях JBoss-а (${jboss.home}/modules),\nнеобходимо использовать их, прочие зависимости — помещать внутрь приложения.\nОпасно\nВ целях безопасности работы приложения Synergy и сервера приложений\nкатегорически запрещается помещать артефакты интеграционного модуля\nв приложениеSynergy.earи изменять состав модулей (${jboss.home}/modules).",
    "Существует два основных подхода для интеграции с Synergy:\nПрямая интеграция — интеграционные модули разрабатываются\nс использованием API Synergy и интегрируемых систем.\nСинхронизация данных между системами и координация обмена между ними\nостаётся за разработчиком интеграционного модуля\nСобытийная интеграция — когда какая-либо из подсистем Synergy\nгенерирует различные события, связанные с какими-либо данными.\nОбработчики этих событий (на стороне Synergy) при необходимости\nпреобразовывают данные событий и передают их интегрируемой системе\nчерез какой-либо транспортный уровень",
    "ARTA Synergy предоставляет API для доступа к своим функциям\nс помощью rest сервисов. Описание методов REST API можно\nнайти вданном разделе.\nАвторизация для всех методов API —BasicHTTP.",
    "Под «событием» мы будем подразумевать сообщение о каком-либо изменении\nв ARTA Synergy, содержащее тип события\nи минимально необходимые для получения связанной с событием информации\nлибо воздействия на Synergy данные. Обработчик события (или событий) —\nпрограммный модуль, читающий сообщения о событиях изJMSQueueилиJMSTopicи осуществляющий, при необходимости, доступ к экземпляру Synergy,\nсгенерировавшему сообщение, с помощью API Synergy.\nОбработчик событий является отдельным от ARTA Synergy приложением,\nкоторое может работать как на том же сервере приложений,\nчто и ARTA Synergy, так и на удалённом.\nКроме этого, обработчик события может иметь собственные конфигурационные файлы,\nнеобходимые для реализации целевого назначения.\nОбработчик событий может обрабатывать как конкретное событие\n(например,event.registers.formdata.add),\nтак и класс событий (например,event.registers.*).\nОбработка события может происходить в 3 этапа:\nПолучение события\nПолучение и преобразование необходимых обработчику данных\nПередача сформированного пакета данных далее (опционально)\nARTA Synergy генерирует событие в случае,\nесли для этого события настроены обработчики.\nОбработчики событий настраиваются в конфигурационном файле${jboss.home}/standalone/configuration/arta/api-observation-configuration.xml.\nПримечание\nПри установке Synergy файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xmlпо умолчанию не создается.\nСоздаете файлapi-observation-configuration.xmlв директории{$jboss.home}/standalone/configuration/arta/с содержимым:\nУказываете владельца файла:\nЗатем можете добавлять листенеры в файл.\nСообщение, помещаемое в очередьJMS,\nпредставляет собой экземплярjavax.jms.TextMessage.\nТело сообщения зависит от типа события,\nего описание можно посмотреть ниже среди описаний типов событий.\nКаждое событие содержит свойствоapi_event, указывающее на тип события,\nвызвавшего его (содержимое тега<event>event.registers.formdata.add</event>в конфигурационном файле).\nНапример:\nВ этом примере настроены обработчики:\njava:jboss/queues/Synergy/UsersQueueдля всех событий классаevent.users.*, т.е. всех событий, связанных с пользователями:event.users.account.change,event.users.formdata.change,event.users.account.addи т.д.\njava:jboss/queues/Synergy/RegisterCreateDocQueueдля события добавления записи реестраevent.registers.formdata.add.\nРассмотрим, например, код обработчика очередиUsersQueue:\nВ проектеblocking-process-templateреализован пример обработчика очереди.\nНиже описаны типы событий, которые могут быть сгенерированы ARTA Synergy.\nДля события[event.orgstructure.department.formdata.change]-\nидентификатор подразделения, для события[event.orgstructure.position.formdata.change]- идентификатор\nдолжности, для события[event.users.formdata.change]- идентификатор\nпользователя будет передаваться как основной параметр, остальные как\nсвойства. Получить их можно следующим образом:\n6.2.1. События пользователей\n6.2.2. События должностей\n6.2.3. События подразделений\n6.2.4. События реестров\n6.2.5. События адресной книги\n6.2.6. События работ\n6.2.7. События по документам\n6.2.8. События по формам\n6.2.9. События комментариев\n6.2.10. События администрирования\n6.2.11. Генерация произвольных событий\n6.2.12. Клиентские события Synergy\n6.2.13. Дополнительные атрибуты html-элементов",
    "Блокирующий процесс предназначен для того,\nчтобы предоставить возможность\nв маршрут активации/изменения/удаления реестра\nвставить асинхронный вызов внешнего модуля.\nОсновное отличие блокирующего процесса от событий реестра\nзаключается в том, что:\nпри использовании блокирующего процесса маршрут реестра\nдожидается ответа о результате выполнения операции внешним модулем\nблокирующий процесс может завершиться положительно или отрицательно,\nчто повлияет на дальнейшую работу маршрута\n(Если блокирующий процесс завершится отрицательно —\nпроцесс остановится, если положительно — то продолжит работу дальше)\nМодуль, реализующий блокирующий процесс, должен представлять собой отдельное приложение,\nзадеплоенное на jboss в соответствии с правилами,\nописанными в разделеКак задеплоить интеграционное приложение.\nЗапускается код модуля блокирующего процесса через очередь.\nПри старте этапа маршрута, содержащего блокирующий процесс,\nв очередь добавляется сообщение, которое должен обработать модуль.",
    "Для того, чтобы добавить блокирующий процесс,\nнеобходимо выполнить следующие действия:\nДобавить процесс с в маршрут реестра в конфигураторе:Название процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nДобавить процесс с в маршрут реестра в конфигураторе:\nНазвание процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:<jms-queuename=\"ExampleQueue\"><entryname=\"java:jboss/queues/Integration/ExampleQueue\"/><durable>true</durable></jms-queue>\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:<listener><queue>java:jboss/queues/Integration/ExampleQueue</queue><event>event.blocking.example</event></listener>\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:\nОбратите внимание, что название блокирующего процесса,\nуказанное в маршруте в конфигураторе должно быть\nравно значению тега в конфигурационном файлеapi-observation-configuration.xml(в данном примере:event.blocking.example)\nи название очереди должно совпадать со значением тегаqueueконфигурационного файлаapi-observation-configuration.xml(в данном примере:java:jboss/queues/Integration/ExampleQueue)\nСообщение, передаваемое в очередь, является экземпляромTextMessage.\nСодержимым сообщения является объект JSON с полями:\ndataUUID — идентификатор данных по форме записи реестра\nexecutionID — идентификатор блокирующего процесса\ndocumentID — идентификатор документа реестра\nПосле того, как модуль обратится к внешней системе\nи выполнит необходимые действия, он должен вызвать метод API Synergy\nдля того, чтобы возвратить результат выполнения процесса и продолжить работу маршрута.\nДля того, чтобы это сделать, необходимо вызвать метод APIrest/api/processes/signal.\nПримечание\nСигнал блокирующему процессу для его разблокировки/блокировки\nнужно отправлять после того, как этот процесс был запущен, то есть после того как\nтранзакция с запуском процесса была завершена. Для этого, перед отправкой сигнала,\nпроверяйте на наличие такого процесса в БД. В противном случае, блокирующий процесс\nможет завершиться в транзакции, но в маршруте нет.\nВ примере кода ниже разблокировка маршрута осуществляется в методеonMessage.\nЕсли время выполнения действия значительно или зависит от внешних факторов\n(например, доступность интегрируемой системы,\nили необходимость ввода пользователем данных в интегрируемой системе),\nто разблокировка маршрута может произойти позже,\nв любой другой момент времени из другого метода,\nа сам метод onMessage должен завершиться без ошибок, «запомнив» переданные параметры.",
    "Цель данного вида интеграции — дать возможность повлиять на\nзапуск стандартного процесса и, при необходимости, прервать его.\nСтандартная функциональность платформы ARTA Synergy дает возможность запретить\nотправку документов на согласование, утверждение, если количество уровней\nоргструктуры между отправителем и получателем превышает некоторое\nнастроенное значение. Но в некоторых компаниях существуют более сложные\nправила, ограничивающие возможность отправки документов/работ. В этих\nслучаях необходима разработка данного обработчика.\nОбработчик может быть применён к процессам:\n«работа» (assignment-single)\n«согласование» (agreement-single)\n«утверждение» (approval-single)\n«ознакомление» (acquaintance-single)\n«отправка документа» (send-document)\n«общий процесс при запуске по формам» (common-process-by-form)\n«отправка документа по форме» (send-document-by-form)\nОбработчик представляет собой Java-класс, реализующий интерфейс\nkz.arta.synergy.integration.api.bp.StartHandlerIF\nДанный интерфейс находится в библиотекеintegration-api.jar,\nкоторую можно найти в установленном экземпляре ARTA Synergy в директории/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nИнтерфейс содержит два метода:\nmakeDecision()— проверяет возможно ли выполнение процесса\ngetResolution()— возвращает текст, который должен быть записан в ход\nисполнения\nБолее подробную информацию о полях методов можно посмотреть в javadoc\nк этим методам, которые доступны вintegration-api.jar(библиотека\nсодержит и скомпилированные классы, и исходный код).\nУстановка обработчика для процесса осуществляется с помощью\nконфигурационного файла${jboss.server.config.dir}/arta/process-handlers-configuration.xml,\nимеющего следующий формат:\nОбработчики выполняются последовательно до тех пор, пока методmakeDecision()одного из них не вернетfalse, после этого процесс\nпрерывается.\nБиблиотеку, содержащую обработчик необходимо скопировать в папку/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nПосле копирования библиотеки обработчика и изменения файлаprocess-handlers-configuration.xmlнеобходимо перезапустить JBoss.\nВнимание\nПроцессcommon-process-by-formзапускает процессыagreement-single,approval-single,acquaintance-single,assignment-single(подпроцессы). Поэтому, если обработчик будет\nзапрещать выполнение подпроцесса и при этом разрешать выполнение процессаcommon-process-by-form, то подпроцессы все равно будут прерваны.\nАналогично, если выполнениеcommon-process-by-formразрешено, а\nвыполнение подпроцесса запрещено, подпроцессы будут прерваны.",
    "С использованием этого способа интеграции был реализован внешний модуль,\nограничивающий перепоручение и отправку каких-либо работ на согласование\nпользователям определенных групп.\nДля установки внешнего модуля из репозитория необходимо установить пакетarta-synergy-ext-sendcontrol.\nДалее на остановленном JBoss в конфигурационном файле${jboss.server.config.dir}/arta/process-handlers-configuration.xmlнеобходимо прописать следующие обработчики процесса:\nУстановка групп (каким группам пользователей Synergy) разрешать либо\nблокировать процессы осуществляется с помощью конфигурационного файла${jboss.server.config.dir}/arta/ext/send-control.xml. Пример настройки:",
    "REST API ARTA Synergy доступно только авторизованным пользователям.\nТип авторизации —BASICHTTP.\nМетоды API выполняются от имени того пользователя,\nкоторый авторизован. Имеются следующие типы авторизации:",
    "Авторизация пользователя по его логину и паролю приемлема в тех случаях,\nкогда приложение может знать текущий логин и пароль пользователя, например:\nПриложение предоставляет альтернативный интерфейс\nк некоторым модулям Synergy\n(мобильное приложение, десктопный клиент для хранилища)\nПриложение представляет собойserver-sideутилиту для синхронизации,\nдля которого создан выделенный пользователь,\nи его логин и пароль хранятся в конфигурационном файле на сервере.\nДля реализации данного типа авторизации надо передать в запросе заголовокAuthorizationсо значением:\nНапример:\nПример кода на JAVA:\nПример кода на JavaScript (jQuery):\nПример кода на PHP:",
    "Сессионная авторизации используется для встроенных WEB-модулей.\nПри cессионной авторизации также используется тип —BASICHTTP,\nно в качестве логина пользователя необходимо использовать\nзначение$sessionи в качестве пароля —\nполученное значениеsso_hash.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:\nПолучить значениеsso_hashавторизованного пользователя можно\nследующими способами:\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.Пример кода на JavaScript (jQuery):functiongetURLParameter(name){returndecodeURIComponent((newRegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[null,''])[1].replace(/\\+/g,'%20'))||null;}varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+getURLParameter('sso_hash')))}}$.ajax(settings).done(function(response){console.log(response);});\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.\nПример кода на JavaScript (jQuery):\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:{\"id\":\"Идентификатор текущего пользователя\",\"sso_hash\":\"hash-сумма для идентификации пользователя\",\"surname\":\"Фамилия текущего пользователя\",\"name\":\"Имя текущего пользователя\",\"patronymic\":\"Отчество текущего пользователя\"}Пример кода на JavaScript (jQuery):varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+$CURRENT_USER.sso_hash))}}$.ajax(settings).done(function(response){console.log(response);});ПримечаниеДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:\nПример кода на JavaScript (jQuery):\nПримечание\nДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.",
    "Модуль, который хочет авторизоваться от имени какого-либо пользователя таким способом,\nдолжен сгенерировать для него ключевую пару,\nобеспечив сохранность закрытого ключа.\nЗатем модуль сохраняет получивший открытый ключ для пользователя в Synergy,\nиспользуя следующий вызов API:\nЭтот вызов назначает ключ тому пользователю, от имени которого выполняется.\nПараметрuser_token_expire_intervalрегулирует интервал устаревания ключей авторизации.\nПример настройки интервала:\nПримечание\nИнтервал устаревания ключа указывается в минутах. Значение по умолчанию0, то есть если ранее для\nданного пользователя был сгенерирован другой ключ, то предыдущий автоматически становится недействительным.\nСоздать ключ можно только для существующего WEB-модуля,\nтак как для этого требуется идентификатор приложения.\nСовет\nЕсли у вас нет необходимости разрабатывать WEB модуль,\nно есть необходимость в использовании авторизации по ключам,\nможно добавить внешний модуль и отключить его использование\nв административном приложении SynergyAdmin для всех элементов оргструктуры.\nИспользование этого ключа для авторизации аналогично использованию сессионного ключа.\nТип авторизацииBasicHTTP,\nв качестве логина пользователя надо использовать строку$key,\nв качестве пароля — полученный с помощью API ключ.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:",
    "Web-приложение внешнего модуля открывается\nвiframeв окне основного приложения.\nПри этом рабочая область внешнего модуля\nзанимает всю область страницы, кроме панели меню и панели задач:\nВнешний WEB-модуль\nДля добавления нового модуля нужно перейти в\nКонфигуратор ‣ Настройки системы ‣ Управление модулями ‣ Внешние модули\nи нажать на кнопку «Добавить».\nВнешние модули\nВ открывшемся окне нужно заполнить следующие поля:\n«Название»- название модуля в соответствующем интерфейсе.\n«Название»- название модуля в соответствующем интерфейсе.\n«Код»- поле должно содержать уникальное значение.\n«Код»- поле должно содержать уникальное значение.\n«Адрес приложения»- поле для ввода URL.\n«Адрес приложения»- поле для ввода URL.\n«Описание модуля»- поле для описания данного модуля.\n«Описание модуля»- поле для описания данного модуля.\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.Добавление нового внешнего модуля\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.\nДобавление нового внешнего модуля\nПодсказка\nДобавить внешний web-модуль можно с помощью SQL-запроса\nв БДsynergy.outer_modules, вставив запись со следующими полями:\nid— идентификатор модуля, должен совпадать с идентификаторомвашего проекта в репозитории проектов\nnameru,namekz,nameen— название модуля на русском,\nказахском и английском языках соответственно\nurl— адрес приложения\ndescription— описание модуля\nactive— активен ли модуль, 1/0.\nДля реализации механизмаSSOприложений,\nARTA Synergy при загрузке внешнего web-модуля будет в строку URL\nдобавлять три параметра:\nlocale— локаль авторизованного пользователя\nsso_hash— hash-сумма для идентификации пользователя.\nhost— адрес, с которого загружено приложение Synergy\nНапример, если URL приложения\nто при обращении к модулю будет вызываться\nИнтегрированный модуль должен будет будет получить из URL\nпараметрsso_hashи запросить по REST API у ARTA Synergy\nинформацию об авторизованном пользователе (идентификатор, имя).\nЕсли метод REST API возвращает информацию о пользователе,\nэто подтверждает, что данный пользователь\nдействительно авторизован с данного хоста, в данном браузере.\nДалее строкаsso_hashможет быть использована дляСессионная авторизацияи вызова REST API Arta Synergy.\nВ ARTA Synergy реализована возможность обращения к ее модулям по относительной ссылке.\nТакая же возможность существует для внешних web-модулей. Переход по ссылке вида:\n#submodule=outer&outerModuleID='код_модуля'&прочие_параметры_по_желанию_модуля\nактивирует в Synergy заданный модуль и передаст ему заданные в url-e параметры\n(параметрыlocale,sso_hash,hostтакже будут переданы,\nнесмотря на то, что они отсутствуют в ссылке).\nЧасто возникает необходимость в этой ссылке передать ссылку на текущий документ.\nДля этого можно добавить в ссылку параметр,\nзначение которого будет равно${docID}—\nэта строка в web-интерфейсе проигрывателя форм Synergy\nбудет заменена на идентификатор данного документа.",
    "В бизнес-приложениях на базе Synergy может возникнуть необходимость работы из\nвнешних систем с формами Synergy. В этом случае можно использовать внешний проигрыватель форм.\nПроигрыватель форм - это инструмент, который даёт возможность работать с формами,\nсозданными и используемыми в Synergy, а также выполняет скрипты. При использовании\nво внешней системе проигрыватель позволяет:\nотображать и редактировать формы Synergy;\nнастраивать произвольный вид формы и ее компонентов, создавать новые компоненты;\nавтоматически заполнять поля формы данными из внешней системы;\nобеспечивать обратную связь от проигрывателя к серверу, используя механизм событий;\nобрабатывать наступившие события.\nПримечание\nПроигрыватель форм запускается на стороне клиента, поэтому все события\nи скрипты срабатывают только при открытом проигрывателе.",
    "Для подключения проигрывателя на страницу необходимо добавить код в разделhead:<script>FORM_PLAYER_URL_PREFIX = \"http://127.0.0.1:8080/Synergy/\";<!--служебная переменная для корректной работы компонента \"HTD-редактор\"--></script><linkrel=\"stylesheet\"href=\"http://127.0.0.1:8080/Synergy/js/form.player.css\"/><!--стандартный стиль компонентов формы--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/vendor.js\"type=\"text/javascript\"></script><!--ссылка на сторонние библиотеки--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/form.player.js\"type=\"text/javascript\"></script><!--ссылка на проигрыватель форм-->и вставить элемент для размещения проигрывателя в тело страницы:<divid=\"form_player_container\"><divid=\"form_player_div\"></div></div>\nДля подключения проигрывателя на страницу необходимо добавить код в разделhead:\nи вставить элемент для размещения проигрывателя в тело страницы:\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";//ссылка на экземпляр SynergyСоздание объекта проигрывателя выглядит следующим образом:'use strict';AS.OPTIONS.locale=\"ru\";AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";varportal={player:null,/*** очистить текущий проигрыватель форм*/clearPlayer:function(){if(portal.player){portal.player.destroy();}},/*** добавить новый проигрыватель форм*/createPlayer:function(formCode){portal.clearPlayer();portal.player=AS.FORMS.createPlayer();portal.player.showFormByCode(formCode);portal.player.view.appendTo($('#form_player_div'));}};$(document).ready(function(){AS.OPTIONS.login=\"login\";AS.OPTIONS.password=\"password\";portal.createPlayer(\"formCode\");});\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:\nСоздание объекта проигрывателя выглядит следующим образом:\nСм. также документацию поСкриптинг в формах.",
    "В данном разделе описываются основные примеры использования внешнего\nпроигрывателя форм. Каждый пример отражает одно из базовых требований\nк внешнему проигрывателю и содержит:\nописание примера;\nреализованный пример внешнего проигрывателя форм, встроенного во внешний портал (в данном случае - в портал документации);\nа также исходные коды JavaScript и CSS этих примеров.\nПримеры использования внешнего проигрывателя форм:\n6.7.2.1. Вариант 1. Отображение проигрывателя, встроенного во внешний портал\n6.7.2.2. Вариант 2. Изменение вида отображения формы согласно стилю портала (CSS)\n6.7.2.3. Вариант 3. Автозаполнение данных формы из внешнего портала\n6.7.2.4. Вариант 4. Дополнительная валидация формы\n6.7.2.5. Вариант 5. Создание нового компонента\n6.7.2.6. Вариант 6. Предварительное заполнение данных формы внешним порталом\n6.7.2.7. Вариант 7. Изменение компонента формы\n6.7.2.8. Вариант 8. Авторизация во внешнем проигрывателе",
    "Ссылки на модули и различные объекты Synergy\nможно использовать как внутри основного web-приложения\n(в этом случае предпочтительно использовать относительные\nссылки, чтобы не перезагружать страницу), так и во внешних\nсистемах.\nОбщий вид ссылок:\nгде\nhost- доменное имя или ip-адрес сервера Synergy\nport- порт\nApplication:Synergy- основное приложениеConfigurator- КонфигураторSynergyAdmin- административное приложение\nSynergy- основное приложение\nConfigurator- Конфигуратор\nSynergyAdmin- административное приложение\nparam1,param2- параметры абсолютной ссылки\nparam3,param4- параметры относительной ссылки\nПараметры абсолютной ссылки - это, как правило:\nlocale- локаль загружаемой системы\nnocache- специальный параметр, предотвращающий случайное кэширование\nостальные параметры можно передавать как параметры относительной ссылки.\nНиже для краткости будем приводить образец относительной ссылки",
    "#submodule=module_id\nгдеmodule_id:\nworkflow- Потоки работ\ncalendar- Ежедневник\nrepository- Хранилище\nplans- Проекты\npointers- Цели и показатели\nemployees- Сотрудники\nПри переходе по ссылке откроется указанный модуль.",
    "#submodule=common&file_identifier=some_file_id&action=open_document&document_identifier=some_doc_id\nПри переходе по такой ссылке откроется указанный документ с основным файлом,\nа если указанfile_identifier- то откроется документ с этим файлом.",
    "#submodule=plans&action=open_action&action_identifier=some_action_id&project_identifier=some_project_id\nПри переходе по такой ссылке откроется указанный проект,\nа если указанaction_identifier- то в проекте будет выделено\nэто мероприятие.",
    "#submodule=employees&innermodule=structure&action=open_user&user_identifier=some_user_id\nПри переходе по такой ссылке будет открыт модуль «Сотрудники»,\nа в нем - профиль указанного пользователя",
    "Если в абсолютной ссылке указать параметрnoCustomScripting,\nто все пользовательские ВМК, скрипты в формах и пользовательских\nкомпонентах будут отключены. Это можно использовать для отладки\nпользовательских компонентов, ВМК и скриптов на форме.",
    "ARTA Synergy работает на сервере приложений JBoss AS7.\nИнтеграционное приложение может представлять собойjar-файл либоwar-файл либо их комбинацию.\nЕсли приложение является одиночным файлом, его можно задеплоить,\nскопировав в директорию${jboss.home}/standalone/deployments.\nЕсли приложение состоит из нескольких файлов,\nнеобходимо создать*.earприложение.\nЕсли приложение имеет зависимости на внешние библиотеки\nи они находятся в модулях JBoss-а (${jboss.home}/modules),\nнеобходимо использовать их, прочие зависимости — помещать внутрь приложения.\nОпасно\nВ целях безопасности работы приложения Synergy и сервера приложений\nкатегорически запрещается помещать артефакты интеграционного модуля\nв приложениеSynergy.earи изменять состав модулей (${jboss.home}/modules).",
    "Существует два основных подхода для интеграции с Synergy:\nПрямая интеграция — интеграционные модули разрабатываются\nс использованием API Synergy и интегрируемых систем.\nСинхронизация данных между системами и координация обмена между ними\nостаётся за разработчиком интеграционного модуля\nСобытийная интеграция — когда какая-либо из подсистем Synergy\nгенерирует различные события, связанные с какими-либо данными.\nОбработчики этих событий (на стороне Synergy) при необходимости\nпреобразовывают данные событий и передают их интегрируемой системе\nчерез какой-либо транспортный уровень",
    "ARTA Synergy предоставляет API для доступа к своим функциям\nс помощью rest сервисов. Описание методов REST API можно\nнайти вданном разделе.\nАвторизация для всех методов API —BasicHTTP.",
    "Под «событием» мы будем подразумевать сообщение о каком-либо изменении\nв ARTA Synergy, содержащее тип события\nи минимально необходимые для получения связанной с событием информации\nлибо воздействия на Synergy данные. Обработчик события (или событий) —\nпрограммный модуль, читающий сообщения о событиях изJMSQueueилиJMSTopicи осуществляющий, при необходимости, доступ к экземпляру Synergy,\nсгенерировавшему сообщение, с помощью API Synergy.\nОбработчик событий является отдельным от ARTA Synergy приложением,\nкоторое может работать как на том же сервере приложений,\nчто и ARTA Synergy, так и на удалённом.\nКроме этого, обработчик события может иметь собственные конфигурационные файлы,\nнеобходимые для реализации целевого назначения.\nОбработчик событий может обрабатывать как конкретное событие\n(например,event.registers.formdata.add),\nтак и класс событий (например,event.registers.*).\nОбработка события может происходить в 3 этапа:\nПолучение события\nПолучение и преобразование необходимых обработчику данных\nПередача сформированного пакета данных далее (опционально)\nARTA Synergy генерирует событие в случае,\nесли для этого события настроены обработчики.\nОбработчики событий настраиваются в конфигурационном файле${jboss.home}/standalone/configuration/arta/api-observation-configuration.xml.\nПримечание\nПри установке Synergy файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xmlпо умолчанию не создается.\nСоздаете файлapi-observation-configuration.xmlв директории{$jboss.home}/standalone/configuration/arta/с содержимым:\nУказываете владельца файла:\nЗатем можете добавлять листенеры в файл.\nСообщение, помещаемое в очередьJMS,\nпредставляет собой экземплярjavax.jms.TextMessage.\nТело сообщения зависит от типа события,\nего описание можно посмотреть ниже среди описаний типов событий.\nКаждое событие содержит свойствоapi_event, указывающее на тип события,\nвызвавшего его (содержимое тега<event>event.registers.formdata.add</event>в конфигурационном файле).\nНапример:\nВ этом примере настроены обработчики:\njava:jboss/queues/Synergy/UsersQueueдля всех событий классаevent.users.*, т.е. всех событий, связанных с пользователями:event.users.account.change,event.users.formdata.change,event.users.account.addи т.д.\njava:jboss/queues/Synergy/RegisterCreateDocQueueдля события добавления записи реестраevent.registers.formdata.add.\nРассмотрим, например, код обработчика очередиUsersQueue:\nВ проектеblocking-process-templateреализован пример обработчика очереди.\nНиже описаны типы событий, которые могут быть сгенерированы ARTA Synergy.\nДля события[event.orgstructure.department.formdata.change]-\nидентификатор подразделения, для события[event.orgstructure.position.formdata.change]- идентификатор\nдолжности, для события[event.users.formdata.change]- идентификатор\nпользователя будет передаваться как основной параметр, остальные как\nсвойства. Получить их можно следующим образом:\n6.2.1. События пользователей\n6.2.2. События должностей\n6.2.3. События подразделений\n6.2.4. События реестров\n6.2.5. События адресной книги\n6.2.6. События работ\n6.2.7. События по документам\n6.2.8. События по формам\n6.2.9. События комментариев\n6.2.10. События администрирования\n6.2.11. Генерация произвольных событий\n6.2.12. Клиентские события Synergy\n6.2.13. Дополнительные атрибуты html-элементов",
    "Блокирующий процесс предназначен для того,\nчтобы предоставить возможность\nв маршрут активации/изменения/удаления реестра\nвставить асинхронный вызов внешнего модуля.\nОсновное отличие блокирующего процесса от событий реестра\nзаключается в том, что:\nпри использовании блокирующего процесса маршрут реестра\nдожидается ответа о результате выполнения операции внешним модулем\nблокирующий процесс может завершиться положительно или отрицательно,\nчто повлияет на дальнейшую работу маршрута\n(Если блокирующий процесс завершится отрицательно —\nпроцесс остановится, если положительно — то продолжит работу дальше)\nМодуль, реализующий блокирующий процесс, должен представлять собой отдельное приложение,\nзадеплоенное на jboss в соответствии с правилами,\nописанными в разделеКак задеплоить интеграционное приложение.\nЗапускается код модуля блокирующего процесса через очередь.\nПри старте этапа маршрута, содержащего блокирующий процесс,\nв очередь добавляется сообщение, которое должен обработать модуль.",
    "Для того, чтобы добавить блокирующий процесс,\nнеобходимо выполнить следующие действия:\nДобавить процесс с в маршрут реестра в конфигураторе:Название процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nДобавить процесс с в маршрут реестра в конфигураторе:\nНазвание процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:<jms-queuename=\"ExampleQueue\"><entryname=\"java:jboss/queues/Integration/ExampleQueue\"/><durable>true</durable></jms-queue>\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:<listener><queue>java:jboss/queues/Integration/ExampleQueue</queue><event>event.blocking.example</event></listener>\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:\nОбратите внимание, что название блокирующего процесса,\nуказанное в маршруте в конфигураторе должно быть\nравно значению тега в конфигурационном файлеapi-observation-configuration.xml(в данном примере:event.blocking.example)\nи название очереди должно совпадать со значением тегаqueueконфигурационного файлаapi-observation-configuration.xml(в данном примере:java:jboss/queues/Integration/ExampleQueue)\nСообщение, передаваемое в очередь, является экземпляромTextMessage.\nСодержимым сообщения является объект JSON с полями:\ndataUUID — идентификатор данных по форме записи реестра\nexecutionID — идентификатор блокирующего процесса\ndocumentID — идентификатор документа реестра\nПосле того, как модуль обратится к внешней системе\nи выполнит необходимые действия, он должен вызвать метод API Synergy\nдля того, чтобы возвратить результат выполнения процесса и продолжить работу маршрута.\nДля того, чтобы это сделать, необходимо вызвать метод APIrest/api/processes/signal.\nПримечание\nСигнал блокирующему процессу для его разблокировки/блокировки\nнужно отправлять после того, как этот процесс был запущен, то есть после того как\nтранзакция с запуском процесса была завершена. Для этого, перед отправкой сигнала,\nпроверяйте на наличие такого процесса в БД. В противном случае, блокирующий процесс\nможет завершиться в транзакции, но в маршруте нет.\nВ примере кода ниже разблокировка маршрута осуществляется в методеonMessage.\nЕсли время выполнения действия значительно или зависит от внешних факторов\n(например, доступность интегрируемой системы,\nили необходимость ввода пользователем данных в интегрируемой системе),\nто разблокировка маршрута может произойти позже,\nв любой другой момент времени из другого метода,\nа сам метод onMessage должен завершиться без ошибок, «запомнив» переданные параметры.",
    "Цель данного вида интеграции — дать возможность повлиять на\nзапуск стандартного процесса и, при необходимости, прервать его.\nСтандартная функциональность платформы ARTA Synergy дает возможность запретить\nотправку документов на согласование, утверждение, если количество уровней\nоргструктуры между отправителем и получателем превышает некоторое\nнастроенное значение. Но в некоторых компаниях существуют более сложные\nправила, ограничивающие возможность отправки документов/работ. В этих\nслучаях необходима разработка данного обработчика.\nОбработчик может быть применён к процессам:\n«работа» (assignment-single)\n«согласование» (agreement-single)\n«утверждение» (approval-single)\n«ознакомление» (acquaintance-single)\n«отправка документа» (send-document)\n«общий процесс при запуске по формам» (common-process-by-form)\n«отправка документа по форме» (send-document-by-form)\nОбработчик представляет собой Java-класс, реализующий интерфейс\nkz.arta.synergy.integration.api.bp.StartHandlerIF\nДанный интерфейс находится в библиотекеintegration-api.jar,\nкоторую можно найти в установленном экземпляре ARTA Synergy в директории/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nИнтерфейс содержит два метода:\nmakeDecision()— проверяет возможно ли выполнение процесса\ngetResolution()— возвращает текст, который должен быть записан в ход\nисполнения\nБолее подробную информацию о полях методов можно посмотреть в javadoc\nк этим методам, которые доступны вintegration-api.jar(библиотека\nсодержит и скомпилированные классы, и исходный код).\nУстановка обработчика для процесса осуществляется с помощью\nконфигурационного файла${jboss.server.config.dir}/arta/process-handlers-configuration.xml,\nимеющего следующий формат:\nОбработчики выполняются последовательно до тех пор, пока методmakeDecision()одного из них не вернетfalse, после этого процесс\nпрерывается.\nБиблиотеку, содержащую обработчик необходимо скопировать в папку/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nПосле копирования библиотеки обработчика и изменения файлаprocess-handlers-configuration.xmlнеобходимо перезапустить JBoss.\nВнимание\nПроцессcommon-process-by-formзапускает процессыagreement-single,approval-single,acquaintance-single,assignment-single(подпроцессы). Поэтому, если обработчик будет\nзапрещать выполнение подпроцесса и при этом разрешать выполнение процессаcommon-process-by-form, то подпроцессы все равно будут прерваны.\nАналогично, если выполнениеcommon-process-by-formразрешено, а\nвыполнение подпроцесса запрещено, подпроцессы будут прерваны.",
    "С использованием этого способа интеграции был реализован внешний модуль,\nограничивающий перепоручение и отправку каких-либо работ на согласование\nпользователям определенных групп.\nДля установки внешнего модуля из репозитория необходимо установить пакетarta-synergy-ext-sendcontrol.\nДалее на остановленном JBoss в конфигурационном файле${jboss.server.config.dir}/arta/process-handlers-configuration.xmlнеобходимо прописать следующие обработчики процесса:\nУстановка групп (каким группам пользователей Synergy) разрешать либо\nблокировать процессы осуществляется с помощью конфигурационного файла${jboss.server.config.dir}/arta/ext/send-control.xml. Пример настройки:",
    "REST API ARTA Synergy доступно только авторизованным пользователям.\nТип авторизации —BASICHTTP.\nМетоды API выполняются от имени того пользователя,\nкоторый авторизован. Имеются следующие типы авторизации:",
    "Авторизация пользователя по его логину и паролю приемлема в тех случаях,\nкогда приложение может знать текущий логин и пароль пользователя, например:\nПриложение предоставляет альтернативный интерфейс\nк некоторым модулям Synergy\n(мобильное приложение, десктопный клиент для хранилища)\nПриложение представляет собойserver-sideутилиту для синхронизации,\nдля которого создан выделенный пользователь,\nи его логин и пароль хранятся в конфигурационном файле на сервере.\nДля реализации данного типа авторизации надо передать в запросе заголовокAuthorizationсо значением:\nНапример:\nПример кода на JAVA:\nПример кода на JavaScript (jQuery):\nПример кода на PHP:",
    "Сессионная авторизации используется для встроенных WEB-модулей.\nПри cессионной авторизации также используется тип —BASICHTTP,\nно в качестве логина пользователя необходимо использовать\nзначение$sessionи в качестве пароля —\nполученное значениеsso_hash.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:\nПолучить значениеsso_hashавторизованного пользователя можно\nследующими способами:\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.Пример кода на JavaScript (jQuery):functiongetURLParameter(name){returndecodeURIComponent((newRegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[null,''])[1].replace(/\\+/g,'%20'))||null;}varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+getURLParameter('sso_hash')))}}$.ajax(settings).done(function(response){console.log(response);});\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.\nПример кода на JavaScript (jQuery):\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:{\"id\":\"Идентификатор текущего пользователя\",\"sso_hash\":\"hash-сумма для идентификации пользователя\",\"surname\":\"Фамилия текущего пользователя\",\"name\":\"Имя текущего пользователя\",\"patronymic\":\"Отчество текущего пользователя\"}Пример кода на JavaScript (jQuery):varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+$CURRENT_USER.sso_hash))}}$.ajax(settings).done(function(response){console.log(response);});ПримечаниеДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:\nПример кода на JavaScript (jQuery):\nПримечание\nДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.",
    "Модуль, который хочет авторизоваться от имени какого-либо пользователя таким способом,\nдолжен сгенерировать для него ключевую пару,\nобеспечив сохранность закрытого ключа.\nЗатем модуль сохраняет получивший открытый ключ для пользователя в Synergy,\nиспользуя следующий вызов API:\nЭтот вызов назначает ключ тому пользователю, от имени которого выполняется.\nПараметрuser_token_expire_intervalрегулирует интервал устаревания ключей авторизации.\nПример настройки интервала:\nПримечание\nИнтервал устаревания ключа указывается в минутах. Значение по умолчанию0, то есть если ранее для\nданного пользователя был сгенерирован другой ключ, то предыдущий автоматически становится недействительным.\nСоздать ключ можно только для существующего WEB-модуля,\nтак как для этого требуется идентификатор приложения.\nСовет\nЕсли у вас нет необходимости разрабатывать WEB модуль,\nно есть необходимость в использовании авторизации по ключам,\nможно добавить внешний модуль и отключить его использование\nв административном приложении SynergyAdmin для всех элементов оргструктуры.\nИспользование этого ключа для авторизации аналогично использованию сессионного ключа.\nТип авторизацииBasicHTTP,\nв качестве логина пользователя надо использовать строку$key,\nв качестве пароля — полученный с помощью API ключ.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:",
    "Web-приложение внешнего модуля открывается\nвiframeв окне основного приложения.\nПри этом рабочая область внешнего модуля\nзанимает всю область страницы, кроме панели меню и панели задач:\nВнешний WEB-модуль\nДля добавления нового модуля нужно перейти в\nКонфигуратор ‣ Настройки системы ‣ Управление модулями ‣ Внешние модули\nи нажать на кнопку «Добавить».\nВнешние модули\nВ открывшемся окне нужно заполнить следующие поля:\n«Название»- название модуля в соответствующем интерфейсе.\n«Название»- название модуля в соответствующем интерфейсе.\n«Код»- поле должно содержать уникальное значение.\n«Код»- поле должно содержать уникальное значение.\n«Адрес приложения»- поле для ввода URL.\n«Адрес приложения»- поле для ввода URL.\n«Описание модуля»- поле для описания данного модуля.\n«Описание модуля»- поле для описания данного модуля.\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.Добавление нового внешнего модуля\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.\nДобавление нового внешнего модуля\nПодсказка\nДобавить внешний web-модуль можно с помощью SQL-запроса\nв БДsynergy.outer_modules, вставив запись со следующими полями:\nid— идентификатор модуля, должен совпадать с идентификаторомвашего проекта в репозитории проектов\nnameru,namekz,nameen— название модуля на русском,\nказахском и английском языках соответственно\nurl— адрес приложения\ndescription— описание модуля\nactive— активен ли модуль, 1/0.\nДля реализации механизмаSSOприложений,\nARTA Synergy при загрузке внешнего web-модуля будет в строку URL\nдобавлять три параметра:\nlocale— локаль авторизованного пользователя\nsso_hash— hash-сумма для идентификации пользователя.\nhost— адрес, с которого загружено приложение Synergy\nНапример, если URL приложения\nто при обращении к модулю будет вызываться\nИнтегрированный модуль должен будет будет получить из URL\nпараметрsso_hashи запросить по REST API у ARTA Synergy\nинформацию об авторизованном пользователе (идентификатор, имя).\nЕсли метод REST API возвращает информацию о пользователе,\nэто подтверждает, что данный пользователь\nдействительно авторизован с данного хоста, в данном браузере.\nДалее строкаsso_hashможет быть использована дляСессионная авторизацияи вызова REST API Arta Synergy.\nВ ARTA Synergy реализована возможность обращения к ее модулям по относительной ссылке.\nТакая же возможность существует для внешних web-модулей. Переход по ссылке вида:\n#submodule=outer&outerModuleID='код_модуля'&прочие_параметры_по_желанию_модуля\nактивирует в Synergy заданный модуль и передаст ему заданные в url-e параметры\n(параметрыlocale,sso_hash,hostтакже будут переданы,\nнесмотря на то, что они отсутствуют в ссылке).\nЧасто возникает необходимость в этой ссылке передать ссылку на текущий документ.\nДля этого можно добавить в ссылку параметр,\nзначение которого будет равно${docID}—\nэта строка в web-интерфейсе проигрывателя форм Synergy\nбудет заменена на идентификатор данного документа.",
    "В бизнес-приложениях на базе Synergy может возникнуть необходимость работы из\nвнешних систем с формами Synergy. В этом случае можно использовать внешний проигрыватель форм.\nПроигрыватель форм - это инструмент, который даёт возможность работать с формами,\nсозданными и используемыми в Synergy, а также выполняет скрипты. При использовании\nво внешней системе проигрыватель позволяет:\nотображать и редактировать формы Synergy;\nнастраивать произвольный вид формы и ее компонентов, создавать новые компоненты;\nавтоматически заполнять поля формы данными из внешней системы;\nобеспечивать обратную связь от проигрывателя к серверу, используя механизм событий;\nобрабатывать наступившие события.\nПримечание\nПроигрыватель форм запускается на стороне клиента, поэтому все события\nи скрипты срабатывают только при открытом проигрывателе.",
    "Для подключения проигрывателя на страницу необходимо добавить код в разделhead:<script>FORM_PLAYER_URL_PREFIX = \"http://127.0.0.1:8080/Synergy/\";<!--служебная переменная для корректной работы компонента \"HTD-редактор\"--></script><linkrel=\"stylesheet\"href=\"http://127.0.0.1:8080/Synergy/js/form.player.css\"/><!--стандартный стиль компонентов формы--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/vendor.js\"type=\"text/javascript\"></script><!--ссылка на сторонние библиотеки--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/form.player.js\"type=\"text/javascript\"></script><!--ссылка на проигрыватель форм-->и вставить элемент для размещения проигрывателя в тело страницы:<divid=\"form_player_container\"><divid=\"form_player_div\"></div></div>\nДля подключения проигрывателя на страницу необходимо добавить код в разделhead:\nи вставить элемент для размещения проигрывателя в тело страницы:\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";//ссылка на экземпляр SynergyСоздание объекта проигрывателя выглядит следующим образом:'use strict';AS.OPTIONS.locale=\"ru\";AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";varportal={player:null,/*** очистить текущий проигрыватель форм*/clearPlayer:function(){if(portal.player){portal.player.destroy();}},/*** добавить новый проигрыватель форм*/createPlayer:function(formCode){portal.clearPlayer();portal.player=AS.FORMS.createPlayer();portal.player.showFormByCode(formCode);portal.player.view.appendTo($('#form_player_div'));}};$(document).ready(function(){AS.OPTIONS.login=\"login\";AS.OPTIONS.password=\"password\";portal.createPlayer(\"formCode\");});\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:\nСоздание объекта проигрывателя выглядит следующим образом:\nСм. также документацию поСкриптинг в формах.",
    "В данном разделе описываются основные примеры использования внешнего\nпроигрывателя форм. Каждый пример отражает одно из базовых требований\nк внешнему проигрывателю и содержит:\nописание примера;\nреализованный пример внешнего проигрывателя форм, встроенного во внешний портал (в данном случае - в портал документации);\nа также исходные коды JavaScript и CSS этих примеров.\nПримеры использования внешнего проигрывателя форм:\n6.7.2.1. Вариант 1. Отображение проигрывателя, встроенного во внешний портал\n6.7.2.2. Вариант 2. Изменение вида отображения формы согласно стилю портала (CSS)\n6.7.2.3. Вариант 3. Автозаполнение данных формы из внешнего портала\n6.7.2.4. Вариант 4. Дополнительная валидация формы\n6.7.2.5. Вариант 5. Создание нового компонента\n6.7.2.6. Вариант 6. Предварительное заполнение данных формы внешним порталом\n6.7.2.7. Вариант 7. Изменение компонента формы\n6.7.2.8. Вариант 8. Авторизация во внешнем проигрывателе",
    "Ссылки на модули и различные объекты Synergy\nможно использовать как внутри основного web-приложения\n(в этом случае предпочтительно использовать относительные\nссылки, чтобы не перезагружать страницу), так и во внешних\nсистемах.\nОбщий вид ссылок:\nгде\nhost- доменное имя или ip-адрес сервера Synergy\nport- порт\nApplication:Synergy- основное приложениеConfigurator- КонфигураторSynergyAdmin- административное приложение\nSynergy- основное приложение\nConfigurator- Конфигуратор\nSynergyAdmin- административное приложение\nparam1,param2- параметры абсолютной ссылки\nparam3,param4- параметры относительной ссылки\nПараметры абсолютной ссылки - это, как правило:\nlocale- локаль загружаемой системы\nnocache- специальный параметр, предотвращающий случайное кэширование\nостальные параметры можно передавать как параметры относительной ссылки.\nНиже для краткости будем приводить образец относительной ссылки",
    "#submodule=module_id\nгдеmodule_id:\nworkflow- Потоки работ\ncalendar- Ежедневник\nrepository- Хранилище\nplans- Проекты\npointers- Цели и показатели\nemployees- Сотрудники\nПри переходе по ссылке откроется указанный модуль.",
    "#submodule=common&file_identifier=some_file_id&action=open_document&document_identifier=some_doc_id\nПри переходе по такой ссылке откроется указанный документ с основным файлом,\nа если указанfile_identifier- то откроется документ с этим файлом.",
    "#submodule=plans&action=open_action&action_identifier=some_action_id&project_identifier=some_project_id\nПри переходе по такой ссылке откроется указанный проект,\nа если указанaction_identifier- то в проекте будет выделено\nэто мероприятие.",
    "#submodule=employees&innermodule=structure&action=open_user&user_identifier=some_user_id\nПри переходе по такой ссылке будет открыт модуль «Сотрудники»,\nа в нем - профиль указанного пользователя",
    "Если в абсолютной ссылке указать параметрnoCustomScripting,\nто все пользовательские ВМК, скрипты в формах и пользовательских\nкомпонентах будут отключены. Это можно использовать для отладки\nпользовательских компонентов, ВМК и скриптов на форме.",
    "ARTA Synergy работает на сервере приложений JBoss AS7.\nИнтеграционное приложение может представлять собойjar-файл либоwar-файл либо их комбинацию.\nЕсли приложение является одиночным файлом, его можно задеплоить,\nскопировав в директорию${jboss.home}/standalone/deployments.\nЕсли приложение состоит из нескольких файлов,\nнеобходимо создать*.earприложение.\nЕсли приложение имеет зависимости на внешние библиотеки\nи они находятся в модулях JBoss-а (${jboss.home}/modules),\nнеобходимо использовать их, прочие зависимости — помещать внутрь приложения.\nОпасно\nВ целях безопасности работы приложения Synergy и сервера приложений\nкатегорически запрещается помещать артефакты интеграционного модуля\nв приложениеSynergy.earи изменять состав модулей (${jboss.home}/modules).",
    "Существует два основных подхода для интеграции с Synergy:\nПрямая интеграция — интеграционные модули разрабатываются\nс использованием API Synergy и интегрируемых систем.\nСинхронизация данных между системами и координация обмена между ними\nостаётся за разработчиком интеграционного модуля\nСобытийная интеграция — когда какая-либо из подсистем Synergy\nгенерирует различные события, связанные с какими-либо данными.\nОбработчики этих событий (на стороне Synergy) при необходимости\nпреобразовывают данные событий и передают их интегрируемой системе\nчерез какой-либо транспортный уровень",
    "ARTA Synergy предоставляет API для доступа к своим функциям\nс помощью rest сервисов. Описание методов REST API можно\nнайти вданном разделе.\nАвторизация для всех методов API —BasicHTTP.",
    "Под «событием» мы будем подразумевать сообщение о каком-либо изменении\nв ARTA Synergy, содержащее тип события\nи минимально необходимые для получения связанной с событием информации\nлибо воздействия на Synergy данные. Обработчик события (или событий) —\nпрограммный модуль, читающий сообщения о событиях изJMSQueueилиJMSTopicи осуществляющий, при необходимости, доступ к экземпляру Synergy,\nсгенерировавшему сообщение, с помощью API Synergy.\nОбработчик событий является отдельным от ARTA Synergy приложением,\nкоторое может работать как на том же сервере приложений,\nчто и ARTA Synergy, так и на удалённом.\nКроме этого, обработчик события может иметь собственные конфигурационные файлы,\nнеобходимые для реализации целевого назначения.\nОбработчик событий может обрабатывать как конкретное событие\n(например,event.registers.formdata.add),\nтак и класс событий (например,event.registers.*).\nОбработка события может происходить в 3 этапа:\nПолучение события\nПолучение и преобразование необходимых обработчику данных\nПередача сформированного пакета данных далее (опционально)\nARTA Synergy генерирует событие в случае,\nесли для этого события настроены обработчики.\nОбработчики событий настраиваются в конфигурационном файле${jboss.home}/standalone/configuration/arta/api-observation-configuration.xml.\nПримечание\nПри установке Synergy файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xmlпо умолчанию не создается.\nСоздаете файлapi-observation-configuration.xmlв директории{$jboss.home}/standalone/configuration/arta/с содержимым:\nУказываете владельца файла:\nЗатем можете добавлять листенеры в файл.\nСообщение, помещаемое в очередьJMS,\nпредставляет собой экземплярjavax.jms.TextMessage.\nТело сообщения зависит от типа события,\nего описание можно посмотреть ниже среди описаний типов событий.\nКаждое событие содержит свойствоapi_event, указывающее на тип события,\nвызвавшего его (содержимое тега<event>event.registers.formdata.add</event>в конфигурационном файле).\nНапример:\nВ этом примере настроены обработчики:\njava:jboss/queues/Synergy/UsersQueueдля всех событий классаevent.users.*, т.е. всех событий, связанных с пользователями:event.users.account.change,event.users.formdata.change,event.users.account.addи т.д.\njava:jboss/queues/Synergy/RegisterCreateDocQueueдля события добавления записи реестраevent.registers.formdata.add.\nРассмотрим, например, код обработчика очередиUsersQueue:\nВ проектеblocking-process-templateреализован пример обработчика очереди.\nНиже описаны типы событий, которые могут быть сгенерированы ARTA Synergy.\nДля события[event.orgstructure.department.formdata.change]-\nидентификатор подразделения, для события[event.orgstructure.position.formdata.change]- идентификатор\nдолжности, для события[event.users.formdata.change]- идентификатор\nпользователя будет передаваться как основной параметр, остальные как\nсвойства. Получить их можно следующим образом:\n6.2.1. События пользователей\n6.2.2. События должностей\n6.2.3. События подразделений\n6.2.4. События реестров\n6.2.5. События адресной книги\n6.2.6. События работ\n6.2.7. События по документам\n6.2.8. События по формам\n6.2.9. События комментариев\n6.2.10. События администрирования\n6.2.11. Генерация произвольных событий\n6.2.12. Клиентские события Synergy\n6.2.13. Дополнительные атрибуты html-элементов",
    "Блокирующий процесс предназначен для того,\nчтобы предоставить возможность\nв маршрут активации/изменения/удаления реестра\nвставить асинхронный вызов внешнего модуля.\nОсновное отличие блокирующего процесса от событий реестра\nзаключается в том, что:\nпри использовании блокирующего процесса маршрут реестра\nдожидается ответа о результате выполнения операции внешним модулем\nблокирующий процесс может завершиться положительно или отрицательно,\nчто повлияет на дальнейшую работу маршрута\n(Если блокирующий процесс завершится отрицательно —\nпроцесс остановится, если положительно — то продолжит работу дальше)\nМодуль, реализующий блокирующий процесс, должен представлять собой отдельное приложение,\nзадеплоенное на jboss в соответствии с правилами,\nописанными в разделеКак задеплоить интеграционное приложение.\nЗапускается код модуля блокирующего процесса через очередь.\nПри старте этапа маршрута, содержащего блокирующий процесс,\nв очередь добавляется сообщение, которое должен обработать модуль.",
    "Для того, чтобы добавить блокирующий процесс,\nнеобходимо выполнить следующие действия:\nДобавить процесс с в маршрут реестра в конфигураторе:Название процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nДобавить процесс с в маршрут реестра в конфигураторе:\nНазвание процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:<jms-queuename=\"ExampleQueue\"><entryname=\"java:jboss/queues/Integration/ExampleQueue\"/><durable>true</durable></jms-queue>\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:<listener><queue>java:jboss/queues/Integration/ExampleQueue</queue><event>event.blocking.example</event></listener>\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:\nОбратите внимание, что название блокирующего процесса,\nуказанное в маршруте в конфигураторе должно быть\nравно значению тега в конфигурационном файлеapi-observation-configuration.xml(в данном примере:event.blocking.example)\nи название очереди должно совпадать со значением тегаqueueконфигурационного файлаapi-observation-configuration.xml(в данном примере:java:jboss/queues/Integration/ExampleQueue)\nСообщение, передаваемое в очередь, является экземпляромTextMessage.\nСодержимым сообщения является объект JSON с полями:\ndataUUID — идентификатор данных по форме записи реестра\nexecutionID — идентификатор блокирующего процесса\ndocumentID — идентификатор документа реестра\nПосле того, как модуль обратится к внешней системе\nи выполнит необходимые действия, он должен вызвать метод API Synergy\nдля того, чтобы возвратить результат выполнения процесса и продолжить работу маршрута.\nДля того, чтобы это сделать, необходимо вызвать метод APIrest/api/processes/signal.\nПримечание\nСигнал блокирующему процессу для его разблокировки/блокировки\nнужно отправлять после того, как этот процесс был запущен, то есть после того как\nтранзакция с запуском процесса была завершена. Для этого, перед отправкой сигнала,\nпроверяйте на наличие такого процесса в БД. В противном случае, блокирующий процесс\nможет завершиться в транзакции, но в маршруте нет.\nВ примере кода ниже разблокировка маршрута осуществляется в методеonMessage.\nЕсли время выполнения действия значительно или зависит от внешних факторов\n(например, доступность интегрируемой системы,\nили необходимость ввода пользователем данных в интегрируемой системе),\nто разблокировка маршрута может произойти позже,\nв любой другой момент времени из другого метода,\nа сам метод onMessage должен завершиться без ошибок, «запомнив» переданные параметры.",
    "Цель данного вида интеграции — дать возможность повлиять на\nзапуск стандартного процесса и, при необходимости, прервать его.\nСтандартная функциональность платформы ARTA Synergy дает возможность запретить\nотправку документов на согласование, утверждение, если количество уровней\nоргструктуры между отправителем и получателем превышает некоторое\nнастроенное значение. Но в некоторых компаниях существуют более сложные\nправила, ограничивающие возможность отправки документов/работ. В этих\nслучаях необходима разработка данного обработчика.\nОбработчик может быть применён к процессам:\n«работа» (assignment-single)\n«согласование» (agreement-single)\n«утверждение» (approval-single)\n«ознакомление» (acquaintance-single)\n«отправка документа» (send-document)\n«общий процесс при запуске по формам» (common-process-by-form)\n«отправка документа по форме» (send-document-by-form)\nОбработчик представляет собой Java-класс, реализующий интерфейс\nkz.arta.synergy.integration.api.bp.StartHandlerIF\nДанный интерфейс находится в библиотекеintegration-api.jar,\nкоторую можно найти в установленном экземпляре ARTA Synergy в директории/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nИнтерфейс содержит два метода:\nmakeDecision()— проверяет возможно ли выполнение процесса\ngetResolution()— возвращает текст, который должен быть записан в ход\nисполнения\nБолее подробную информацию о полях методов можно посмотреть в javadoc\nк этим методам, которые доступны вintegration-api.jar(библиотека\nсодержит и скомпилированные классы, и исходный код).\nУстановка обработчика для процесса осуществляется с помощью\nконфигурационного файла${jboss.server.config.dir}/arta/process-handlers-configuration.xml,\nимеющего следующий формат:\nОбработчики выполняются последовательно до тех пор, пока методmakeDecision()одного из них не вернетfalse, после этого процесс\nпрерывается.\nБиблиотеку, содержащую обработчик необходимо скопировать в папку/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nПосле копирования библиотеки обработчика и изменения файлаprocess-handlers-configuration.xmlнеобходимо перезапустить JBoss.\nВнимание\nПроцессcommon-process-by-formзапускает процессыagreement-single,approval-single,acquaintance-single,assignment-single(подпроцессы). Поэтому, если обработчик будет\nзапрещать выполнение подпроцесса и при этом разрешать выполнение процессаcommon-process-by-form, то подпроцессы все равно будут прерваны.\nАналогично, если выполнениеcommon-process-by-formразрешено, а\nвыполнение подпроцесса запрещено, подпроцессы будут прерваны.",
    "С использованием этого способа интеграции был реализован внешний модуль,\nограничивающий перепоручение и отправку каких-либо работ на согласование\nпользователям определенных групп.\nДля установки внешнего модуля из репозитория необходимо установить пакетarta-synergy-ext-sendcontrol.\nДалее на остановленном JBoss в конфигурационном файле${jboss.server.config.dir}/arta/process-handlers-configuration.xmlнеобходимо прописать следующие обработчики процесса:\nУстановка групп (каким группам пользователей Synergy) разрешать либо\nблокировать процессы осуществляется с помощью конфигурационного файла${jboss.server.config.dir}/arta/ext/send-control.xml. Пример настройки:",
    "REST API ARTA Synergy доступно только авторизованным пользователям.\nТип авторизации —BASICHTTP.\nМетоды API выполняются от имени того пользователя,\nкоторый авторизован. Имеются следующие типы авторизации:",
    "Авторизация пользователя по его логину и паролю приемлема в тех случаях,\nкогда приложение может знать текущий логин и пароль пользователя, например:\nПриложение предоставляет альтернативный интерфейс\nк некоторым модулям Synergy\n(мобильное приложение, десктопный клиент для хранилища)\nПриложение представляет собойserver-sideутилиту для синхронизации,\nдля которого создан выделенный пользователь,\nи его логин и пароль хранятся в конфигурационном файле на сервере.\nДля реализации данного типа авторизации надо передать в запросе заголовокAuthorizationсо значением:\nНапример:\nПример кода на JAVA:\nПример кода на JavaScript (jQuery):\nПример кода на PHP:",
    "Сессионная авторизации используется для встроенных WEB-модулей.\nПри cессионной авторизации также используется тип —BASICHTTP,\nно в качестве логина пользователя необходимо использовать\nзначение$sessionи в качестве пароля —\nполученное значениеsso_hash.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:\nПолучить значениеsso_hashавторизованного пользователя можно\nследующими способами:\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.Пример кода на JavaScript (jQuery):functiongetURLParameter(name){returndecodeURIComponent((newRegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[null,''])[1].replace(/\\+/g,'%20'))||null;}varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+getURLParameter('sso_hash')))}}$.ajax(settings).done(function(response){console.log(response);});\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.\nПример кода на JavaScript (jQuery):\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:{\"id\":\"Идентификатор текущего пользователя\",\"sso_hash\":\"hash-сумма для идентификации пользователя\",\"surname\":\"Фамилия текущего пользователя\",\"name\":\"Имя текущего пользователя\",\"patronymic\":\"Отчество текущего пользователя\"}Пример кода на JavaScript (jQuery):varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+$CURRENT_USER.sso_hash))}}$.ajax(settings).done(function(response){console.log(response);});ПримечаниеДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:\nПример кода на JavaScript (jQuery):\nПримечание\nДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.",
    "Модуль, который хочет авторизоваться от имени какого-либо пользователя таким способом,\nдолжен сгенерировать для него ключевую пару,\nобеспечив сохранность закрытого ключа.\nЗатем модуль сохраняет получивший открытый ключ для пользователя в Synergy,\nиспользуя следующий вызов API:\nЭтот вызов назначает ключ тому пользователю, от имени которого выполняется.\nПараметрuser_token_expire_intervalрегулирует интервал устаревания ключей авторизации.\nПример настройки интервала:\nПримечание\nИнтервал устаревания ключа указывается в минутах. Значение по умолчанию0, то есть если ранее для\nданного пользователя был сгенерирован другой ключ, то предыдущий автоматически становится недействительным.\nСоздать ключ можно только для существующего WEB-модуля,\nтак как для этого требуется идентификатор приложения.\nСовет\nЕсли у вас нет необходимости разрабатывать WEB модуль,\nно есть необходимость в использовании авторизации по ключам,\nможно добавить внешний модуль и отключить его использование\nв административном приложении SynergyAdmin для всех элементов оргструктуры.\nИспользование этого ключа для авторизации аналогично использованию сессионного ключа.\nТип авторизацииBasicHTTP,\nв качестве логина пользователя надо использовать строку$key,\nв качестве пароля — полученный с помощью API ключ.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:",
    "Web-приложение внешнего модуля открывается\nвiframeв окне основного приложения.\nПри этом рабочая область внешнего модуля\nзанимает всю область страницы, кроме панели меню и панели задач:\nВнешний WEB-модуль\nДля добавления нового модуля нужно перейти в\nКонфигуратор ‣ Настройки системы ‣ Управление модулями ‣ Внешние модули\nи нажать на кнопку «Добавить».\nВнешние модули\nВ открывшемся окне нужно заполнить следующие поля:\n«Название»- название модуля в соответствующем интерфейсе.\n«Название»- название модуля в соответствующем интерфейсе.\n«Код»- поле должно содержать уникальное значение.\n«Код»- поле должно содержать уникальное значение.\n«Адрес приложения»- поле для ввода URL.\n«Адрес приложения»- поле для ввода URL.\n«Описание модуля»- поле для описания данного модуля.\n«Описание модуля»- поле для описания данного модуля.\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.Добавление нового внешнего модуля\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.\nДобавление нового внешнего модуля\nПодсказка\nДобавить внешний web-модуль можно с помощью SQL-запроса\nв БДsynergy.outer_modules, вставив запись со следующими полями:\nid— идентификатор модуля, должен совпадать с идентификаторомвашего проекта в репозитории проектов\nnameru,namekz,nameen— название модуля на русском,\nказахском и английском языках соответственно\nurl— адрес приложения\ndescription— описание модуля\nactive— активен ли модуль, 1/0.\nДля реализации механизмаSSOприложений,\nARTA Synergy при загрузке внешнего web-модуля будет в строку URL\nдобавлять три параметра:\nlocale— локаль авторизованного пользователя\nsso_hash— hash-сумма для идентификации пользователя.\nhost— адрес, с которого загружено приложение Synergy\nНапример, если URL приложения\nто при обращении к модулю будет вызываться\nИнтегрированный модуль должен будет будет получить из URL\nпараметрsso_hashи запросить по REST API у ARTA Synergy\nинформацию об авторизованном пользователе (идентификатор, имя).\nЕсли метод REST API возвращает информацию о пользователе,\nэто подтверждает, что данный пользователь\nдействительно авторизован с данного хоста, в данном браузере.\nДалее строкаsso_hashможет быть использована дляСессионная авторизацияи вызова REST API Arta Synergy.\nВ ARTA Synergy реализована возможность обращения к ее модулям по относительной ссылке.\nТакая же возможность существует для внешних web-модулей. Переход по ссылке вида:\n#submodule=outer&outerModuleID='код_модуля'&прочие_параметры_по_желанию_модуля\nактивирует в Synergy заданный модуль и передаст ему заданные в url-e параметры\n(параметрыlocale,sso_hash,hostтакже будут переданы,\nнесмотря на то, что они отсутствуют в ссылке).\nЧасто возникает необходимость в этой ссылке передать ссылку на текущий документ.\nДля этого можно добавить в ссылку параметр,\nзначение которого будет равно${docID}—\nэта строка в web-интерфейсе проигрывателя форм Synergy\nбудет заменена на идентификатор данного документа.",
    "В бизнес-приложениях на базе Synergy может возникнуть необходимость работы из\nвнешних систем с формами Synergy. В этом случае можно использовать внешний проигрыватель форм.\nПроигрыватель форм - это инструмент, который даёт возможность работать с формами,\nсозданными и используемыми в Synergy, а также выполняет скрипты. При использовании\nво внешней системе проигрыватель позволяет:\nотображать и редактировать формы Synergy;\nнастраивать произвольный вид формы и ее компонентов, создавать новые компоненты;\nавтоматически заполнять поля формы данными из внешней системы;\nобеспечивать обратную связь от проигрывателя к серверу, используя механизм событий;\nобрабатывать наступившие события.\nПримечание\nПроигрыватель форм запускается на стороне клиента, поэтому все события\nи скрипты срабатывают только при открытом проигрывателе.",
    "Для подключения проигрывателя на страницу необходимо добавить код в разделhead:<script>FORM_PLAYER_URL_PREFIX = \"http://127.0.0.1:8080/Synergy/\";<!--служебная переменная для корректной работы компонента \"HTD-редактор\"--></script><linkrel=\"stylesheet\"href=\"http://127.0.0.1:8080/Synergy/js/form.player.css\"/><!--стандартный стиль компонентов формы--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/vendor.js\"type=\"text/javascript\"></script><!--ссылка на сторонние библиотеки--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/form.player.js\"type=\"text/javascript\"></script><!--ссылка на проигрыватель форм-->и вставить элемент для размещения проигрывателя в тело страницы:<divid=\"form_player_container\"><divid=\"form_player_div\"></div></div>\nДля подключения проигрывателя на страницу необходимо добавить код в разделhead:\nи вставить элемент для размещения проигрывателя в тело страницы:\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";//ссылка на экземпляр SynergyСоздание объекта проигрывателя выглядит следующим образом:'use strict';AS.OPTIONS.locale=\"ru\";AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";varportal={player:null,/*** очистить текущий проигрыватель форм*/clearPlayer:function(){if(portal.player){portal.player.destroy();}},/*** добавить новый проигрыватель форм*/createPlayer:function(formCode){portal.clearPlayer();portal.player=AS.FORMS.createPlayer();portal.player.showFormByCode(formCode);portal.player.view.appendTo($('#form_player_div'));}};$(document).ready(function(){AS.OPTIONS.login=\"login\";AS.OPTIONS.password=\"password\";portal.createPlayer(\"formCode\");});\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:\nСоздание объекта проигрывателя выглядит следующим образом:\nСм. также документацию поСкриптинг в формах.",
    "В данном разделе описываются основные примеры использования внешнего\nпроигрывателя форм. Каждый пример отражает одно из базовых требований\nк внешнему проигрывателю и содержит:\nописание примера;\nреализованный пример внешнего проигрывателя форм, встроенного во внешний портал (в данном случае - в портал документации);\nа также исходные коды JavaScript и CSS этих примеров.\nПримеры использования внешнего проигрывателя форм:\n6.7.2.1. Вариант 1. Отображение проигрывателя, встроенного во внешний портал\n6.7.2.2. Вариант 2. Изменение вида отображения формы согласно стилю портала (CSS)\n6.7.2.3. Вариант 3. Автозаполнение данных формы из внешнего портала\n6.7.2.4. Вариант 4. Дополнительная валидация формы\n6.7.2.5. Вариант 5. Создание нового компонента\n6.7.2.6. Вариант 6. Предварительное заполнение данных формы внешним порталом\n6.7.2.7. Вариант 7. Изменение компонента формы\n6.7.2.8. Вариант 8. Авторизация во внешнем проигрывателе",
    "Ссылки на модули и различные объекты Synergy\nможно использовать как внутри основного web-приложения\n(в этом случае предпочтительно использовать относительные\nссылки, чтобы не перезагружать страницу), так и во внешних\nсистемах.\nОбщий вид ссылок:\nгде\nhost- доменное имя или ip-адрес сервера Synergy\nport- порт\nApplication:Synergy- основное приложениеConfigurator- КонфигураторSynergyAdmin- административное приложение\nSynergy- основное приложение\nConfigurator- Конфигуратор\nSynergyAdmin- административное приложение\nparam1,param2- параметры абсолютной ссылки\nparam3,param4- параметры относительной ссылки\nПараметры абсолютной ссылки - это, как правило:\nlocale- локаль загружаемой системы\nnocache- специальный параметр, предотвращающий случайное кэширование\nостальные параметры можно передавать как параметры относительной ссылки.\nНиже для краткости будем приводить образец относительной ссылки",
    "#submodule=module_id\nгдеmodule_id:\nworkflow- Потоки работ\ncalendar- Ежедневник\nrepository- Хранилище\nplans- Проекты\npointers- Цели и показатели\nemployees- Сотрудники\nПри переходе по ссылке откроется указанный модуль.",
    "#submodule=common&file_identifier=some_file_id&action=open_document&document_identifier=some_doc_id\nПри переходе по такой ссылке откроется указанный документ с основным файлом,\nа если указанfile_identifier- то откроется документ с этим файлом.",
    "#submodule=plans&action=open_action&action_identifier=some_action_id&project_identifier=some_project_id\nПри переходе по такой ссылке откроется указанный проект,\nа если указанaction_identifier- то в проекте будет выделено\nэто мероприятие.",
    "#submodule=employees&innermodule=structure&action=open_user&user_identifier=some_user_id\nПри переходе по такой ссылке будет открыт модуль «Сотрудники»,\nа в нем - профиль указанного пользователя",
    "Если в абсолютной ссылке указать параметрnoCustomScripting,\nто все пользовательские ВМК, скрипты в формах и пользовательских\nкомпонентах будут отключены. Это можно использовать для отладки\nпользовательских компонентов, ВМК и скриптов на форме.",
    "ARTA Synergy работает на сервере приложений JBoss AS7.\nИнтеграционное приложение может представлять собойjar-файл либоwar-файл либо их комбинацию.\nЕсли приложение является одиночным файлом, его можно задеплоить,\nскопировав в директорию${jboss.home}/standalone/deployments.\nЕсли приложение состоит из нескольких файлов,\nнеобходимо создать*.earприложение.\nЕсли приложение имеет зависимости на внешние библиотеки\nи они находятся в модулях JBoss-а (${jboss.home}/modules),\nнеобходимо использовать их, прочие зависимости — помещать внутрь приложения.\nОпасно\nВ целях безопасности работы приложения Synergy и сервера приложений\nкатегорически запрещается помещать артефакты интеграционного модуля\nв приложениеSynergy.earи изменять состав модулей (${jboss.home}/modules).",
    "Существует два основных подхода для интеграции с Synergy:\nПрямая интеграция — интеграционные модули разрабатываются\nс использованием API Synergy и интегрируемых систем.\nСинхронизация данных между системами и координация обмена между ними\nостаётся за разработчиком интеграционного модуля\nСобытийная интеграция — когда какая-либо из подсистем Synergy\nгенерирует различные события, связанные с какими-либо данными.\nОбработчики этих событий (на стороне Synergy) при необходимости\nпреобразовывают данные событий и передают их интегрируемой системе\nчерез какой-либо транспортный уровень",
    "ARTA Synergy предоставляет API для доступа к своим функциям\nс помощью rest сервисов. Описание методов REST API можно\nнайти вданном разделе.\nАвторизация для всех методов API —BasicHTTP.",
    "Под «событием» мы будем подразумевать сообщение о каком-либо изменении\nв ARTA Synergy, содержащее тип события\nи минимально необходимые для получения связанной с событием информации\nлибо воздействия на Synergy данные. Обработчик события (или событий) —\nпрограммный модуль, читающий сообщения о событиях изJMSQueueилиJMSTopicи осуществляющий, при необходимости, доступ к экземпляру Synergy,\nсгенерировавшему сообщение, с помощью API Synergy.\nОбработчик событий является отдельным от ARTA Synergy приложением,\nкоторое может работать как на том же сервере приложений,\nчто и ARTA Synergy, так и на удалённом.\nКроме этого, обработчик события может иметь собственные конфигурационные файлы,\nнеобходимые для реализации целевого назначения.\nОбработчик событий может обрабатывать как конкретное событие\n(например,event.registers.formdata.add),\nтак и класс событий (например,event.registers.*).\nОбработка события может происходить в 3 этапа:\nПолучение события\nПолучение и преобразование необходимых обработчику данных\nПередача сформированного пакета данных далее (опционально)\nARTA Synergy генерирует событие в случае,\nесли для этого события настроены обработчики.\nОбработчики событий настраиваются в конфигурационном файле${jboss.home}/standalone/configuration/arta/api-observation-configuration.xml.\nПримечание\nПри установке Synergy файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xmlпо умолчанию не создается.\nСоздаете файлapi-observation-configuration.xmlв директории{$jboss.home}/standalone/configuration/arta/с содержимым:\nУказываете владельца файла:\nЗатем можете добавлять листенеры в файл.\nСообщение, помещаемое в очередьJMS,\nпредставляет собой экземплярjavax.jms.TextMessage.\nТело сообщения зависит от типа события,\nего описание можно посмотреть ниже среди описаний типов событий.\nКаждое событие содержит свойствоapi_event, указывающее на тип события,\nвызвавшего его (содержимое тега<event>event.registers.formdata.add</event>в конфигурационном файле).\nНапример:\nВ этом примере настроены обработчики:\njava:jboss/queues/Synergy/UsersQueueдля всех событий классаevent.users.*, т.е. всех событий, связанных с пользователями:event.users.account.change,event.users.formdata.change,event.users.account.addи т.д.\njava:jboss/queues/Synergy/RegisterCreateDocQueueдля события добавления записи реестраevent.registers.formdata.add.\nРассмотрим, например, код обработчика очередиUsersQueue:\nВ проектеblocking-process-templateреализован пример обработчика очереди.\nНиже описаны типы событий, которые могут быть сгенерированы ARTA Synergy.\nДля события[event.orgstructure.department.formdata.change]-\nидентификатор подразделения, для события[event.orgstructure.position.formdata.change]- идентификатор\nдолжности, для события[event.users.formdata.change]- идентификатор\nпользователя будет передаваться как основной параметр, остальные как\nсвойства. Получить их можно следующим образом:\n6.2.1. События пользователей\n6.2.2. События должностей\n6.2.3. События подразделений\n6.2.4. События реестров\n6.2.5. События адресной книги\n6.2.6. События работ\n6.2.7. События по документам\n6.2.8. События по формам\n6.2.9. События комментариев\n6.2.10. События администрирования\n6.2.11. Генерация произвольных событий\n6.2.12. Клиентские события Synergy\n6.2.13. Дополнительные атрибуты html-элементов",
    "Блокирующий процесс предназначен для того,\nчтобы предоставить возможность\nв маршрут активации/изменения/удаления реестра\nвставить асинхронный вызов внешнего модуля.\nОсновное отличие блокирующего процесса от событий реестра\nзаключается в том, что:\nпри использовании блокирующего процесса маршрут реестра\nдожидается ответа о результате выполнения операции внешним модулем\nблокирующий процесс может завершиться положительно или отрицательно,\nчто повлияет на дальнейшую работу маршрута\n(Если блокирующий процесс завершится отрицательно —\nпроцесс остановится, если положительно — то продолжит работу дальше)\nМодуль, реализующий блокирующий процесс, должен представлять собой отдельное приложение,\nзадеплоенное на jboss в соответствии с правилами,\nописанными в разделеКак задеплоить интеграционное приложение.\nЗапускается код модуля блокирующего процесса через очередь.\nПри старте этапа маршрута, содержащего блокирующий процесс,\nв очередь добавляется сообщение, которое должен обработать модуль.",
    "Для того, чтобы добавить блокирующий процесс,\nнеобходимо выполнить следующие действия:\nДобавить процесс с в маршрут реестра в конфигураторе:Название процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nДобавить процесс с в маршрут реестра в конфигураторе:\nНазвание процесса должно начинаться сevent.blocking.и далее строка, характеризующая суть блокирующего процесса.\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:<jms-queuename=\"ExampleQueue\"><entryname=\"java:jboss/queues/Integration/ExampleQueue\"/><durable>true</durable></jms-queue>\nСоздать очередь JMS для блокирующего процесса.\nДля этого необходимо в конфигурационный файл\n(в стандартной установке это/opt/synergy/jboss/standalone/configuration/standalone-onesynergy.xml)\nв секцию<subsystemxmlns=\"urn:jboss:domain:messaging:1.2\">добавить:\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:<listener><queue>java:jboss/queues/Integration/ExampleQueue</queue><event>event.blocking.example</event></listener>\nСвязать очередь и процесс через конфигурационный файл{$jboss.home}/standalone/configuration/arta/api-observation-configuration.xml,\nдобавив в него следующее:\nОбратите внимание, что название блокирующего процесса,\nуказанное в маршруте в конфигураторе должно быть\nравно значению тега в конфигурационном файлеapi-observation-configuration.xml(в данном примере:event.blocking.example)\nи название очереди должно совпадать со значением тегаqueueконфигурационного файлаapi-observation-configuration.xml(в данном примере:java:jboss/queues/Integration/ExampleQueue)\nСообщение, передаваемое в очередь, является экземпляромTextMessage.\nСодержимым сообщения является объект JSON с полями:\ndataUUID — идентификатор данных по форме записи реестра\nexecutionID — идентификатор блокирующего процесса\ndocumentID — идентификатор документа реестра\nПосле того, как модуль обратится к внешней системе\nи выполнит необходимые действия, он должен вызвать метод API Synergy\nдля того, чтобы возвратить результат выполнения процесса и продолжить работу маршрута.\nДля того, чтобы это сделать, необходимо вызвать метод APIrest/api/processes/signal.\nПримечание\nСигнал блокирующему процессу для его разблокировки/блокировки\nнужно отправлять после того, как этот процесс был запущен, то есть после того как\nтранзакция с запуском процесса была завершена. Для этого, перед отправкой сигнала,\nпроверяйте на наличие такого процесса в БД. В противном случае, блокирующий процесс\nможет завершиться в транзакции, но в маршруте нет.\nВ примере кода ниже разблокировка маршрута осуществляется в методеonMessage.\nЕсли время выполнения действия значительно или зависит от внешних факторов\n(например, доступность интегрируемой системы,\nили необходимость ввода пользователем данных в интегрируемой системе),\nто разблокировка маршрута может произойти позже,\nв любой другой момент времени из другого метода,\nа сам метод onMessage должен завершиться без ошибок, «запомнив» переданные параметры.",
    "Цель данного вида интеграции — дать возможность повлиять на\nзапуск стандартного процесса и, при необходимости, прервать его.\nСтандартная функциональность платформы ARTA Synergy дает возможность запретить\nотправку документов на согласование, утверждение, если количество уровней\nоргструктуры между отправителем и получателем превышает некоторое\nнастроенное значение. Но в некоторых компаниях существуют более сложные\nправила, ограничивающие возможность отправки документов/работ. В этих\nслучаях необходима разработка данного обработчика.\nОбработчик может быть применён к процессам:\n«работа» (assignment-single)\n«согласование» (agreement-single)\n«утверждение» (approval-single)\n«ознакомление» (acquaintance-single)\n«отправка документа» (send-document)\n«общий процесс при запуске по формам» (common-process-by-form)\n«отправка документа по форме» (send-document-by-form)\nОбработчик представляет собой Java-класс, реализующий интерфейс\nkz.arta.synergy.integration.api.bp.StartHandlerIF\nДанный интерфейс находится в библиотекеintegration-api.jar,\nкоторую можно найти в установленном экземпляре ARTA Synergy в директории/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nИнтерфейс содержит два метода:\nmakeDecision()— проверяет возможно ли выполнение процесса\ngetResolution()— возвращает текст, который должен быть записан в ход\nисполнения\nБолее подробную информацию о полях методов можно посмотреть в javadoc\nк этим методам, которые доступны вintegration-api.jar(библиотека\nсодержит и скомпилированные классы, и исходный код).\nУстановка обработчика для процесса осуществляется с помощью\nконфигурационного файла${jboss.server.config.dir}/arta/process-handlers-configuration.xml,\nимеющего следующий формат:\nОбработчики выполняются последовательно до тех пор, пока методmakeDecision()одного из них не вернетfalse, после этого процесс\nпрерывается.\nБиблиотеку, содержащую обработчик необходимо скопировать в папку/opt/synergy/jboss/standalone/deployments/Synergy.ear/lib.\nПосле копирования библиотеки обработчика и изменения файлаprocess-handlers-configuration.xmlнеобходимо перезапустить JBoss.\nВнимание\nПроцессcommon-process-by-formзапускает процессыagreement-single,approval-single,acquaintance-single,assignment-single(подпроцессы). Поэтому, если обработчик будет\nзапрещать выполнение подпроцесса и при этом разрешать выполнение процессаcommon-process-by-form, то подпроцессы все равно будут прерваны.\nАналогично, если выполнениеcommon-process-by-formразрешено, а\nвыполнение подпроцесса запрещено, подпроцессы будут прерваны.",
    "С использованием этого способа интеграции был реализован внешний модуль,\nограничивающий перепоручение и отправку каких-либо работ на согласование\nпользователям определенных групп.\nДля установки внешнего модуля из репозитория необходимо установить пакетarta-synergy-ext-sendcontrol.\nДалее на остановленном JBoss в конфигурационном файле${jboss.server.config.dir}/arta/process-handlers-configuration.xmlнеобходимо прописать следующие обработчики процесса:\nУстановка групп (каким группам пользователей Synergy) разрешать либо\nблокировать процессы осуществляется с помощью конфигурационного файла${jboss.server.config.dir}/arta/ext/send-control.xml. Пример настройки:",
    "REST API ARTA Synergy доступно только авторизованным пользователям.\nТип авторизации —BASICHTTP.\nМетоды API выполняются от имени того пользователя,\nкоторый авторизован. Имеются следующие типы авторизации:",
    "Авторизация пользователя по его логину и паролю приемлема в тех случаях,\nкогда приложение может знать текущий логин и пароль пользователя, например:\nПриложение предоставляет альтернативный интерфейс\nк некоторым модулям Synergy\n(мобильное приложение, десктопный клиент для хранилища)\nПриложение представляет собойserver-sideутилиту для синхронизации,\nдля которого создан выделенный пользователь,\nи его логин и пароль хранятся в конфигурационном файле на сервере.\nДля реализации данного типа авторизации надо передать в запросе заголовокAuthorizationсо значением:\nНапример:\nПример кода на JAVA:\nПример кода на JavaScript (jQuery):\nПример кода на PHP:",
    "Сессионная авторизации используется для встроенных WEB-модулей.\nПри cессионной авторизации также используется тип —BASICHTTP,\nно в качестве логина пользователя необходимо использовать\nзначение$sessionи в качестве пароля —\nполученное значениеsso_hash.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:\nПолучить значениеsso_hashавторизованного пользователя можно\nследующими способами:\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.Пример кода на JavaScript (jQuery):functiongetURLParameter(name){returndecodeURIComponent((newRegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[null,''])[1].replace(/\\+/g,'%20'))||null;}varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+getURLParameter('sso_hash')))}}$.ajax(settings).done(function(response){console.log(response);});\nВ случае если приложение представляет собойВнешний WEB-модуль, получить\nзначениеsso_hashможно из строки запроса.\nПример кода на JavaScript (jQuery):\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:{\"id\":\"Идентификатор текущего пользователя\",\"sso_hash\":\"hash-сумма для идентификации пользователя\",\"surname\":\"Фамилия текущего пользователя\",\"name\":\"Имя текущего пользователя\",\"patronymic\":\"Отчество текущего пользователя\"}Пример кода на JavaScript (jQuery):varsettings={\"async\":true,\"crossDomain\":true,\"url\":\"http://demo.arta.kz/Synergy/rest/api/admin/db/current_version\",\"method\":\"GET\",\"headers\":{\"authorization\":(\"Basic \"+btoa(\"$session\"+\":\"+$CURRENT_USER.sso_hash))}}$.ajax(settings).done(function(response){console.log(response);});ПримечаниеДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.\nС помощью переменной окружения$CURRENT_USERосновного WEB-приложения Synergy,\nкоторая представляет собой JSON-объект следующего вида:\nПример кода на JavaScript (jQuery):\nПримечание\nДанный способ можно использовать только если код исполняется\nв основном приложении Synergy. Например, приложение представляет\nсобойВнешний модуль-компонент.",
    "Модуль, который хочет авторизоваться от имени какого-либо пользователя таким способом,\nдолжен сгенерировать для него ключевую пару,\nобеспечив сохранность закрытого ключа.\nЗатем модуль сохраняет получивший открытый ключ для пользователя в Synergy,\nиспользуя следующий вызов API:\nЭтот вызов назначает ключ тому пользователю, от имени которого выполняется.\nПараметрuser_token_expire_intervalрегулирует интервал устаревания ключей авторизации.\nПример настройки интервала:\nПримечание\nИнтервал устаревания ключа указывается в минутах. Значение по умолчанию0, то есть если ранее для\nданного пользователя был сгенерирован другой ключ, то предыдущий автоматически становится недействительным.\nСоздать ключ можно только для существующего WEB-модуля,\nтак как для этого требуется идентификатор приложения.\nСовет\nЕсли у вас нет необходимости разрабатывать WEB модуль,\nно есть необходимость в использовании авторизации по ключам,\nможно добавить внешний модуль и отключить его использование\nв административном приложении SynergyAdmin для всех элементов оргструктуры.\nИспользование этого ключа для авторизации аналогично использованию сессионного ключа.\nТип авторизацииBasicHTTP,\nв качестве логина пользователя надо использовать строку$key,\nв качестве пароля — полученный с помощью API ключ.\nТаким образом заголовокAuthorizationдолжен иметь значение:\nНапример:",
    "Web-приложение внешнего модуля открывается\nвiframeв окне основного приложения.\nПри этом рабочая область внешнего модуля\nзанимает всю область страницы, кроме панели меню и панели задач:\nВнешний WEB-модуль\nДля добавления нового модуля нужно перейти в\nКонфигуратор ‣ Настройки системы ‣ Управление модулями ‣ Внешние модули\nи нажать на кнопку «Добавить».\nВнешние модули\nВ открывшемся окне нужно заполнить следующие поля:\n«Название»- название модуля в соответствующем интерфейсе.\n«Название»- название модуля в соответствующем интерфейсе.\n«Код»- поле должно содержать уникальное значение.\n«Код»- поле должно содержать уникальное значение.\n«Адрес приложения»- поле для ввода URL.\n«Адрес приложения»- поле для ввода URL.\n«Описание модуля»- поле для описания данного модуля.\n«Описание модуля»- поле для описания данного модуля.\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.Добавление нового внешнего модуля\n«Иконка»- задает иконку модуля в пользовательской подсистеме\n(по умолчанию внешний модуль имеет стандартную иконку). Для того,\nчтобы изменить стандартную иконку, нужно кликнуть по кнопке\n«Выберите файл» и в диалоге выбора файла указать файл формата PNG,\nразмер которого не превышает 28х26.\nДобавление нового внешнего модуля\nПодсказка\nДобавить внешний web-модуль можно с помощью SQL-запроса\nв БДsynergy.outer_modules, вставив запись со следующими полями:\nid— идентификатор модуля, должен совпадать с идентификаторомвашего проекта в репозитории проектов\nnameru,namekz,nameen— название модуля на русском,\nказахском и английском языках соответственно\nurl— адрес приложения\ndescription— описание модуля\nactive— активен ли модуль, 1/0.\nДля реализации механизмаSSOприложений,\nARTA Synergy при загрузке внешнего web-модуля будет в строку URL\nдобавлять три параметра:\nlocale— локаль авторизованного пользователя\nsso_hash— hash-сумма для идентификации пользователя.\nhost— адрес, с которого загружено приложение Synergy\nНапример, если URL приложения\nто при обращении к модулю будет вызываться\nИнтегрированный модуль должен будет будет получить из URL\nпараметрsso_hashи запросить по REST API у ARTA Synergy\nинформацию об авторизованном пользователе (идентификатор, имя).\nЕсли метод REST API возвращает информацию о пользователе,\nэто подтверждает, что данный пользователь\nдействительно авторизован с данного хоста, в данном браузере.\nДалее строкаsso_hashможет быть использована дляСессионная авторизацияи вызова REST API Arta Synergy.\nВ ARTA Synergy реализована возможность обращения к ее модулям по относительной ссылке.\nТакая же возможность существует для внешних web-модулей. Переход по ссылке вида:\n#submodule=outer&outerModuleID='код_модуля'&прочие_параметры_по_желанию_модуля\nактивирует в Synergy заданный модуль и передаст ему заданные в url-e параметры\n(параметрыlocale,sso_hash,hostтакже будут переданы,\nнесмотря на то, что они отсутствуют в ссылке).\nЧасто возникает необходимость в этой ссылке передать ссылку на текущий документ.\nДля этого можно добавить в ссылку параметр,\nзначение которого будет равно${docID}—\nэта строка в web-интерфейсе проигрывателя форм Synergy\nбудет заменена на идентификатор данного документа.",
    "В бизнес-приложениях на базе Synergy может возникнуть необходимость работы из\nвнешних систем с формами Synergy. В этом случае можно использовать внешний проигрыватель форм.\nПроигрыватель форм - это инструмент, который даёт возможность работать с формами,\nсозданными и используемыми в Synergy, а также выполняет скрипты. При использовании\nво внешней системе проигрыватель позволяет:\nотображать и редактировать формы Synergy;\nнастраивать произвольный вид формы и ее компонентов, создавать новые компоненты;\nавтоматически заполнять поля формы данными из внешней системы;\nобеспечивать обратную связь от проигрывателя к серверу, используя механизм событий;\nобрабатывать наступившие события.\nПримечание\nПроигрыватель форм запускается на стороне клиента, поэтому все события\nи скрипты срабатывают только при открытом проигрывателе.",
    "Для подключения проигрывателя на страницу необходимо добавить код в разделhead:<script>FORM_PLAYER_URL_PREFIX = \"http://127.0.0.1:8080/Synergy/\";<!--служебная переменная для корректной работы компонента \"HTD-редактор\"--></script><linkrel=\"stylesheet\"href=\"http://127.0.0.1:8080/Synergy/js/form.player.css\"/><!--стандартный стиль компонентов формы--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/vendor.js\"type=\"text/javascript\"></script><!--ссылка на сторонние библиотеки--><scriptsrc=\"http://127.0.0.1:8080/Synergy/js/form.player.js\"type=\"text/javascript\"></script><!--ссылка на проигрыватель форм-->и вставить элемент для размещения проигрывателя в тело страницы:<divid=\"form_player_container\"><divid=\"form_player_div\"></div></div>\nДля подключения проигрывателя на страницу необходимо добавить код в разделhead:\nи вставить элемент для размещения проигрывателя в тело страницы:\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";//ссылка на экземпляр SynergyСоздание объекта проигрывателя выглядит следующим образом:'use strict';AS.OPTIONS.locale=\"ru\";AS.OPTIONS.coreUrl=\"http://127.0.0.1:8080/Synergy/\";varportal={player:null,/*** очистить текущий проигрыватель форм*/clearPlayer:function(){if(portal.player){portal.player.destroy();}},/*** добавить новый проигрыватель форм*/createPlayer:function(formCode){portal.clearPlayer();portal.player=AS.FORMS.createPlayer();portal.player.showFormByCode(formCode);portal.player.view.appendTo($('#form_player_div'));}};$(document).ready(function(){AS.OPTIONS.login=\"login\";AS.OPTIONS.password=\"password\";portal.createPlayer(\"formCode\");});\nКод скрипта, который использует проигрыватель, должен содержать ссылку на Synergy:\nСоздание объекта проигрывателя выглядит следующим образом:\nСм. также документацию поСкриптинг в формах.",
    "В данном разделе описываются основные примеры использования внешнего\nпроигрывателя форм. Каждый пример отражает одно из базовых требований\nк внешнему проигрывателю и содержит:\nописание примера;\nреализованный пример внешнего проигрывателя форм, встроенного во внешний портал (в данном случае - в портал документации);\nа также исходные коды JavaScript и CSS этих примеров.\nПримеры использования внешнего проигрывателя форм:\n6.7.2.1. Вариант 1. Отображение проигрывателя, встроенного во внешний портал\n6.7.2.2. Вариант 2. Изменение вида отображения формы согласно стилю портала (CSS)\n6.7.2.3. Вариант 3. Автозаполнение данных формы из внешнего портала\n6.7.2.4. Вариант 4. Дополнительная валидация формы\n6.7.2.5. Вариант 5. Создание нового компонента\n6.7.2.6. Вариант 6. Предварительное заполнение данных формы внешним порталом\n6.7.2.7. Вариант 7. Изменение компонента формы\n6.7.2.8. Вариант 8. Авторизация во внешнем проигрывателе",
    "Ссылки на модули и различные объекты Synergy\nможно использовать как внутри основного web-приложения\n(в этом случае предпочтительно использовать относительные\nссылки, чтобы не перезагружать страницу), так и во внешних\nсистемах.\nОбщий вид ссылок:\nгде\nhost- доменное имя или ip-адрес сервера Synergy\nport- порт\nApplication:Synergy- основное приложениеConfigurator- КонфигураторSynergyAdmin- административное приложение\nSynergy- основное приложение\nConfigurator- Конфигуратор\nSynergyAdmin- административное приложение\nparam1,param2- параметры абсолютной ссылки\nparam3,param4- параметры относительной ссылки\nПараметры абсолютной ссылки - это, как правило:\nlocale- локаль загружаемой системы\nnocache- специальный параметр, предотвращающий случайное кэширование\nостальные параметры можно передавать как параметры относительной ссылки.\nНиже для краткости будем приводить образец относительной ссылки",
    "#submodule=module_id\nгдеmodule_id:\nworkflow- Потоки работ\ncalendar- Ежедневник\nrepository- Хранилище\nplans- Проекты\npointers- Цели и показатели\nemployees- Сотрудники\nПри переходе по ссылке откроется указанный модуль.",
    "#submodule=common&file_identifier=some_file_id&action=open_document&document_identifier=some_doc_id\nПри переходе по такой ссылке откроется указанный документ с основным файлом,\nа если указанfile_identifier- то откроется документ с этим файлом.",
    "#submodule=plans&action=open_action&action_identifier=some_action_id&project_identifier=some_project_id\nПри переходе по такой ссылке откроется указанный проект,\nа если указанaction_identifier- то в проекте будет выделено\nэто мероприятие.",
    "#submodule=employees&innermodule=structure&action=open_user&user_identifier=some_user_id\nПри переходе по такой ссылке будет открыт модуль «Сотрудники»,\nа в нем - профиль указанного пользователя",
    "Если в абсолютной ссылке указать параметрnoCustomScripting,\nто все пользовательские ВМК, скрипты в формах и пользовательских\nкомпонентах будут отключены. Это можно использовать для отладки\nпользовательских компонентов, ВМК и скриптов на форме.",
    "ARTA Synergy работает на сервере приложений JBoss AS7.\nИнтеграционное приложение может представлять собойjar-файл либоwar-файл либо их комбинацию.\nЕсли приложение является одиночным файлом, его можно задеплоить,\nскопировав в директорию${jboss.home}/standalone/deployments.\nЕсли приложение состоит из нескольких файлов,\nнеобходимо создать*.earприложение.\nЕсли приложение имеет зависимости на внешние библиотеки\nи они находятся в модулях JBoss-а (${jboss.home}/modules),\nнеобходимо использовать их, прочие зависимости — помещать внутрь приложения.\nОпасно\nВ целях безопасности работы приложения Synergy и сервера приложений\nкатегорически запрещается помещать артефакты интеграционного модуля\nв приложениеSynergy.earи изменять состав модулей (${jboss.home}/modules).",
    "Описание\nМодуль позволяет наглядно видеть все существующие сделки компании и следить за их продвижение по этапам.\nСсылка на скрипт:\nhttp://gitlab.lan.arta.kz/community/synergy-components/-/tree/master/constructor/components/%D0%9A%D0%B0%D0%BD%D0%B1%D0%B0%D0%BD-%D0%B4%D0%BE%D1%81%D0%BA%D0%B0",
    "Возможно ли автоматически заполнять поля «Номенклатура дел» в карточке исполнения по документу (выбор по умолчанию настраивает работник ИТ Заказчика) с возможностью корректировки вручную?\nДа, для этого необходимо разработать скрипт (с учетом логики автозаполнения)\nМожно ли в карточке документа указать зависимость связанных документов и ВНД, а также настроить и просматривать эти зависимости?\nДа, для этого необходимо добавить дополнительную форму и в ней указать ссылку на нужный реестр\nВозможно ли управление электронным архивом документов для ведения учета и статистики запросов и отражения ссылок на документы в отчетах, интегрировав его с внешними системами?\nДа, можно разработать интеграцию с необходимыми клиенту системами.\nМожно ли просмотреть актуальные версии приказа (например, «Производственные приказы») и предыдущие версии документа (до внесения изменений и дополнений), а также записи о полной или частичной утрате силы, ссылки на связанные приказы?\nДа, версии документов можно посмотреть в настройках форм.\nМожет ли пользователь сохранить поисковый запрос, чтобы в будущем заново его выполнить, выбрав из списка сохраненных запросов?\nНет, такая возможность в системе отсутствует\nМожет ли пользователь просматривать и сравнивать версии файлов, прикрепленных к карточке?\nВ карточке возможен только просмотр версии файла, без сравнения\nМожет ли пользователь создать поручение из файла Word (шаблон поручений), чтобы система распознала прописанный в нем контент (текст, исполнителей, срок исполнения) и создала поручения?\nПо умолчанию такой возможности нет. Для реализации необходимо дополнительно разрабатывать внешний модуль для парсинга текста.\nВозможно ли сохранение файла документа из приложений офисного пакета в архив документов?\nПо умолчанию - нет, возможно только при разработке дополнительной интеграции с офисом\nМожно ли сохранять сообщения электронной почты в виде .eml файла в СЭД непосредственно из клиента электронной почты?\nПо умолчанию - нет, возможно только при разработке дополнительной интеграции, при условии, что сам клиент электронной почты допускает такую возможность\nВозможно ли редактировать файлы формата Microsoft Office 2010, 2013, 2016 непосредственно из карточки документа, как локальными приложениями, так и через веб?\nДанную возможность планируется реализовать, но сроки реализации еще не определены\nМожно ли вернуться к предыдущей версии или версиям документа?\nДа, есть такая возможность\nМожно ли внести комментарий при создании версии документа?\nДа, есть такая возможность\nМожно ли сравнить разные версии документа*\nНет, можно только просмотреть имеющиеся версии\nКакое сжатие применяется к контенту при загрузке в хранилище Synergy?\nПри загрузке в Хранилище файлы не сжимаются\nМожет ли Synergy работать с инструментами распознавания текста, форм?\nМожет, для этого необходимо разрабатывать внешний модуль под конкретный инструмент распознавания.\nЕсть ли возможность локального сканирования документа из интерфейса формы?\nДа, есть такая возможность\nЕсть ли возможность коллективной (совместной) работы над документами (одновременное редактирование файлов) с отображением статусов редактирования и пользователей?\nНет, такая возможность в системе отсутствует\nЕсть ли возможность выбора регистрационного номера приказа вручную?\nДа, есть такая возможность\nВозможно ли настроить и управлять этапами жизненного цикла документа, а также настроить структуру переходов между этапами?\nДа, благодаря настраиваемым маршрутам в документах"
  ],
  "metadatas": [
    {
      "source": "1. Введение — 1. Введение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html"
    },
    {
      "source": "1. Введение — 1.1. Разработка новых и расширение существующих приложений¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html"
    },
    {
      "source": "1. Введение — 1.2. Основы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html"
    },
    {
      "source": "1. Введение — 1.2.1. Технологии¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html"
    },
    {
      "source": "1. Введение — 1.2.2. Архитектура¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html"
    },
    {
      "source": "1.1. Разработка новых и расширение существующих приложений — 1. Введение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html#id2"
    },
    {
      "source": "1.1. Разработка новых и расширение существующих приложений — 1.1. Разработка новых и расширение существующих приложений¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html#id2"
    },
    {
      "source": "1.1. Разработка новых и расширение существующих приложений — 1.2. Основы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html#id2"
    },
    {
      "source": "1.1. Разработка новых и расширение существующих приложений — 1.2.1. Технологии¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html#id2"
    },
    {
      "source": "1.1. Разработка новых и расширение существующих приложений — 1.2.2. Архитектура¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html#id2"
    },
    {
      "source": "1.2. Основы — 1. Введение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html#id3"
    },
    {
      "source": "1.2. Основы — 1.1. Разработка новых и расширение существующих приложений¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html#id3"
    },
    {
      "source": "1.2. Основы — 1.2. Основы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html#id3"
    },
    {
      "source": "1.2. Основы — 1.2.1. Технологии¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html#id3"
    },
    {
      "source": "1.2. Основы — 1.2.2. Архитектура¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/intro.html#id3"
    },
    {
      "source": "3. Скриптинг в формах — 3. Скриптинг в формах¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html"
    },
    {
      "source": "3. Скриптинг в формах — 3.1. Схемы работы проигрывателя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html"
    },
    {
      "source": "3. Скриптинг в формах — 3.2. Общедоступные объекты¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html"
    },
    {
      "source": "3. Скриптинг в формах — 3.3. Особенности реализации¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html"
    },
    {
      "source": "3. Скриптинг в формах — 3.4. Пользовательский компонент¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html"
    },
    {
      "source": "3. Скриптинг в формах — 3.5. Справочник API¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html"
    },
    {
      "source": "3.1. Схемы работы проигрывателя — 3. Скриптинг в формах¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id3"
    },
    {
      "source": "3.1. Схемы работы проигрывателя — 3.1. Схемы работы проигрывателя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id3"
    },
    {
      "source": "3.1. Схемы работы проигрывателя — 3.2. Общедоступные объекты¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id3"
    },
    {
      "source": "3.1. Схемы работы проигрывателя — 3.3. Особенности реализации¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id3"
    },
    {
      "source": "3.1. Схемы работы проигрывателя — 3.4. Пользовательский компонент¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id3"
    },
    {
      "source": "3.1. Схемы работы проигрывателя — 3.5. Справочник API¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id3"
    },
    {
      "source": "3.2. Общедоступные объекты — 3. Скриптинг в формах¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id4"
    },
    {
      "source": "3.2. Общедоступные объекты — 3.1. Схемы работы проигрывателя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id4"
    },
    {
      "source": "3.2. Общедоступные объекты — 3.2. Общедоступные объекты¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id4"
    },
    {
      "source": "3.2. Общедоступные объекты — 3.3. Особенности реализации¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id4"
    },
    {
      "source": "3.2. Общедоступные объекты — 3.4. Пользовательский компонент¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id4"
    },
    {
      "source": "3.2. Общедоступные объекты — 3.5. Справочник API¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id4"
    },
    {
      "source": "3.3. Особенности реализации — 3. Скриптинг в формах¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id5"
    },
    {
      "source": "3.3. Особенности реализации — 3.1. Схемы работы проигрывателя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id5"
    },
    {
      "source": "3.3. Особенности реализации — 3.2. Общедоступные объекты¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id5"
    },
    {
      "source": "3.3. Особенности реализации — 3.3. Особенности реализации¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id5"
    },
    {
      "source": "3.3. Особенности реализации — 3.4. Пользовательский компонент¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id5"
    },
    {
      "source": "3.3. Особенности реализации — 3.5. Справочник API¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id5"
    },
    {
      "source": "3.4. Пользовательский компонент — 3. Скриптинг в формах¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id6"
    },
    {
      "source": "3.4. Пользовательский компонент — 3.1. Схемы работы проигрывателя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id6"
    },
    {
      "source": "3.4. Пользовательский компонент — 3.2. Общедоступные объекты¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id6"
    },
    {
      "source": "3.4. Пользовательский компонент — 3.3. Особенности реализации¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id6"
    },
    {
      "source": "3.4. Пользовательский компонент — 3.4. Пользовательский компонент¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id6"
    },
    {
      "source": "3.4. Пользовательский компонент — 3.5. Справочник API¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#id6"
    },
    {
      "source": "3.5. Справочник API — 3. Скриптинг в формах¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#api"
    },
    {
      "source": "3.5. Справочник API — 3.1. Схемы работы проигрывателя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#api"
    },
    {
      "source": "3.5. Справочник API — 3.2. Общедоступные объекты¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#api"
    },
    {
      "source": "3.5. Справочник API — 3.3. Особенности реализации¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#api"
    },
    {
      "source": "3.5. Справочник API — 3.4. Пользовательский компонент¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#api"
    },
    {
      "source": "3.5. Справочник API — 3.5. Справочник API¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/form_scripting.html#api"
    },
    {
      "source": "4. Аналитические дашборды — 4. Аналитические дашборды¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.1. Введение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.2. Индексация данных форм в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.2.1. Названия индексов и alias-ы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.2.2. Структура документа в индексе¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.2.3. Индексы изменения данных (историчные индексы)¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.3.1. Шаблоны индексов¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.3.2. Создание диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.4. Использование диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.5.1. Status: Red¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.5.2. Русскоязычные данные импортировались в ES как «????»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.5.3. Записи в реестре не отображаются в Synergy, но видны в результатах поиска по реестру и в данных Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.5.4. При публикации дашбордов/диаграмм пользователи видят слева панель Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.5.5. При настроенной ссылке на дашборд/коду вставки HTML диаграммы не отображаются¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.5.6. Вместо диаграммы отображается сообщение «No results found»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.5.7. Диаграмма ссылается на недоступное поле¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.5.8. При обновлении данных в Synergy не обновляются соответствующие диаграммы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.5.9. После проведения индексации форм в Kibana отсутствуют данные форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4. Аналитические дашборды — 4.5.10. Не запускается Elasticsearch¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html"
    },
    {
      "source": "4.1. Введение — 4. Аналитические дашборды¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.1. Введение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.2. Индексация данных форм в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.2.1. Названия индексов и alias-ы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.2.2. Структура документа в индексе¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.2.3. Индексы изменения данных (историчные индексы)¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.3.1. Шаблоны индексов¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.3.2. Создание диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.4. Использование диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.5.1. Status: Red¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.5.2. Русскоязычные данные импортировались в ES как «????»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.5.3. Записи в реестре не отображаются в Synergy, но видны в результатах поиска по реестру и в данных Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.5.4. При публикации дашбордов/диаграмм пользователи видят слева панель Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.5.5. При настроенной ссылке на дашборд/коду вставки HTML диаграммы не отображаются¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.5.6. Вместо диаграммы отображается сообщение «No results found»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.5.7. Диаграмма ссылается на недоступное поле¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.5.8. При обновлении данных в Synergy не обновляются соответствующие диаграммы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.5.9. После проведения индексации форм в Kibana отсутствуют данные форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.1. Введение — 4.5.10. Не запускается Elasticsearch¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id2"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4. Аналитические дашборды¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.1. Введение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.2. Индексация данных форм в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.2.1. Названия индексов и alias-ы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.2.2. Структура документа в индексе¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.2.3. Индексы изменения данных (историчные индексы)¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.3.1. Шаблоны индексов¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.3.2. Создание диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.4. Использование диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.5.1. Status: Red¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.5.2. Русскоязычные данные импортировались в ES как «????»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.5.3. Записи в реестре не отображаются в Synergy, но видны в результатах поиска по реестру и в данных Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.5.4. При публикации дашбордов/диаграмм пользователи видят слева панель Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.5.5. При настроенной ссылке на дашборд/коду вставки HTML диаграммы не отображаются¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.5.6. Вместо диаграммы отображается сообщение «No results found»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.5.7. Диаграмма ссылается на недоступное поле¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.5.8. При обновлении данных в Synergy не обновляются соответствующие диаграммы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.5.9. После проведения индексации форм в Kibana отсутствуют данные форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.2. Индексация данных форм в ARTA Synergy — 4.5.10. Не запускается Elasticsearch¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#arta-synergy"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4. Аналитические дашборды¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.1. Введение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.2. Индексация данных форм в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.2.1. Названия индексов и alias-ы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.2.2. Структура документа в индексе¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.2.3. Индексы изменения данных (историчные индексы)¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.3.1. Шаблоны индексов¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.3.2. Создание диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.4. Использование диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.5.1. Status: Red¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.5.2. Русскоязычные данные импортировались в ES как «????»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.5.3. Записи в реестре не отображаются в Synergy, но видны в результатах поиска по реестру и в данных Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.5.4. При публикации дашбордов/диаграмм пользователи видят слева панель Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.5.5. При настроенной ссылке на дашборд/коду вставки HTML диаграммы не отображаются¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.5.6. Вместо диаграммы отображается сообщение «No results found»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.5.7. Диаграмма ссылается на недоступное поле¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.5.8. При обновлении данных в Synergy не обновляются соответствующие диаграммы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.5.9. После проведения индексации форм в Kibana отсутствуют данные форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.3. Визуализация данных в Kibana — 4.5.10. Не запускается Elasticsearch¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id13"
    },
    {
      "source": "4.4. Использование диаграмм — 4. Аналитические дашборды¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.1. Введение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.2. Индексация данных форм в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.2.1. Названия индексов и alias-ы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.2.2. Структура документа в индексе¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.2.3. Индексы изменения данных (историчные индексы)¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.3.1. Шаблоны индексов¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.3.2. Создание диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.4. Использование диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.5.1. Status: Red¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.5.2. Русскоязычные данные импортировались в ES как «????»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.5.3. Записи в реестре не отображаются в Synergy, но видны в результатах поиска по реестру и в данных Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.5.4. При публикации дашбордов/диаграмм пользователи видят слева панель Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.5.5. При настроенной ссылке на дашборд/коду вставки HTML диаграммы не отображаются¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.5.6. Вместо диаграммы отображается сообщение «No results found»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.5.7. Диаграмма ссылается на недоступное поле¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.5.8. При обновлении данных в Synergy не обновляются соответствующие диаграммы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.5.9. После проведения индексации форм в Kibana отсутствуют данные форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.4. Использование диаграмм — 4.5.10. Не запускается Elasticsearch¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id24"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4. Аналитические дашборды¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.1. Введение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.2. Индексация данных форм в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.2.1. Названия индексов и alias-ы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.2.2. Структура документа в индексе¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.2.3. Индексы изменения данных (историчные индексы)¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.3.1. Шаблоны индексов¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.3.2. Создание диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.4. Использование диаграмм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.5.1. Status: Red¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.5.2. Русскоязычные данные импортировались в ES как «????»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.5.3. Записи в реестре не отображаются в Synergy, но видны в результатах поиска по реестру и в данных Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.5.4. При публикации дашбордов/диаграмм пользователи видят слева панель Kibana¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.5.5. При настроенной ссылке на дашборд/коду вставки HTML диаграммы не отображаются¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.5.6. Вместо диаграммы отображается сообщение «No results found»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.5.7. Диаграмма ссылается на недоступное поле¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.5.8. При обновлении данных в Synergy не обновляются соответствующие диаграммы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.5.9. После проведения индексации форм в Kibana отсутствуют данные форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "4.5. Возможные проблемы и способы их решения — 4.5.10. Не запускается Elasticsearch¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/dashboards.html#id25"
    },
    {
      "source": "5. Пользовательские отчеты — 5. Пользовательские отчеты¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html"
    },
    {
      "source": "5. Пользовательские отчеты — 5.1. Системные требования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html"
    },
    {
      "source": "5. Пользовательские отчеты — 5.2. Установка и первоначальная настройка¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html"
    },
    {
      "source": "5. Пользовательские отчеты — 5.3. Создание отчета¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html"
    },
    {
      "source": "5. Пользовательские отчеты — 5.3.1. Отчет с использованием SQL-запроса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html"
    },
    {
      "source": "5. Пользовательские отчеты — 5.3.2. Отчет с использованием JSON¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html"
    },
    {
      "source": "5.1. Системные требования — 5. Пользовательские отчеты¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id2"
    },
    {
      "source": "5.1. Системные требования — 5.1. Системные требования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id2"
    },
    {
      "source": "5.1. Системные требования — 5.2. Установка и первоначальная настройка¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id2"
    },
    {
      "source": "5.1. Системные требования — 5.3. Создание отчета¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id2"
    },
    {
      "source": "5.1. Системные требования — 5.3.1. Отчет с использованием SQL-запроса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id2"
    },
    {
      "source": "5.1. Системные требования — 5.3.2. Отчет с использованием JSON¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id2"
    },
    {
      "source": "5.2. Установка и первоначальная настройка — 5. Пользовательские отчеты¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id3"
    },
    {
      "source": "5.2. Установка и первоначальная настройка — 5.1. Системные требования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id3"
    },
    {
      "source": "5.2. Установка и первоначальная настройка — 5.2. Установка и первоначальная настройка¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id3"
    },
    {
      "source": "5.2. Установка и первоначальная настройка — 5.3. Создание отчета¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id3"
    },
    {
      "source": "5.2. Установка и первоначальная настройка — 5.3.1. Отчет с использованием SQL-запроса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id3"
    },
    {
      "source": "5.2. Установка и первоначальная настройка — 5.3.2. Отчет с использованием JSON¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id3"
    },
    {
      "source": "5.3. Создание отчета — 5. Пользовательские отчеты¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id6"
    },
    {
      "source": "5.3. Создание отчета — 5.1. Системные требования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id6"
    },
    {
      "source": "5.3. Создание отчета — 5.2. Установка и первоначальная настройка¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id6"
    },
    {
      "source": "5.3. Создание отчета — 5.3. Создание отчета¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id6"
    },
    {
      "source": "5.3. Создание отчета — 5.3.1. Отчет с использованием SQL-запроса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id6"
    },
    {
      "source": "5.3. Создание отчета — 5.3.2. Отчет с использованием JSON¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/reports.html#id6"
    },
    {
      "source": "6. Способы интеграции — 6. Способы интеграции¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.1. Прямая интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.2. Событийная интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.3. Блокирующий процесс¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.3.1. Конфигурация блокирующего процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.4. Дополнительный обработчик для стандартного процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.4.1. Пример использования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.5. Способы авторизации в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.5.1. Авторизация по логину и паролю¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.5.2. Сессионная авторизация¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.5.3. Авторизация по ключам¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.6. Внешний WEB-модуль¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.7. Внешний проигрыватель форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.7.1. Подключение проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.7.2. Варианты использования внешнего проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.8. Ссылки на модули системы и их внутренние элементы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.8.1. Ссылка на модуль системы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.8.2. Ссылка на документ и файл в нём¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.8.3. Ссылка на проект и мероприятие в нем¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.8.4. Ссылка на профиль пользователя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.8.5. Отключение всего пользовательского клиентского скриптинга¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6. Способы интеграции — 6.9. Как задеплоить интеграционное приложение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html"
    },
    {
      "source": "6.1. Прямая интеграция — 6. Способы интеграции¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.1. Прямая интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.2. Событийная интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.3. Блокирующий процесс¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.3.1. Конфигурация блокирующего процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.4. Дополнительный обработчик для стандартного процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.4.1. Пример использования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.5. Способы авторизации в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.5.1. Авторизация по логину и паролю¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.5.2. Сессионная авторизация¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.5.3. Авторизация по ключам¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.6. Внешний WEB-модуль¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.7. Внешний проигрыватель форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.7.1. Подключение проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.7.2. Варианты использования внешнего проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.8. Ссылки на модули системы и их внутренние элементы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.8.1. Ссылка на модуль системы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.8.2. Ссылка на документ и файл в нём¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.8.3. Ссылка на проект и мероприятие в нем¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.8.4. Ссылка на профиль пользователя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.8.5. Отключение всего пользовательского клиентского скриптинга¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.1. Прямая интеграция — 6.9. Как задеплоить интеграционное приложение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id2"
    },
    {
      "source": "6.2. Событийная интеграция — 6. Способы интеграции¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.1. Прямая интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.2. Событийная интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.3. Блокирующий процесс¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.3.1. Конфигурация блокирующего процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.4. Дополнительный обработчик для стандартного процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.4.1. Пример использования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.5. Способы авторизации в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.5.1. Авторизация по логину и паролю¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.5.2. Сессионная авторизация¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.5.3. Авторизация по ключам¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.6. Внешний WEB-модуль¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.7. Внешний проигрыватель форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.7.1. Подключение проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.7.2. Варианты использования внешнего проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.8. Ссылки на модули системы и их внутренние элементы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.8.1. Ссылка на модуль системы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.8.2. Ссылка на документ и файл в нём¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.8.3. Ссылка на проект и мероприятие в нем¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.8.4. Ссылка на профиль пользователя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.8.5. Отключение всего пользовательского клиентского скриптинга¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.2. Событийная интеграция — 6.9. Как задеплоить интеграционное приложение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#event-integration"
    },
    {
      "source": "6.3. Блокирующий процесс — 6. Способы интеграции¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.1. Прямая интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.2. Событийная интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.3. Блокирующий процесс¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.3.1. Конфигурация блокирующего процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.4. Дополнительный обработчик для стандартного процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.4.1. Пример использования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.5. Способы авторизации в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.5.1. Авторизация по логину и паролю¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.5.2. Сессионная авторизация¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.5.3. Авторизация по ключам¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.6. Внешний WEB-модуль¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.7. Внешний проигрыватель форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.7.1. Подключение проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.7.2. Варианты использования внешнего проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.8. Ссылки на модули системы и их внутренние элементы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.8.1. Ссылка на модуль системы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.8.2. Ссылка на документ и файл в нём¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.8.3. Ссылка на проект и мероприятие в нем¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.8.4. Ссылка на профиль пользователя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.8.5. Отключение всего пользовательского клиентского скриптинга¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.3. Блокирующий процесс — 6.9. Как задеплоить интеграционное приложение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id5"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6. Способы интеграции¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.1. Прямая интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.2. Событийная интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.3. Блокирующий процесс¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.3.1. Конфигурация блокирующего процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.4. Дополнительный обработчик для стандартного процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.4.1. Пример использования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.5. Способы авторизации в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.5.1. Авторизация по логину и паролю¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.5.2. Сессионная авторизация¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.5.3. Авторизация по ключам¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.6. Внешний WEB-модуль¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.7. Внешний проигрыватель форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.7.1. Подключение проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.7.2. Варианты использования внешнего проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.8. Ссылки на модули системы и их внутренние элементы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.8.1. Ссылка на модуль системы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.8.2. Ссылка на документ и файл в нём¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.8.3. Ссылка на проект и мероприятие в нем¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.8.4. Ссылка на профиль пользователя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.8.5. Отключение всего пользовательского клиентского скриптинга¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.4. Дополнительный обработчик для стандартного процесса — 6.9. Как задеплоить интеграционное приложение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id7"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6. Способы интеграции¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.1. Прямая интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.2. Событийная интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.3. Блокирующий процесс¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.3.1. Конфигурация блокирующего процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.4. Дополнительный обработчик для стандартного процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.4.1. Пример использования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.5. Способы авторизации в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.5.1. Авторизация по логину и паролю¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.5.2. Сессионная авторизация¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.5.3. Авторизация по ключам¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.6. Внешний WEB-модуль¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.7. Внешний проигрыватель форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.7.1. Подключение проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.7.2. Варианты использования внешнего проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.8. Ссылки на модули системы и их внутренние элементы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.8.1. Ссылка на модуль системы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.8.2. Ссылка на документ и файл в нём¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.8.3. Ссылка на проект и мероприятие в нем¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.8.4. Ссылка на профиль пользователя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.8.5. Отключение всего пользовательского клиентского скриптинга¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.5. Способы авторизации в ARTA Synergy — 6.9. Как задеплоить интеграционное приложение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#arta-synergy"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6. Способы интеграции¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.1. Прямая интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.2. Событийная интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.3. Блокирующий процесс¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.3.1. Конфигурация блокирующего процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.4. Дополнительный обработчик для стандартного процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.4.1. Пример использования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.5. Способы авторизации в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.5.1. Авторизация по логину и паролю¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.5.2. Сессионная авторизация¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.5.3. Авторизация по ключам¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.6. Внешний WEB-модуль¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.7. Внешний проигрыватель форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.7.1. Подключение проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.7.2. Варианты использования внешнего проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.8. Ссылки на модули системы и их внутренние элементы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.8.1. Ссылка на модуль системы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.8.2. Ссылка на документ и файл в нём¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.8.3. Ссылка на проект и мероприятие в нем¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.8.4. Ссылка на профиль пользователя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.8.5. Отключение всего пользовательского клиентского скриптинга¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.6. Внешний WEB-модуль — 6.9. Как задеплоить интеграционное приложение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#web"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6. Способы интеграции¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.1. Прямая интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.2. Событийная интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.3. Блокирующий процесс¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.3.1. Конфигурация блокирующего процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.4. Дополнительный обработчик для стандартного процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.4.1. Пример использования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.5. Способы авторизации в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.5.1. Авторизация по логину и паролю¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.5.2. Сессионная авторизация¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.5.3. Авторизация по ключам¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.6. Внешний WEB-модуль¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.7. Внешний проигрыватель форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.7.1. Подключение проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.7.2. Варианты использования внешнего проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.8. Ссылки на модули системы и их внутренние элементы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.8.1. Ссылка на модуль системы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.8.2. Ссылка на документ и файл в нём¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.8.3. Ссылка на проект и мероприятие в нем¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.8.4. Ссылка на профиль пользователя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.8.5. Отключение всего пользовательского клиентского скриптинга¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.7. Внешний проигрыватель форм — 6.9. Как задеплоить интеграционное приложение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id12"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6. Способы интеграции¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.1. Прямая интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.2. Событийная интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.3. Блокирующий процесс¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.3.1. Конфигурация блокирующего процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.4. Дополнительный обработчик для стандартного процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.4.1. Пример использования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.5. Способы авторизации в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.5.1. Авторизация по логину и паролю¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.5.2. Сессионная авторизация¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.5.3. Авторизация по ключам¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.6. Внешний WEB-модуль¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.7. Внешний проигрыватель форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.7.1. Подключение проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.7.2. Варианты использования внешнего проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.8. Ссылки на модули системы и их внутренние элементы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.8.1. Ссылка на модуль системы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.8.2. Ссылка на документ и файл в нём¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.8.3. Ссылка на проект и мероприятие в нем¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.8.4. Ссылка на профиль пользователя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.8.5. Отключение всего пользовательского клиентского скриптинга¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.8. Ссылки на модули системы и их внутренние элементы — 6.9. Как задеплоить интеграционное приложение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id15"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6. Способы интеграции¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.1. Прямая интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.2. Событийная интеграция¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.3. Блокирующий процесс¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.3.1. Конфигурация блокирующего процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.4. Дополнительный обработчик для стандартного процесса¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.4.1. Пример использования¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.5. Способы авторизации в ARTA Synergy¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.5.1. Авторизация по логину и паролю¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.5.2. Сессионная авторизация¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.5.3. Авторизация по ключам¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.6. Внешний WEB-модуль¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.7. Внешний проигрыватель форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.7.1. Подключение проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.7.2. Варианты использования внешнего проигрывателя форм¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.8. Ссылки на модули системы и их внутренние элементы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.8.1. Ссылка на модуль системы¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.8.2. Ссылка на документ и файл в нём¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.8.3. Ссылка на проект и мероприятие в нем¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.8.4. Ссылка на профиль пользователя¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.8.5. Отключение всего пользовательского клиентского скриптинга¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "6.9. Как задеплоить интеграционное приложение — 6.9. Как задеплоить интеграционное приложение¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/integration.html#id21"
    },
    {
      "source": "7. Модуль «Kanban - доска» — 7. Модуль «Kanban - доска»¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/kanban.html"
    },
    {
      "source": "8. FAQ: часто задаваемые вопросы по платформе — 8. FAQ: часто задаваемые вопросы по платформе¶",
      "url": "http://rtd.lan.arta.kz/docs/guide/ru/minsky/faq.html"
    }
  ],
  "ids": [
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12",
    "13",
    "14",
    "15",
    "16",
    "17",
    "18",
    "19",
    "20",
    "21",
    "22",
    "23",
    "24",
    "25",
    "26",
    "27",
    "28",
    "29",
    "30",
    "31",
    "32",
    "33",
    "34",
    "35",
    "36",
    "37",
    "38",
    "39",
    "40",
    "41",
    "42",
    "43",
    "44",
    "45",
    "46",
    "47",
    "48",
    "49",
    "50",
    "51",
    "52",
    "53",
    "54",
    "55",
    "56",
    "57",
    "58",
    "59",
    "60",
    "61",
    "62",
    "63",
    "64",
    "65",
    "66",
    "67",
    "68",
    "69",
    "70",
    "71",
    "72",
    "73",
    "74",
    "75",
    "76",
    "77",
    "78",
    "79",
    "80",
    "81",
    "82",
    "83",
    "84",
    "85",
    "86",
    "87",
    "88",
    "89",
    "90",
    "91",
    "92",
    "93",
    "94",
    "95",
    "96",
    "97",
    "98",
    "99",
    "100",
    "101",
    "102",
    "103",
    "104",
    "105",
    "106",
    "107",
    "108",
    "109",
    "110",
    "111",
    "112",
    "113",
    "114",
    "115",
    "116",
    "117",
    "118",
    "119",
    "120",
    "121",
    "122",
    "123",
    "124",
    "125",
    "126",
    "127",
    "128",
    "129",
    "130",
    "131",
    "132",
    "133",
    "134",
    "135",
    "136",
    "137",
    "138",
    "139",
    "140",
    "141",
    "142",
    "143",
    "144",
    "145",
    "146",
    "147",
    "148",
    "149",
    "150",
    "151",
    "152",
    "153",
    "154",
    "155",
    "156",
    "157",
    "158",
    "159",
    "160",
    "161",
    "162",
    "163",
    "164",
    "165",
    "166",
    "167",
    "168",
    "169",
    "170",
    "171",
    "172",
    "173",
    "174",
    "175",
    "176",
    "177",
    "178",
    "179",
    "180",
    "181",
    "182",
    "183",
    "184",
    "185",
    "186",
    "187",
    "188",
    "189",
    "190",
    "191",
    "192",
    "193",
    "194",
    "195",
    "196",
    "197",
    "198",
    "199",
    "200",
    "201",
    "202",
    "203",
    "204",
    "205",
    "206",
    "207",
    "208",
    "209",
    "210",
    "211",
    "212",
    "213",
    "214",
    "215",
    "216",
    "217",
    "218",
    "219",
    "220",
    "221",
    "222",
    "223",
    "224",
    "225",
    "226",
    "227",
    "228",
    "229",
    "230",
    "231",
    "232",
    "233",
    "234",
    "235",
    "236",
    "237",
    "238",
    "239",
    "240",
    "241",
    "242",
    "243",
    "244",
    "245",
    "246",
    "247",
    "248",
    "249",
    "250",
    "251",
    "252",
    "253",
    "254",
    "255",
    "256",
    "257",
    "258",
    "259",
    "260",
    "261",
    "262",
    "263",
    "264",
    "265",
    "266",
    "267",
    "268",
    "269",
    "270",
    "271",
    "272",
    "273",
    "274",
    "275",
    "276",
    "277",
    "278",
    "279",
    "280",
    "281",
    "282",
    "283",
    "284",
    "285",
    "286",
    "287",
    "288",
    "289",
    "290",
    "291",
    "292",
    "293",
    "294",
    "295",
    "296",
    "297",
    "298",
    "299",
    "300",
    "301",
    "302",
    "303",
    "304",
    "305",
    "306",
    "307",
    "308",
    "309",
    "310",
    "311",
    "312",
    "313",
    "314",
    "315",
    "316",
    "317",
    "318",
    "319",
    "320",
    "321",
    "322",
    "323",
    "324",
    "325",
    "326",
    "327",
    "328",
    "329",
    "330",
    "331",
    "332",
    "333",
    "334",
    "335",
    "336",
    "337",
    "338",
    "339",
    "340",
    "341",
    "342",
    "343",
    "344",
    "345",
    "346",
    "347",
    "348",
    "349",
    "350",
    "351",
    "352",
    "353",
    "354",
    "355",
    "356",
    "357",
    "358",
    "359",
    "360",
    "361",
    "362",
    "363",
    "364",
    "365",
    "366",
    "367",
    "368",
    "369",
    "370",
    "371",
    "372",
    "373",
    "374",
    "375",
    "376",
    "377",
    "378",
    "379",
    "380",
    "381",
    "382",
    "383",
    "384",
    "385",
    "386",
    "387",
    "388",
    "389",
    "390",
    "391",
    "392",
    "393",
    "394",
    "395",
    "396",
    "397",
    "398",
    "399",
    "400",
    "401",
    "402",
    "403",
    "404",
    "405",
    "406",
    "407",
    "408",
    "409",
    "410",
    "411"
  ]
}